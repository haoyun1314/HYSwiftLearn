{\rtf1\ansi\ansicpg936\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;\f2\fnil\fcharset134 PingFangSC-Regular;
}
{\colortbl;\red255\green255\blue255;\red38\green117\blue7;\red255\green255\blue255;\red0\green0\blue0;
\red155\green35\blue147;\red11\green79\blue121;\red57\green0\blue160;\red15\green104\blue160;\red28\green0\blue207;
\red50\green109\blue116;\red108\green54\blue169;\red28\green70\blue74;\red196\green26\blue22;}
{\*\expandedcolortbl;;\csgenericrgb\c14771\c45953\c2591;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0\c85000;
\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c4477\c31152\c47474;\csgenericrgb\c22454\c0\c62803;\csgenericrgb\c5696\c40622\c62817;\csgenericrgb\c11000\c0\c81000;
\csgenericrgb\c19418\c42935\c45455;\csgenericrgb\c42190\c21278\c66379;\csgenericrgb\c10981\c27276\c28869;\csgenericrgb\c77000\c10200\c8600;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 //\cf4 \
\cf2 //  Methods.swift\cf4 \
\cf2 //  Methods\cf4 \
\cf2 //\cf4 \
\cf2 //  Created by dyf on 2017/10/10.\cf4 \
\cf2 //  Copyright \'a9 2017 dyf. All rights reserved.\cf4 \
\cf2 //\cf4 \
\

\f1\b \cf5 import
\f0\b0 \cf4  UIKit\
\

\f1\b \cf5 class
\f0\b0 \cf4  \cf6 Methods\cf4 : \cf7 NSObject\cf4  \{\
    \
    
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 execute\cf4 () -> \cf7 Void\cf4  \{\
\cf2 //        
\f2 \'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8
\f0 \cf4 \
\cf2 //        
\f2 \'c0\'e0\'d0\'cd\'b7\'bd\'b7\'a8
\f0 \cf4 \
        \
\cf2 //        
\f2 \'b7\'bd\'b7\'a8\'ca\'c7\'d3\'eb\'c4\'b3\'d0\'a9\'cc\'d8\'b6\'a8\'c0\'e0\'d0\'cd\'cf\'e0\'b9\'d8\'c1\'aa\'b5\'c4\'ba\'af\'ca\'fd\'a1\'a3\'c0\'e0\'a1\'a2\'bd\'e1\'b9\'b9\'cc\'e5\'a1\'a2\'c3\'b6\'be\'d9\'b6\'bc\'bf\'c9\'d2\'d4\'b6\'a8\'d2\'e5\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'a3\'bb\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'ce\'aa\'b8\'f8\'b6\'a8\'c0\'e0\'d0\'cd\'b5\'c4\'ca\'b5\'c0\'fd\'b7\'e2\'d7\'b0\'c1\'cb\'be\'df\'cc\'e5\'b5\'c4\'c8\'ce\'ce\'f1\'d3\'eb\'b9\'a6\'c4\'dc\'a1\'a3\'c0\'e0\'a1\'a2\'bd\'e1\'b9\'b9\'cc\'e5\'a1\'a2\'c3\'b6\'be\'d9\'d2\'b2\'bf\'c9\'d2\'d4\'b6\'a8\'d2\'e5\'c0\'e0\'d0\'cd\'b7\'bd\'b7\'a8\'a3\'bb\'c0\'e0\'d0\'cd\'b7\'bd\'b7\'a8\'d3\'eb\'c0\'e0\'d0\'cd\'b1\'be\'c9\'ed\'cf\'e0\'b9\'d8\'c1\'aa\'a1\'a3\'c0\'e0\'d0\'cd\'b7\'bd\'b7\'a8\'d3\'eb
\f0  Objective-C 
\f2 \'d6\'d0\'b5\'c4\'c0\'e0\'b7\'bd\'b7\'a8\'a3\'a8
\f0 class methods
\f2 \'a3\'a9\'cf\'e0\'cb\'c6\'a1\'a3
\f0 \cf4 \
        \
\cf2 //        
\f2 \'bd\'e1\'b9\'b9\'cc\'e5\'ba\'cd\'c3\'b6\'be\'d9\'c4\'dc\'b9\'bb\'b6\'a8\'d2\'e5\'b7\'bd\'b7\'a8\'ca\'c7
\f0  Swift 
\f2 \'d3\'eb
\f0  C/Objective-C 
\f2 \'b5\'c4\'d6\'f7\'d2\'aa\'c7\'f8\'b1\'f0\'d6\'ae\'d2\'bb\'a1\'a3\'d4\'da
\f0  Objective-C 
\f2 \'d6\'d0\'a3\'ac\'c0\'e0\'ca\'c7\'ce\'a8\'d2\'bb\'c4\'dc\'b6\'a8\'d2\'e5\'b7\'bd\'b7\'a8\'b5\'c4\'c0\'e0\'d0\'cd\'a1\'a3\'b5\'ab\'d4\'da
\f0  Swift 
\f2 \'d6\'d0\'a3\'ac\'c4\'e3\'b2\'bb\'bd\'f6\'c4\'dc\'d1\'a1\'d4\'f1\'ca\'c7\'b7\'f1\'d2\'aa\'b6\'a8\'d2\'e5\'d2\'bb\'b8\'f6\'c0\'e0
\f0 /
\f2 \'bd\'e1\'b9\'b9\'cc\'e5
\f0 /
\f2 \'c3\'b6\'be\'d9\'a3\'ac\'bb\'b9\'c4\'dc\'c1\'e9\'bb\'ee\'b5\'d8\'d4\'da\'c4\'e3\'b4\'b4\'bd\'a8\'b5\'c4\'c0\'e0\'d0\'cd\'a3\'a8\'c0\'e0
\f0 /
\f2 \'bd\'e1\'b9\'b9\'cc\'e5
\f0 /
\f2 \'c3\'b6\'be\'d9\'a3\'a9\'c9\'cf\'b6\'a8\'d2\'e5\'b7\'bd\'b7\'a8\'a1\'a3
\f0 \cf4 \
        \
\cf2 //        
\f2 \'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8
\f0  (Instance Methods)\cf4 \
\cf2 //        
\f2 \'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'ca\'c7\'ca\'f4\'d3\'da\'c4\'b3\'b8\'f6\'cc\'d8\'b6\'a8\'c0\'e0\'a1\'a2\'bd\'e1\'b9\'b9\'cc\'e5\'bb\'f2\'d5\'df\'c3\'b6\'be\'d9\'c0\'e0\'d0\'cd\'ca\'b5\'c0\'fd\'b5\'c4\'b7\'bd\'b7\'a8\'a1\'a3\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'cc\'e1\'b9\'a9\'b7\'c3\'ce\'ca\'ba\'cd\'d0\'de\'b8\'c4\'ca\'b5\'c0\'fd\'ca\'f4\'d0\'d4\'b5\'c4\'b7\'bd\'b7\'a8\'bb\'f2\'cc\'e1\'b9\'a9\'d3\'eb\'ca\'b5\'c0\'fd\'c4\'bf\'b5\'c4\'cf\'e0\'b9\'d8\'b5\'c4\'b9\'a6\'c4\'dc\'a3\'ac\'b2\'a2\'d2\'d4\'b4\'cb\'c0\'b4\'d6\'a7\'b3\'c5\'ca\'b5\'c0\'fd\'b5\'c4\'b9\'a6\'c4\'dc\'a1\'a3\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'b5\'c4\'d3\'ef\'b7\'a8\'d3\'eb\'ba\'af\'ca\'fd\'cd\'ea\'c8\'ab\'d2\'bb\'d6\'c2\'a3\'ac\'cf\'ea\'c7\'e9\'b2\'ce\'bc\'fb\'ba\'af\'ca\'fd\'a1\'a3
\f0 \cf4 \
        \
\cf2 //        
\f2 \'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'d2\'aa\'d0\'b4\'d4\'da\'cb\'fc\'cb\'f9\'ca\'f4\'b5\'c4\'c0\'e0\'d0\'cd\'b5\'c4\'c7\'b0\'ba\'f3\'b4\'f3\'c0\'a8\'ba\'c5\'d6\'ae\'bc\'e4\'a1\'a3\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'c4\'dc\'b9\'bb\'d2\'fe\'ca\'bd\'b7\'c3\'ce\'ca\'cb\'fc\'cb\'f9\'ca\'f4\'c0\'e0\'d0\'cd\'b5\'c4\'cb\'f9\'d3\'d0\'b5\'c4\'c6\'e4\'cb\'fb\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'ba\'cd\'ca\'f4\'d0\'d4\'a1\'a3\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'d6\'bb\'c4\'dc\'b1\'bb\'cb\'fc\'cb\'f9\'ca\'f4\'b5\'c4\'c0\'e0\'b5\'c4\'c4\'b3\'b8\'f6\'cc\'d8\'b6\'a8\'ca\'b5\'c0\'fd\'b5\'f7\'d3\'c3\'a1\'a3\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'b2\'bb\'c4\'dc\'cd\'d1\'c0\'eb\'d3\'da\'cf\'d6\'b4\'e6\'b5\'c4\'ca\'b5\'c0\'fd\'b6\'f8\'b1\'bb\'b5\'f7\'d3\'c3\'a1\'a3
\f0 \cf4 \
        \
\cf2 //        
\f2 \'cf\'c2\'c3\'e6\'b5\'c4\'c0\'fd\'d7\'d3\'a3\'ac\'b6\'a8\'d2\'e5\'d2\'bb\'b8\'f6\'ba\'dc\'bc\'f2\'b5\'a5\'b5\'c4
\f0 Counter
\f2 \'c0\'e0\'a3\'ac
\f0 Counter
\f2 \'c4\'dc\'b1\'bb\'d3\'c3\'c0\'b4\'b6\'d4\'d2\'bb\'b8\'f6\'b6\'af\'d7\'f7\'b7\'a2\'c9\'fa\'b5\'c4\'b4\'ce\'ca\'fd\'bd\'f8\'d0\'d0\'bc\'c6\'ca\'fd\'a3\'ba
\f0 \cf4 \
        
\f1\b \cf5 class
\f0\b0 \cf4  \cf6 Counter\cf4  \{\
            
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 count\cf4 : \cf7 Int\cf4  = \cf9 0\cf4 \
            \
            
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 increment\cf4 () -> \cf7 Void\cf4  \{\
                \cf10 count\cf4  \cf11 +=\cf4  \cf9 1\cf4 \
            \}\
            \
            
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 increment\cf4 (by amount: \cf7 Int\cf4 ) \{\
                \cf10 count\cf4  \cf11 +=\cf4  amount\
            \}\
        \
            
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 reset\cf4 () \{\
                \cf10 count\cf4  = \cf9 0\cf4 \
            \}\
        \}\
        \
\cf2 //        Counter
\f2 \'d5\'e2\'b8\'f6\'c0\'e0\'bb\'b9\'c9\'f9\'c3\'f7\'c1\'cb\'d2\'bb\'b8\'f6\'bf\'c9\'b1\'e4\'ca\'f4\'d0\'d4
\f0 count
\f2 \'a3\'ac\'d3\'c3\'cb\'fc\'c0\'b4\'b1\'a3\'b3\'d6\'b6\'d4\'b5\'b1\'c7\'b0\'bc\'c6\'ca\'fd\'c6\'f7\'d6\'b5\'b5\'c4\'d7\'b7\'d7\'d9\'a1\'a3
\f0 \cf4 \
        \
\cf2 //        
\f2 \'ba\'cd\'b5\'f7\'d3\'c3\'ca\'f4\'d0\'d4\'d2\'bb\'d1\'f9\'a3\'ac\'d3\'c3\'b5\'e3\'d3\'ef\'b7\'a8\'a3\'a8
\f0 dot syntax
\f2 \'a3\'a9\'b5\'f7\'d3\'c3\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'a3\'ba
\f0 \cf4 \
        
\f1\b \cf5 let
\f0\b0 \cf4  counter = \cf12 Counter\cf4 ()\
        \cf2 // 
\f2 \'b3\'f5\'ca\'bc\'bc\'c6\'ca\'fd\'d6\'b5\'ca\'c7
\f0 0\cf4 \
        counter.\cf10 increment\cf4 ()\
        \cf2 // 
\f2 \'bc\'c6\'ca\'fd\'d6\'b5\'cf\'d6\'d4\'da\'ca\'c7
\f0 1\cf4 \
        counter.\cf10 increment\cf4 (by: \cf9 5\cf4 )\
        \cf2 // 
\f2 \'bc\'c6\'ca\'fd\'d6\'b5\'cf\'d6\'d4\'da\'ca\'c7
\f0 6\cf4 \
        counter.\cf10 reset\cf4 ()\
        \cf2 // 
\f2 \'bc\'c6\'ca\'fd\'d6\'b5\'cf\'d6\'d4\'da\'ca\'c7
\f0 0\cf4 \
        \
\cf2 //        
\f2 \'ba\'af\'ca\'fd\'b2\'ce\'ca\'fd\'bf\'c9\'d2\'d4\'cd\'ac\'ca\'b1\'d3\'d0\'d2\'bb\'b8\'f6\'be\'d6\'b2\'bf\'c3\'fb\'b3\'c6\'a3\'a8\'d4\'da\'ba\'af\'ca\'fd\'cc\'e5\'c4\'da\'b2\'bf\'ca\'b9\'d3\'c3\'a3\'a9\'ba\'cd\'d2\'bb\'b8\'f6\'cd\'e2\'b2\'bf\'c3\'fb\'b3\'c6\'a3\'a8\'d4\'da\'b5\'f7\'d3\'c3\'ba\'af\'ca\'fd\'ca\'b1\'ca\'b9\'d3\'c3\'a3\'a9\'a3\'ac\'cf\'ea\'c7\'e9\'b2\'ce\'bc\'fb\'d6\'b8\'b6\'a8\'cd\'e2\'b2\'bf\'b2\'ce\'ca\'fd\'c3\'fb\'a1\'a3\'b7\'bd\'b7\'a8\'b2\'ce\'ca\'fd\'d2\'b2\'d2\'bb\'d1\'f9\'a3\'ac\'d2\'f2\'ce\'aa\'b7\'bd\'b7\'a8\'be\'cd\'ca\'c7\'ba\'af\'ca\'fd\'a3\'ac\'d6\'bb\'ca\'c7\'d5\'e2\'b8\'f6\'ba\'af\'ca\'fd\'d3\'eb\'c4\'b3\'b8\'f6\'c0\'e0\'d0\'cd\'cf\'e0\'b9\'d8\'c1\'aa\'c1\'cb\'a1\'a3
\f0 \cf4 \
        \
\cf2 //        self 
\f2 \'ca\'f4\'d0\'d4
\f0 \cf4 \
\cf2 //        
\f2 \'c0\'e0\'d0\'cd\'b5\'c4\'c3\'bf\'d2\'bb\'b8\'f6\'ca\'b5\'c0\'fd\'b6\'bc\'d3\'d0\'d2\'bb\'b8\'f6\'d2\'fe\'ba\'ac\'ca\'f4\'d0\'d4\'bd\'d0\'d7\'f6
\f0 self
\f2 \'a3\'ac
\f0 self
\f2 \'cd\'ea\'c8\'ab\'b5\'c8\'cd\'ac\'d3\'da\'b8\'c3\'ca\'b5\'c0\'fd\'b1\'be\'c9\'ed\'a1\'a3\'c4\'e3\'bf\'c9\'d2\'d4\'d4\'da\'d2\'bb\'b8\'f6\'ca\'b5\'c0\'fd\'b5\'c4\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'d6\'d0\'ca\'b9\'d3\'c3\'d5\'e2\'b8\'f6\'d2\'fe\'ba\'ac\'b5\'c4
\f0 self
\f2 \'ca\'f4\'d0\'d4\'c0\'b4\'d2\'fd\'d3\'c3\'b5\'b1\'c7\'b0\'ca\'b5\'c0\'fd\'a1\'a3\

\f0 \cf4 \
        
\f1\b \cf5 class
\f0\b0 \cf4  \cf6 Counter2\cf4  \{\
            
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 count\cf4 : \cf7 Int\cf4  = \cf9 0\cf4 \
            \
            
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 increment\cf4 () \{\
                
\f1\b \cf5 self
\f0\b0 \cf4 .\cf10 count\cf4  \cf11 +=\cf4  \cf9 1\cf4 \
            \}\
        \}\
        \
\cf2 //        
\f2 \'c4\'e3\'b2\'bb\'b1\'d8\'d4\'da\'c4\'e3\'b5\'c4\'b4\'fa\'c2\'eb\'c0\'ef\'c3\'e6\'be\'ad\'b3\'a3\'d0\'b4
\f0 self
\f2 \'a1\'a3\'b2\'bb\'c2\'db\'ba\'ce\'ca\'b1\'a3\'ac\'d6\'bb\'d2\'aa\'d4\'da\'d2\'bb\'b8\'f6\'b7\'bd\'b7\'a8\'d6\'d0\'ca\'b9\'d3\'c3\'d2\'bb\'b8\'f6\'d2\'d1\'d6\'aa\'b5\'c4\'ca\'f4\'d0\'d4\'bb\'f2\'d5\'df\'b7\'bd\'b7\'a8\'c3\'fb\'b3\'c6\'a3\'ac\'c8\'e7\'b9\'fb\'c4\'e3\'c3\'bb\'d3\'d0\'c3\'f7\'c8\'b7\'b5\'d8\'d0\'b4
\f0 self
\f2 \'a3\'ac
\f0 Swift 
\f2 \'bc\'d9\'b6\'a8\'c4\'e3\'ca\'c7\'d6\'b8\'b5\'b1\'c7\'b0\'ca\'b5\'c0\'fd\'b5\'c4\'ca\'f4\'d0\'d4\'bb\'f2\'d5\'df\'b7\'bd\'b7\'a8\'a1\'a3\'d5\'e2\'d6\'d6\'bc\'d9\'b6\'a8\'d4\'da\'c9\'cf\'c3\'e6\'b5\'c4
\f0 Counter
\f2 \'d6\'d0\'d2\'d1\'be\'ad\'ca\'be\'b7\'b6\'c1\'cb\'a3\'ba
\f0 Counter
\f2 \'d6\'d0\'b5\'c4\'c8\'fd\'b8\'f6\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'d6\'d0\'b6\'bc\'ca\'b9\'d3\'c3\'b5\'c4\'ca\'c7
\f0 count
\f2 \'a3\'a8\'b6\'f8\'b2\'bb\'ca\'c7
\f0 self.count
\f2 \'a3\'a9\'a1\'a3
\f0 \cf4 \
        \
\cf2 //        
\f2 \'ca\'b9\'d3\'c3\'d5\'e2\'cc\'f5\'b9\'e6\'d4\'f2\'b5\'c4\'d6\'f7\'d2\'aa\'b3\'a1\'be\'b0\'ca\'c7\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'b5\'c4\'c4\'b3\'b8\'f6\'b2\'ce\'ca\'fd\'c3\'fb\'b3\'c6\'d3\'eb\'ca\'b5\'c0\'fd\'b5\'c4\'c4\'b3\'b8\'f6\'ca\'f4\'d0\'d4\'c3\'fb\'b3\'c6\'cf\'e0\'cd\'ac\'b5\'c4\'ca\'b1\'ba\'f2\'a1\'a3\'d4\'da\'d5\'e2\'d6\'d6\'c7\'e9\'bf\'f6\'cf\'c2\'a3\'ac\'b2\'ce\'ca\'fd\'c3\'fb\'b3\'c6\'cf\'ed\'d3\'d0\'d3\'c5\'cf\'c8\'c8\'a8\'a3\'ac\'b2\'a2\'c7\'d2\'d4\'da\'d2\'fd\'d3\'c3\'ca\'f4\'d0\'d4\'ca\'b1\'b1\'d8\'d0\'eb\'ca\'b9\'d3\'c3\'d2\'bb\'d6\'d6\'b8\'fc\'d1\'cf\'b8\'f1\'b5\'c4\'b7\'bd\'ca\'bd\'a1\'a3\'d5\'e2\'ca\'b1\'c4\'e3\'bf\'c9\'d2\'d4\'ca\'b9\'d3\'c3
\f0 self
\f2 \'ca\'f4\'d0\'d4\'c0\'b4\'c7\'f8\'b7\'d6\'b2\'ce\'ca\'fd\'c3\'fb\'b3\'c6\'ba\'cd\'ca\'f4\'d0\'d4\'c3\'fb\'b3\'c6\'a1\'a3
\f0 \cf4 \
        \
\cf2 //        
\f2 \'cf\'c2\'c3\'e6\'b5\'c4\'c0\'fd\'d7\'d3\'d6\'d0\'a3\'ac
\f0 self
\f2 \'cf\'fb\'b3\'fd\'b7\'bd\'b7\'a8\'b2\'ce\'ca\'fd
\f0 x
\f2 \'ba\'cd\'ca\'b5\'c0\'fd\'ca\'f4\'d0\'d4
\f0 x
\f2 \'d6\'ae\'bc\'e4\'b5\'c4\'c6\'e7\'d2\'e5\'a3\'ba
\f0 \cf4 \
        \
        
\f1\b \cf5 struct
\f0\b0 \cf4  \cf6 Point\cf4  \{\
            
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 x\cf4  = \cf9 0.0\cf4 , \cf8 y\cf4  = \cf9 0.0\cf4 \
            
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 isToTheRightOfX\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  x: \cf7 Double\cf4 ) -> \cf7 Bool\cf4  \{\
                
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 self
\f0\b0 \cf4 .\cf10 x\cf4  > x\
            \}\
        \}\
        
\f1\b \cf5 let
\f0\b0 \cf4  somePoint = \cf12 Point\cf4 (x: \cf9 4.0\cf4 , y: \cf9 5.0\cf4 )\
        
\f1\b \cf5 if
\f0\b0 \cf4  somePoint.\cf10 isToTheRightOfX\cf4 (\cf9 1.0\cf4 ) \{\
            \cf11 print\cf4 (\cf13 "This point is to the right of the line where x == 1.0"\cf4 )\
        \}\
        \cf2 // 
\f2 \'b4\'f2\'d3\'a1
\f0  "This point is to the right of the line where x == 1.0"\cf4 \
\cf2 //        
\f2 \'c8\'e7\'b9\'fb\'b2\'bb\'ca\'b9\'d3\'c3
\f0 self
\f2 \'c7\'b0\'d7\'ba\'a3\'ac
\f0 Swift 
\f2 \'be\'cd\'c8\'cf\'ce\'aa\'c1\'bd\'b4\'ce\'ca\'b9\'d3\'c3\'b5\'c4
\f0 x
\f2 \'b6\'bc\'d6\'b8\'b5\'c4\'ca\'c7\'c3\'fb\'b3\'c6\'ce\'aa
\f0 x
\f2 \'b5\'c4\'ba\'af\'ca\'fd\'b2\'ce\'ca\'fd\'a1\'a3
\f0 \cf4 \
        \
\cf2 //        
\f2 \'d4\'da\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'d6\'d0\'d0\'de\'b8\'c4\'d6\'b5\'c0\'e0\'d0\'cd
\f0 \cf4 \
\cf2 //        
\f2 \'bd\'e1\'b9\'b9\'cc\'e5\'ba\'cd\'c3\'b6\'be\'d9\'ca\'c7\'d6\'b5\'c0\'e0\'d0\'cd\'a1\'a3\'c4\'ac\'c8\'cf\'c7\'e9\'bf\'f6\'cf\'c2\'a3\'ac\'d6\'b5\'c0\'e0\'d0\'cd\'b5\'c4\'ca\'f4\'d0\'d4\'b2\'bb\'c4\'dc\'d4\'da\'cb\'fc\'b5\'c4\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'d6\'d0\'b1\'bb\'d0\'de\'b8\'c4\'a1\'a3
\f0 \cf4 \
        \
\cf2 //        
\f2 \'b5\'ab\'ca\'c7\'a3\'ac\'c8\'e7\'b9\'fb\'c4\'e3\'c8\'b7\'ca\'b5\'d0\'e8\'d2\'aa\'d4\'da\'c4\'b3\'b8\'f6\'cc\'d8\'b6\'a8\'b5\'c4\'b7\'bd\'b7\'a8\'d6\'d0\'d0\'de\'b8\'c4\'bd\'e1\'b9\'b9\'cc\'e5\'bb\'f2\'d5\'df\'c3\'b6\'be\'d9\'b5\'c4\'ca\'f4\'d0\'d4\'a3\'ac\'c4\'e3\'bf\'c9\'d2\'d4\'ce\'aa\'d5\'e2\'b8\'f6\'b7\'bd\'b7\'a8\'d1\'a1\'d4\'f1\'bf\'c9\'b1\'e4
\f0 (mutating)
\f2 \'d0\'d0\'ce\'aa\'a3\'ac\'c8\'bb\'ba\'f3\'be\'cd\'bf\'c9\'d2\'d4\'b4\'d3\'c6\'e4\'b7\'bd\'b7\'a8\'c4\'da\'b2\'bf\'b8\'c4\'b1\'e4\'cb\'fc\'b5\'c4\'ca\'f4\'d0\'d4\'a3\'bb\'b2\'a2\'c7\'d2\'d5\'e2\'b8\'f6\'b7\'bd\'b7\'a8\'d7\'f6\'b5\'c4\'c8\'ce\'ba\'ce\'b8\'c4\'b1\'e4\'b6\'bc\'bb\'e1\'d4\'da\'b7\'bd\'b7\'a8\'d6\'b4\'d0\'d0\'bd\'e1\'ca\'f8\'ca\'b1\'d0\'b4\'bb\'d8\'b5\'bd\'d4\'ad\'ca\'bc\'bd\'e1\'b9\'b9\'d6\'d0\'a1\'a3\'b7\'bd\'b7\'a8\'bb\'b9\'bf\'c9\'d2\'d4\'b8\'f8\'cb\'fc\'d2\'fe\'ba\'ac\'b5\'c4
\f0 self
\f2 \'ca\'f4\'d0\'d4\'b8\'b3\'d3\'e8\'d2\'bb\'b8\'f6\'c8\'ab\'d0\'c2\'b5\'c4\'ca\'b5\'c0\'fd\'a3\'ac\'d5\'e2\'b8\'f6\'d0\'c2\'ca\'b5\'c0\'fd\'d4\'da\'b7\'bd\'b7\'a8\'bd\'e1\'ca\'f8\'ca\'b1\'bb\'e1\'cc\'e6\'bb\'bb\'cf\'d6\'b4\'e6\'ca\'b5\'c0\'fd\'a1\'a3
\f0 \cf4 \
        \
\cf2 //        
\f2 \'d2\'aa\'ca\'b9\'d3\'c3\'bf\'c9\'b1\'e4\'b7\'bd\'b7\'a8\'a3\'ac\'bd\'ab\'b9\'d8\'bc\'fc\'d7\'d6
\f0 mutating 
\f2 \'b7\'c5\'b5\'bd\'b7\'bd\'b7\'a8\'b5\'c4
\f0 func
\f2 \'b9\'d8\'bc\'fc\'d7\'d6\'d6\'ae\'c7\'b0\'be\'cd\'bf\'c9\'d2\'d4\'c1\'cb\'a3\'ba
\f0 \cf4 \
        
\f1\b \cf5 struct
\f0\b0 \cf4  \cf6 PointB\cf4  \{\
            
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 x\cf4  = \cf9 0.0\cf4 , \cf8 y\cf4  = \cf9 0.0\cf4 \
            
\f1\b \cf5 mutating
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 moveBy\cf4 (x deltaX: \cf7 Double\cf4 , y deltaY: \cf7 Double\cf4 ) \{\
                
\f1\b \cf5 self
\f0\b0 \cf4 .\cf10 x\cf4  \cf11 +=\cf4  deltaX\
                
\f1\b \cf5 self
\f0\b0 \cf4 .\cf10 y\cf4  \cf11 +=\cf4  deltaY\
            \}\
        \}\
        
\f1\b \cf5 var
\f0\b0 \cf4  somePointB = \cf12 PointB\cf4 (x: \cf9 1.0\cf4 , y: \cf9 1.0\cf4 )\
        somePointB.\cf10 moveBy\cf4 (x: \cf9 2.0\cf4 , y: \cf9 3.0\cf4 )\
        \cf11 print\cf4 (\cf13 "The point is now at (\cf4 \\(somePointB.\cf10 x\cf4 )\cf13 , \cf4 \\(somePointB.\cf10 y\cf4 )\cf13 )"\cf4 )\
        \cf2 // 
\f2 \'b4\'f2\'d3\'a1
\f0  "The point is now at (3.0, 4.0)"\cf4 \
\
\cf2 //      
\f2 \'d7\'a2\'d2\'e2\'a3\'ac\'b2\'bb\'c4\'dc\'d4\'da\'bd\'e1\'b9\'b9\'cc\'e5\'c0\'e0\'d0\'cd\'b5\'c4\'b3\'a3\'c1\'bf\'a3\'a8
\f0 a constant of structure type
\f2 \'a3\'a9\'c9\'cf\'b5\'f7\'d3\'c3\'bf\'c9\'b1\'e4\'b7\'bd\'b7\'a8\'a3\'ac\'d2\'f2\'ce\'aa\'c6\'e4\'ca\'f4\'d0\'d4\'b2\'bb\'c4\'dc\'b1\'bb\'b8\'c4\'b1\'e4\'a3\'ac\'bc\'b4\'ca\'b9\'ca\'f4\'d0\'d4\'ca\'c7\'b1\'e4\'c1\'bf\'ca\'f4\'d0\'d4\'a3\'ac\'cf\'ea\'c7\'e9\'b2\'ce\'bc\'fb\'b3\'a3\'c1\'bf\'bd\'e1\'b9\'b9\'cc\'e5\'b5\'c4\'b4\'e6\'b4\'a2\'ca\'f4\'d0\'d4\'a3\'ba
\f0 \cf4 \
        
\f1\b \cf5 let
\f0\b0 \cf4  fixedPoint = \cf12 PointB\cf4 (x: \cf9 3.0\cf4 , y: \cf9 3.0\cf4 )\
        \cf2 //fixedPoint.moveByXy(x: 2.0, y: 3.0)\cf4 \
        \cf2 // 
\f2 \'d5\'e2\'c0\'ef\'bd\'ab\'bb\'e1\'b1\'a8\'b8\'e6\'d2\'bb\'b8\'f6\'b4\'ed\'ce\'f3
\f0 \cf4 \
        \
\cf2 //        
\f2 \'d4\'da\'bf\'c9\'b1\'e4\'b7\'bd\'b7\'a8\'d6\'d0\'b8\'f8
\f0  self 
\f2 \'b8\'b3\'d6\'b5
\f0 \cf4 \
\cf2 //        
\f2 \'bf\'c9\'b1\'e4\'b7\'bd\'b7\'a8\'c4\'dc\'b9\'bb\'b8\'b3\'b8\'f8\'d2\'fe\'ba\'ac\'ca\'f4\'d0\'d4
\f0 self
\f2 \'d2\'bb\'b8\'f6\'c8\'ab\'d0\'c2\'b5\'c4\'ca\'b5\'c0\'fd\'a1\'a3\'c9\'cf\'c3\'e6
\f0 Point
\f2 \'b5\'c4\'c0\'fd\'d7\'d3\'bf\'c9\'d2\'d4\'d3\'c3\'cf\'c2\'c3\'e6\'b5\'c4\'b7\'bd\'ca\'bd\'b8\'c4\'d0\'b4\'a3\'ba
\f0 \cf4 \
        
\f1\b \cf5 struct
\f0\b0 \cf4  \cf6 PointC\cf4  \{\
            
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 x\cf4  = \cf9 0.0\cf4 , \cf8 y\cf4  = \cf9 0.0\cf4 \
            
\f1\b \cf5 mutating
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 moveBy\cf4 (x deltaX: \cf7 Double\cf4 , y deltaY: \cf7 Double\cf4 ) \{\
                
\f1\b \cf5 self
\f0\b0 \cf4  = \cf12 PointC\cf4 (x: \cf10 x\cf4  \cf11 +\cf4  deltaX, y: \cf10 y\cf4  \cf11 +\cf4  deltaY)\
            \}\
        \}\
\
\cf2 //        
\f2 \'c3\'b6\'be\'d9\'b5\'c4\'bf\'c9\'b1\'e4\'b7\'bd\'b7\'a8\'bf\'c9\'d2\'d4\'b0\'d1
\f0 self
\f2 \'c9\'e8\'d6\'c3\'ce\'aa\'cd\'ac\'d2\'bb\'c3\'b6\'be\'d9\'c0\'e0\'d0\'cd\'d6\'d0\'b2\'bb\'cd\'ac\'b5\'c4\'b3\'c9\'d4\'b1\'a3\'ba
\f0 \cf4 \
        \
        
\f1\b \cf5 enum
\f0\b0 \cf4  \cf6 TriStateSwitch\cf4  \{\
            
\f1\b \cf5 case
\f0\b0 \cf4  \cf8 Off\cf4 , \cf8 Low\cf4 , \cf8 High\cf4 \
            
\f1\b \cf5 mutating
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 next\cf4 () \{\
                
\f1\b \cf5 switch
\f0\b0 \cf4  
\f1\b \cf5 self
\f0\b0 \cf4  \{\
                
\f1\b \cf5 case
\f0\b0 \cf4  .\cf10 Off\cf4 :\
                    
\f1\b \cf5 self
\f0\b0 \cf4  = .\cf10 Low\cf4 \
                
\f1\b \cf5 case
\f0\b0 \cf4  .\cf10 Low\cf4 :\
                    
\f1\b \cf5 self
\f0\b0 \cf4  = .\cf10 High\cf4 \
                
\f1\b \cf5 case
\f0\b0 \cf4  .\cf10 High\cf4 :\
                    
\f1\b \cf5 self
\f0\b0 \cf4  = .\cf10 Off\cf4 \
                \}\
            \}\
        \}\
        
\f1\b \cf5 var
\f0\b0 \cf4  ovenLight = \cf12 TriStateSwitch\cf4 .\cf10 Low\cf4 \
        ovenLight.\cf10 next\cf4 ()\
        \cf2 // ovenLight 
\f2 \'cf\'d6\'d4\'da\'b5\'c8\'d3\'da
\f0  .High\cf4 \
        ovenLight.\cf10 next\cf4 ()\
        \cf2 // ovenLight 
\f2 \'cf\'d6\'d4\'da\'b5\'c8\'d3\'da
\f0  .Off\
\
\cf4 \
\
\cf2 //        
\f2 \'c0\'e0\'d0\'cd\'b7\'bd\'b7\'a8
\f0 \cf4 \
\cf2 //        
\f2 \'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'ca\'c7\'b1\'bb\'c4\'b3\'b8\'f6\'c0\'e0\'d0\'cd\'b5\'c4\'ca\'b5\'c0\'fd\'b5\'f7\'d3\'c3\'b5\'c4\'b7\'bd\'b7\'a8\'a1\'a3\'c4\'e3\'d2\'b2\'bf\'c9\'d2\'d4\'b6\'a8\'d2\'e5\'d4\'da\'c0\'e0\'d0\'cd\'b1\'be\'c9\'ed\'c9\'cf\'b5\'f7\'d3\'c3\'b5\'c4\'b7\'bd\'b7\'a8\'a3\'ac\'d5\'e2\'d6\'d6\'b7\'bd\'b7\'a8\'be\'cd\'bd\'d0\'d7\'f6\'c0\'e0\'d0\'cd\'b7\'bd\'b7\'a8\'a1\'a3\'d4\'da\'b7\'bd\'b7\'a8\'b5\'c4
\f0 func
\f2 \'b9\'d8\'bc\'fc\'d7\'d6\'d6\'ae\'c7\'b0\'bc\'d3\'c9\'cf\'b9\'d8\'bc\'fc\'d7\'d6
\f0 static
\f2 \'a3\'ac\'c0\'b4\'d6\'b8\'b6\'a8\'c0\'e0\'d0\'cd\'b7\'bd\'b7\'a8\'a1\'a3\'c0\'e0\'bb\'b9\'bf\'c9\'d2\'d4\'d3\'c3\'b9\'d8\'bc\'fc\'d7\'d6
\f0 class
\f2 \'c0\'b4\'d4\'ca\'d0\'ed\'d7\'d3\'c0\'e0\'d6\'d8\'d0\'b4\'b8\'b8\'c0\'e0\'b5\'c4\'b7\'bd\'b7\'a8\'ca\'b5\'cf\'d6\'a1\'a3
\f0 \cf4 \
\cf2 //        
\f2 \'d7\'a2\'d2\'e2
\f0 \cf4 \
\cf2 //        
\f2 \'d4\'da
\f0  Objective-C 
\f2 \'d6\'d0\'a3\'ac\'c4\'e3\'d6\'bb\'c4\'dc\'ce\'aa
\f0  Objective-C 
\f2 \'b5\'c4\'c0\'e0\'c0\'e0\'d0\'cd\'a3\'a8
\f0 classes
\f2 \'a3\'a9\'b6\'a8\'d2\'e5\'c0\'e0\'d0\'cd\'b7\'bd\'b7\'a8\'a3\'a8
\f0 type-level methods
\f2 \'a3\'a9\'a1\'a3\'d4\'da
\f0  Swift 
\f2 \'d6\'d0\'a3\'ac\'c4\'e3\'bf\'c9\'d2\'d4\'ce\'aa\'cb\'f9\'d3\'d0\'b5\'c4\'c0\'e0\'a1\'a2\'bd\'e1\'b9\'b9\'cc\'e5\'ba\'cd\'c3\'b6\'be\'d9\'b6\'a8\'d2\'e5\'c0\'e0\'d0\'cd\'b7\'bd\'b7\'a8\'a1\'a3\'c3\'bf\'d2\'bb\'b8\'f6\'c0\'e0\'d0\'cd\'b7\'bd\'b7\'a8\'b6\'bc\'b1\'bb\'cb\'fc\'cb\'f9\'d6\'a7\'b3\'d6\'b5\'c4\'c0\'e0\'d0\'cd\'cf\'d4\'ca\'bd\'b0\'fc\'ba\'ac\'a1\'a3
\f0 \cf4 \
\cf2 //        
\f2 \'c0\'e0\'d0\'cd\'b7\'bd\'b7\'a8\'ba\'cd\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'d2\'bb\'d1\'f9\'d3\'c3\'b5\'e3\'d3\'ef\'b7\'a8\'b5\'f7\'d3\'c3\'a1\'a3\'b5\'ab\'ca\'c7\'a3\'ac\'c4\'e3\'ca\'c7\'d4\'da\'c0\'e0\'d0\'cd\'c9\'cf\'b5\'f7\'d3\'c3\'d5\'e2\'b8\'f6\'b7\'bd\'b7\'a8\'a3\'ac\'b6\'f8\'b2\'bb\'ca\'c7\'d4\'da\'ca\'b5\'c0\'fd\'c9\'cf\'b5\'f7\'d3\'c3\'a1\'a3\'cf\'c2\'c3\'e6\'ca\'c7\'c8\'e7\'ba\'ce\'d4\'da
\f0 SomeClass
\f2 \'c0\'e0\'c9\'cf\'b5\'f7\'d3\'c3\'c0\'e0\'d0\'cd\'b7\'bd\'b7\'a8\'b5\'c4\'c0\'fd\'d7\'d3\'a3\'ba
\f0 \cf4 \
        \
        
\f1\b \cf5 class
\f0\b0 \cf4  \cf6 SomeClass\cf4  \{\
            
\f1\b \cf5 class
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 someTypeMethod\cf4 () \{\
                \cf2 // 
\f2 \'d4\'da\'d5\'e2\'c0\'ef\'ca\'b5\'cf\'d6\'c0\'e0\'d0\'cd\'b7\'bd\'b7\'a8
\f0 \cf4 \
            \}\
        \}\
        \
        \cf12 SomeClass\cf4 .\cf10 someTypeMethod\cf4 ()\
        \
\cf2 //        
\f2 \'d2\'bb\'b0\'e3\'c0\'b4\'cb\'b5\'a3\'ac\'d4\'da\'c0\'e0\'d0\'cd\'b7\'bd\'b7\'a8\'b5\'c4\'b7\'bd\'b7\'a8\'cc\'e5\'d6\'d0\'a3\'ac\'c8\'ce\'ba\'ce\'ce\'b4\'cf\'de\'b6\'a8\'b5\'c4\'b7\'bd\'b7\'a8\'ba\'cd\'ca\'f4\'d0\'d4\'c3\'fb\'b3\'c6\'a3\'ac\'bf\'c9\'d2\'d4\'b1\'bb\'b1\'be\'c0\'e0\'d6\'d0\'c6\'e4\'cb\'fb\'b5\'c4\'c0\'e0\'d0\'cd\'b7\'bd\'b7\'a8\'ba\'cd\'c0\'e0\'d0\'cd\'ca\'f4\'d0\'d4\'d2\'fd\'d3\'c3\'a1\'a3\'d2\'bb\'b8\'f6\'c0\'e0\'d0\'cd\'b7\'bd\'b7\'a8\'bf\'c9\'d2\'d4\'d6\'b1\'bd\'d3\'cd\'a8\'b9\'fd\'c0\'e0\'d0\'cd\'b7\'bd\'b7\'a8\'b5\'c4\'c3\'fb\'b3\'c6\'b5\'f7\'d3\'c3\'b1\'be\'c0\'e0\'d6\'d0\'b5\'c4\'c6\'e4\'cb\'fc\'c0\'e0\'d0\'cd\'b7\'bd\'b7\'a8\'a3\'ac\'b6\'f8\'ce\'de\'d0\'e8\'d4\'da\'b7\'bd\'b7\'a8\'c3\'fb\'b3\'c6\'c7\'b0\'c3\'e6\'bc\'d3\'c9\'cf\'c0\'e0\'d0\'cd\'c3\'fb\'b3\'c6\'a1\'a3\'c0\'e0\'cb\'c6\'b5\'d8\'a3\'ac\'d4\'da\'bd\'e1\'b9\'b9\'cc\'e5\'ba\'cd\'c3\'b6\'be\'d9\'d6\'d0\'a3\'ac\'d2\'b2\'c4\'dc\'b9\'bb\'d6\'b1\'bd\'d3\'cd\'a8\'b9\'fd\'c0\'e0\'d0\'cd\'ca\'f4\'d0\'d4\'b5\'c4\'c3\'fb\'b3\'c6\'b7\'c3\'ce\'ca\'b1\'be\'c0\'e0\'d6\'d0\'b5\'c4\'c0\'e0\'d0\'cd\'ca\'f4\'d0\'d4\'a3\'ac\'b6\'f8\'b2\'bb\'d0\'e8\'d2\'aa\'c7\'b0\'c3\'e6\'bc\'d3\'c9\'cf\'c0\'e0\'d0\'cd\'c3\'fb\'b3\'c6\'a1\'a3
\f0 \cf4 \
        \
\cf2 //        
\f2 \'cf\'c2\'c3\'e6\'b5\'c4\'c0\'fd\'d7\'d3\'b6\'a8\'d2\'e5\'c1\'cb\'d2\'bb\'b8\'f6\'c3\'fb\'ce\'aa
\f0 LevelTracker
\f2 \'bd\'e1\'b9\'b9\'cc\'e5\'a1\'a3\'cb\'fc\'bc\'e0\'b2\'e2\'cd\'e6\'bc\'d2\'b5\'c4\'d3\'ce\'cf\'b7\'b7\'a2\'d5\'b9\'c7\'e9\'bf\'f6\'a3\'a8\'d3\'ce\'cf\'b7\'b5\'c4\'b2\'bb\'cd\'ac\'b2\'e3\'b4\'ce\'bb\'f2\'bd\'d7\'b6\'ce\'a3\'a9\'a1\'a3\'d5\'e2\'ca\'c7\'d2\'bb\'b8\'f6\'b5\'a5\'c8\'cb\'d3\'ce\'cf\'b7\'a3\'ac\'b5\'ab\'d2\'b2\'bf\'c9\'d2\'d4\'b4\'e6\'b4\'a2\'b6\'e0\'b8\'f6\'cd\'e6\'bc\'d2\'d4\'da\'cd\'ac\'d2\'bb\'c9\'e8\'b1\'b8\'c9\'cf\'b5\'c4\'d3\'ce\'cf\'b7\'d0\'c5\'cf\'a2\'a1\'a3
\f0 \cf4 \
        \
\cf2 //        
\f2 \'d3\'ce\'cf\'b7\'b3\'f5\'ca\'bc\'ca\'b1\'a3\'ac\'cb\'f9\'d3\'d0\'b5\'c4\'d3\'ce\'cf\'b7\'b5\'c8\'bc\'b6\'a3\'a8\'b3\'fd\'c1\'cb\'b5\'c8\'bc\'b6
\f0  1
\f2 \'a3\'a9\'b6\'bc\'b1\'bb\'cb\'f8\'b6\'a8\'a1\'a3\'c3\'bf\'b4\'ce\'d3\'d0\'cd\'e6\'bc\'d2\'cd\'ea\'b3\'c9\'d2\'bb\'b8\'f6\'b5\'c8\'bc\'b6\'a3\'ac\'d5\'e2\'b8\'f6\'b5\'c8\'bc\'b6\'be\'cd\'b6\'d4\'d5\'e2\'b8\'f6\'c9\'e8\'b1\'b8\'c9\'cf\'b5\'c4\'cb\'f9\'d3\'d0\'cd\'e6\'bc\'d2\'bd\'e2\'cb\'f8\'a1\'a3
\f0 LevelTracker
\f2 \'bd\'e1\'b9\'b9\'cc\'e5\'d3\'c3\'c0\'e0\'d0\'cd\'ca\'f4\'d0\'d4\'ba\'cd\'b7\'bd\'b7\'a8\'bc\'e0\'b2\'e2\'d3\'ce\'cf\'b7\'b5\'c4\'c4\'c4\'b8\'f6\'b5\'c8\'bc\'b6\'d2\'d1\'be\'ad\'b1\'bb\'bd\'e2\'cb\'f8\'a1\'a3\'cb\'fc\'bb\'b9\'bc\'e0\'b2\'e2\'c3\'bf\'b8\'f6\'cd\'e6\'bc\'d2\'b5\'c4\'b5\'b1\'c7\'b0\'b5\'c8\'bc\'b6\'a1\'a3
\f0 \cf4 \
        \
        
\f1\b \cf5 struct
\f0\b0 \cf4  \cf6 LevelTracker\cf4  \{\
            
\f1\b \cf5 static
\f0\b0 \cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 highestUnlockedLevel\cf4  = \cf9 1\cf4 \
            
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 currentLevel\cf4  = \cf9 1\cf4 \
            \
            
\f1\b \cf5 static
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 unlock\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  level: \cf7 Int\cf4 ) \{\
                
\f1\b \cf5 if
\f0\b0 \cf4  level \cf11 >\cf4  \cf10 highestUnlockedLevel\cf4  \{ \cf10 highestUnlockedLevel\cf4  = level \}\
            \}\
            \
            
\f1\b \cf5 static
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 isUnlocked\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  level: \cf7 Int\cf4 ) -> \cf7 Bool\cf4  \{\
                
\f1\b \cf5 return
\f0\b0 \cf4  level \cf11 <=\cf4  \cf10 highestUnlockedLevel\cf4 \
            \}\
            \
            
\f1\b \cf5 @discardableResult
\f0\b0 \cf4 \
            
\f1\b \cf5 mutating
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 advance\cf4 (to level: \cf7 Int\cf4 ) -> \cf7 Bool\cf4  \{\
                
\f1\b \cf5 if
\f0\b0 \cf4  \cf12 LevelTracker\cf4 .\cf10 isUnlocked\cf4 (level) \{\
                    \cf10 currentLevel\cf4  = level\
                    
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 true
\f0\b0 \cf4 \
                \} 
\f1\b \cf5 else
\f0\b0 \cf4  \{\
                    
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 false
\f0\b0 \cf4 \
                \}\
            \}\
        \}\
        \
\cf2 //        
\f2 \'ce\'aa\'c1\'cb\'b1\'e3\'d3\'da\'b9\'dc\'c0\'ed
\f0 currentLevel
\f2 \'ca\'f4\'d0\'d4\'a3\'ac
\f0 LevelTracker
\f2 \'b6\'a8\'d2\'e5\'c1\'cb\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8
\f0 advance(to:)
\f2 \'a1\'a3\'d5\'e2\'b8\'f6\'b7\'bd\'b7\'a8\'bb\'e1\'d4\'da\'b8\'fc\'d0\'c2
\f0 currentLevel
\f2 \'d6\'ae\'c7\'b0\'bc\'ec\'b2\'e9\'cb\'f9\'c7\'eb\'c7\'f3\'b5\'c4\'d0\'c2\'b5\'c8\'bc\'b6\'ca\'c7\'b7\'f1\'d2\'d1\'be\'ad\'bd\'e2\'cb\'f8\'a1\'a3
\f0 advance(to:)
\f2 \'b7\'bd\'b7\'a8\'b7\'b5\'bb\'d8\'b2\'bc\'b6\'fb\'d6\'b5\'d2\'d4\'d6\'b8\'ca\'be\'ca\'c7\'b7\'f1\'c4\'dc\'b9\'bb\'c9\'e8\'d6\'c3
\f0 currentLevel
\f2 \'a1\'a3\'d2\'f2\'ce\'aa\'d4\'ca\'d0\'ed\'d4\'da\'b5\'f7\'d3\'c3
\f0 advance(to:)
\f2 \'ca\'b1\'ba\'f2\'ba\'f6\'c2\'d4\'b7\'b5\'bb\'d8\'d6\'b5\'a3\'ac\'b2\'bb\'bb\'e1\'b2\'fa\'c9\'fa\'b1\'e0\'d2\'eb\'be\'af\'b8\'e6\'a3\'ac\'cb\'f9\'d2\'d4\'ba\'af\'ca\'fd\'b1\'bb\'b1\'ea\'d7\'a2\'ce\'aa
\f0 @ discardableResult
\f2 \'ca\'f4\'d0\'d4\'a3\'ac\'b8\'fc\'b6\'e0\'b9\'d8\'d3\'da\'ca\'f4\'d0\'d4\'d0\'c5\'cf\'a2\'a3\'ac\'c7\'eb\'b2\'ce\'bf\'bc\'ca\'f4\'d0\'d4\'d5\'c2\'bd\'da\'a1\'a3
\f0 \cf4 \
        \
\cf2 //        
\f2 \'cf\'c2\'c3\'e6\'a3\'ac
\f0 Player
\f2 \'c0\'e0\'ca\'b9\'d3\'c3
\f0 LevelTracker
\f2 \'c0\'b4\'bc\'e0\'b2\'e2\'ba\'cd\'b8\'fc\'d0\'c2\'c3\'bf\'b8\'f6\'cd\'e6\'bc\'d2\'b5\'c4\'b7\'a2\'d5\'b9\'bd\'f8\'b6\'c8\'a3\'ba
\f0 \cf4 \
        
\f1\b \cf5 class
\f0\b0 \cf4  \cf6 Player\cf4  \{\
            
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 tracker\cf4  = \cf12 LevelTracker\cf4 ()\
            
\f1\b \cf5 let
\f0\b0 \cf4  \cf8 playerName\cf4 : \cf7 String\cf4 \
            \
            
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 complete\cf4 (level: \cf7 Int\cf4 ) \{\
                \cf12 LevelTracker\cf4 .\cf10 unlock\cf4 (level)\
                \cf10 tracker\cf4 .\cf10 advance\cf4 (to: level)\
            \}\
            \
            
\f1\b \cf5 init
\f0\b0 \cf4 (name: \cf7 String\cf4 ) \{\
                \cf10 playerName\cf4  = name;\
            \}\
        \}\
        \
        
\f1\b \cf5 let
\f0\b0 \cf4  player = \cf12 Player\cf4 (name: \cf13 "Beto"\cf4 )\
        
\f1\b \cf5 if
\f0\b0 \cf4  player.\cf10 tracker\cf4 .\cf10 advance\cf4 (to: \cf9 6\cf4 ) \{\
            \cf11 print\cf4 (\cf13 "player is now on level 6"\cf4 )\
        \} 
\f1\b \cf5 else
\f0\b0 \cf4  \{\
            \cf11 print\cf4 (\cf13 "level 6 has not yet been unlocked"\cf4 )\
        \}\
        \cf2 // 
\f2 \'b4\'f2\'d3\'a1
\f0  "level 6 has not yet been unlocked"\cf4 \
    \}\
\
\}\
}