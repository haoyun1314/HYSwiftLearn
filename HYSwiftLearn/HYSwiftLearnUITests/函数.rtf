{\rtf1\ansi\ansicpg936\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;\f2\fnil\fcharset134 PingFangSC-Regular;
}
{\colortbl;\red255\green255\blue255;\red38\green117\blue7;\red255\green255\blue255;\red0\green0\blue0;
\red155\green35\blue147;\red11\green79\blue121;\red57\green0\blue160;\red15\green104\blue160;\red196\green26\blue22;
\red108\green54\blue169;\red50\green109\blue116;\red28\green0\blue207;}
{\*\expandedcolortbl;;\csgenericrgb\c14771\c45953\c2591;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0\c85000;
\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c4477\c31152\c47474;\csgenericrgb\c22454\c0\c62803;\csgenericrgb\c5696\c40622\c62817;\csgenericrgb\c77000\c10200\c8600;
\csgenericrgb\c42190\c21278\c66379;\csgenericrgb\c19418\c42935\c45455;\csgenericrgb\c11000\c0\c81000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 //\cf4 \
\cf2 //  Functions.swift\cf4 \
\cf2 //  Functions\cf4 \
\cf2 //\cf4 \
\cf2 //  Created by dyf on 2017/6/29.\cf4 \
\cf2 //  Copyright \'a9 2017 dyf. All rights reserved.\cf4 \
\cf2 //\cf4 \
\

\f1\b \cf5 import
\f0\b0 \cf4  UIKit\
\

\f1\b \cf5 class
\f0\b0 \cf4  \cf6 Functions\cf4 : \cf7 NSObject\cf4  \{\
\
    
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 execute\cf4 () \{\
        \
\cf2 //        
\f2 \'ba\'af\'ca\'fd\'b5\'c4\'b6\'a8\'d2\'e5\'d3\'eb\'b5\'f7\'d3\'c3
\f0 \cf4 \
\cf2 //        
\f2 \'b5\'b1\'c4\'e3\'b6\'a8\'d2\'e5\'d2\'bb\'b8\'f6\'ba\'af\'ca\'fd\'ca\'b1\'a3\'ac\'c4\'e3\'bf\'c9\'d2\'d4\'b6\'a8\'d2\'e5\'d2\'bb\'b8\'f6\'bb\'f2\'b6\'e0\'b8\'f6\'d3\'d0\'c3\'fb\'d7\'d6\'ba\'cd\'c0\'e0\'d0\'cd\'b5\'c4\'d6\'b5\'a3\'ac\'d7\'f7\'ce\'aa\'ba\'af\'ca\'fd\'b5\'c4\'ca\'e4\'c8\'eb\'a3\'ac\'b3\'c6\'ce\'aa\'b2\'ce\'ca\'fd\'a3\'ac\'d2\'b2\'bf\'c9\'d2\'d4\'b6\'a8\'d2\'e5\'c4\'b3\'d6\'d6\'c0\'e0\'d0\'cd\'b5\'c4\'d6\'b5\'d7\'f7\'ce\'aa\'ba\'af\'ca\'fd\'d6\'b4\'d0\'d0\'bd\'e1\'ca\'f8\'ca\'b1\'b5\'c4\'ca\'e4\'b3\'f6\'a3\'ac\'b3\'c6\'ce\'aa\'b7\'b5\'bb\'d8\'c0\'e0\'d0\'cd\'a1\'a3
\f0 \cf4 \
\cf2 //        \cf4 \
\cf2 //        
\f2 \'c3\'bf\'b8\'f6\'ba\'af\'ca\'fd\'d3\'d0\'b8\'f6\'ba\'af\'ca\'fd\'c3\'fb\'a3\'ac\'d3\'c3\'c0\'b4\'c3\'e8\'ca\'f6\'ba\'af\'ca\'fd\'d6\'b4\'d0\'d0\'b5\'c4\'c8\'ce\'ce\'f1\'a1\'a3\'d2\'aa\'ca\'b9\'d3\'c3\'d2\'bb\'b8\'f6\'ba\'af\'ca\'fd\'ca\'b1\'a3\'ac\'d3\'c3\'ba\'af\'ca\'fd\'c3\'fb\'c0\'b4
\f0 \'93
\f2 \'b5\'f7\'d3\'c3
\f0 \'94
\f2 \'d5\'e2\'b8\'f6\'ba\'af\'ca\'fd\'a3\'ac\'b2\'a2\'b4\'ab\'b8\'f8\'cb\'fc\'c6\'a5\'c5\'e4\'b5\'c4\'ca\'e4\'c8\'eb\'d6\'b5\'a3\'a8\'b3\'c6\'d7\'f7
\f0  
\f2 \'ca\'b5\'b2\'ce
\f0  
\f2 \'a3\'a9\'a1\'a3\'ba\'af\'ca\'fd\'b5\'c4\'ca\'b5\'b2\'ce\'b1\'d8\'d0\'eb\'d3\'eb\'ba\'af\'ca\'fd\'b2\'ce\'ca\'fd\'b1\'ed\'c0\'ef\'b2\'ce\'ca\'fd\'b5\'c4\'cb\'b3\'d0\'f2\'d2\'bb\'d6\'c2\'a1\'a3
\f0 \cf4 \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 greet\cf4 (person: \cf7 String\cf4 ) -> \cf7 String\cf4  \{\
            
\f1\b \cf5 let
\f0\b0 \cf4  greeting = \cf9 "Hello, "\cf4  \cf10 +\cf4  person \cf10 +\cf4  \cf9 "!"\cf4 \
            
\f1\b \cf5 return
\f0\b0 \cf4  greeting\
        \}\
        \
        \cf10 print\cf4 (\cf11 greet\cf4 (person: \cf9 "Anna"\cf4 ))\
\
\cf2 //        
\f2 \'ba\'af\'ca\'fd\'b5\'c4\'b6\'a8\'d2\'e5
\f0 : 
\f2 \'d2\'d4
\f0  func 
\f2 \'d7\'f7\'ce\'aa\'c7\'b0\'d7\'ba\'a3\'ac\'d6\'b8\'b6\'a8\'ba\'af\'ca\'fd\'b7\'b5\'bb\'d8\'c0\'e0\'d0\'cd\'ca\'b1\'a3\'ac\'d3\'c3\'b7\'b5\'bb\'d8\'bc\'fd\'cd\'b7
\f0  ->
\f2 \'a3\'a8\'d2\'bb\'b8\'f6\'c1\'ac\'d7\'d6\'b7\'fb\'ba\'f3\'b8\'fa\'d2\'bb\'b8\'f6\'d3\'d2\'bc\'e2\'c0\'a8\'ba\'c5\'a3\'a9\'ba\'f3\'b8\'fa\'b7\'b5\'bb\'d8\'c0\'e0\'d0\'cd\'b5\'c4\'c3\'fb\'b3\'c6\'b5\'c4\'b7\'bd\'ca\'bd\'c0\'b4\'b1\'ed\'ca\'be\'a1\'a3
\f0 \cf4 \
\cf2 //        func 
\f2 \'ba\'af\'ca\'fd\'c3\'fb
\f0 (
\f2 \'b2\'ce\'ca\'fd
\f0 , ...) -> 
\f2 \'b7\'b5\'bb\'d8\'c0\'e0\'d0\'cd
\f0  \{\cf4 \
\cf2 //            \cf4 \
\cf2 //        \}\cf4 \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 greetAgain\cf4 (person: \cf7 String\cf4 ) -> \cf7 String\cf4  \{\
            
\f1\b \cf5 return
\f0\b0 \cf4  \cf9 "Hello again, "\cf4  \cf10 +\cf4  person \cf10 +\cf4  \cf9 "!"\cf4 \
        \}\
        \cf10 print\cf4 (\cf11 greetAgain\cf4 (person: \cf9 "Anna"\cf4 ))\
        \
\cf2 //        
\f2 \'ba\'af\'ca\'fd\'b2\'ce\'ca\'fd\'d3\'eb\'b7\'b5\'bb\'d8\'d6\'b5
\f0 \cf4 \
\cf2 //        
\f2 \'ba\'af\'ca\'fd\'b2\'ce\'ca\'fd\'d3\'eb\'b7\'b5\'bb\'d8\'d6\'b5\'d4\'da
\f0  Swift 
\f2 \'d6\'d0\'b7\'c7\'b3\'a3\'b5\'c4\'c1\'e9\'bb\'ee\'a1\'a3\'c4\'e3\'bf\'c9\'d2\'d4\'b6\'a8\'d2\'e5\'c8\'ce\'ba\'ce\'c0\'e0\'d0\'cd\'b5\'c4\'ba\'af\'ca\'fd\'a3\'ac\'b0\'fc\'c0\'a8\'b4\'d3\'d6\'bb\'b4\'f8\'d2\'bb\'b8\'f6\'ce\'b4\'c3\'fb\'b2\'ce\'ca\'fd\'b5\'c4\'bc\'f2\'b5\'a5\'ba\'af\'ca\'fd\'b5\'bd\'b8\'b4\'d4\'d3\'b5\'c4\'b4\'f8\'d3\'d0\'b1\'ed\'b4\'ef\'d0\'d4\'b2\'ce\'ca\'fd\'c3\'fb\'ba\'cd\'b2\'bb\'cd\'ac\'b2\'ce\'ca\'fd\'d1\'a1\'cf\'ee\'b5\'c4\'b8\'b4\'d4\'d3\'ba\'af\'ca\'fd\'a1\'a3
\f0 \cf4 \
\
\cf2 //        
\f2 \'ce\'de\'b2\'ce\'ca\'fd\'ba\'af\'ca\'fd
\f0 \cf4 \
\cf2 //        
\f2 \'ba\'af\'ca\'fd\'bf\'c9\'d2\'d4\'c3\'bb\'d3\'d0\'b2\'ce\'ca\'fd\'a1\'a3
\f0 \cf4 \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 sayHelloWorld\cf4 () -> \cf7 String\cf4  \{\
            
\f1\b \cf5 return
\f0\b0 \cf4  \cf9 "hello, world"\cf4 \
        \}\
        \cf10 print\cf4 (\cf11 sayHelloWorld\cf4 ())\
        \
\cf2 //        
\f2 \'b6\'e0\'b2\'ce\'ca\'fd\'ba\'af\'ca\'fd
\f0 \cf4 \
\cf2 //        
\f2 \'ba\'af\'ca\'fd\'bf\'c9\'d2\'d4\'d3\'d0\'b6\'e0\'d6\'d6\'ca\'e4\'c8\'eb\'b2\'ce\'ca\'fd\'a3\'ac\'d5\'e2\'d0\'a9\'b2\'ce\'ca\'fd\'b1\'bb\'b0\'fc\'ba\'ac\'d4\'da\'ba\'af\'ca\'fd\'b5\'c4\'c0\'a8\'ba\'c5\'d6\'ae\'d6\'d0\'a3\'ac\'d2\'d4\'b6\'ba\'ba\'c5\'b7\'d6\'b8\'f4\'a1\'a3
\f0 \cf4 \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 greet2\cf4 (person: \cf7 String\cf4 , alreadyGreeted: \cf7 Bool\cf4 ) -> \cf7 String\cf4  \{\
            
\f1\b \cf5 if
\f0\b0 \cf4  alreadyGreeted \{\
                
\f1\b \cf5 return
\f0\b0 \cf4  \cf11 greetAgain\cf4 (person: person)\
            \} 
\f1\b \cf5 else
\f0\b0 \cf4  \{\
                
\f1\b \cf5 return
\f0\b0 \cf4  \cf11 greet\cf4 (person: person)\
            \}\
        \}\
        \cf10 print\cf4 (\cf11 greet2\cf4 (person: \cf9 "Tim"\cf4 , alreadyGreeted: 
\f1\b \cf5 true
\f0\b0 \cf4 ))\
        \
\cf2 //        
\f2 \'ce\'de\'b7\'b5\'bb\'d8\'d6\'b5\'ba\'af\'ca\'fd
\f0 \cf4 \
\cf2 //        
\f2 \'ba\'af\'ca\'fd\'bf\'c9\'d2\'d4\'c3\'bb\'d3\'d0\'b7\'b5\'bb\'d8\'d6\'b5\'a1\'a3
\f0 \cf4 \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 greet3\cf4 (person: \cf7 String\cf4 ) \{\
            \cf10 print\cf4 (\cf9 "Hello, \cf4 \\(person)\cf9 !"\cf4 )\
        \}\
        \cf11 greet3\cf4 (person: \cf9 "Dave"\cf4 )\
        \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 printAndCount\cf4 (string: \cf7 String\cf4 ) -> \cf7 Int\cf4  \{\
            \cf10 print\cf4 (string)\
            
\f1\b \cf5 return
\f0\b0 \cf4  string.characters.\cf10 count\cf4 \
        \}\
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 printWithoutCounting\cf4 (string: \cf7 String\cf4 ) \{\
            
\f1\b \cf5 let
\f0\b0 \cf4  
\f1\b \cf5 _
\f0\b0 \cf4  = \cf11 printAndCount\cf4 (string: string)\
        \}\
        \cf10 print\cf4 (\cf11 printAndCount\cf4 (string: \cf9 "hello, world"\cf4 ))\
        \cf11 printWithoutCounting\cf4 (string: \cf9 "hello, world"\cf4 )\
\
\cf2 //        
\f2 \'b6\'e0\'d6\'d8\'b7\'b5\'bb\'d8\'d6\'b5\'ba\'af\'ca\'fd
\f0 \cf4 \
\cf2 //        
\f2 \'c4\'e3\'bf\'c9\'d2\'d4\'d3\'c3\'d4\'aa\'d7\'e9\'a3\'a8
\f0 tuple
\f2 \'a3\'a9\'c0\'e0\'d0\'cd\'c8\'c3\'b6\'e0\'b8\'f6\'d6\'b5\'d7\'f7\'ce\'aa\'d2\'bb\'b8\'f6\'b8\'b4\'ba\'cf\'d6\'b5\'b4\'d3\'ba\'af\'ca\'fd\'d6\'d0\'b7\'b5\'bb\'d8\'a1\'a3
\f0 \cf4 \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 minMax\cf4 (array: [\cf7 Int\cf4 ]) -> (min: \cf7 Int\cf4 , max: \cf7 Int\cf4 ) \{\
            
\f1\b \cf5 var
\f0\b0 \cf4  currentMin = array[\cf12 0\cf4 ]\
            
\f1\b \cf5 var
\f0\b0 \cf4  currentMax = array[\cf12 0\cf4 ]\
            
\f1\b \cf5 for
\f0\b0 \cf4  value 
\f1\b \cf5 in
\f0\b0 \cf4  array[\cf12 1\cf10 ..<\cf4 array.\cf10 count\cf4 ] \{\
                
\f1\b \cf5 if
\f0\b0 \cf4  value \cf10 <\cf4  currentMin \{\
                    currentMin = value\
                \} 
\f1\b \cf5 else
\f0\b0 \cf4  
\f1\b \cf5 if
\f0\b0 \cf4  value \cf10 >\cf4  currentMax \{\
                    currentMax = value\
                \}\
            \}\
            
\f1\b \cf5 return
\f0\b0 \cf4  (currentMin, currentMax)\
        \}\
        
\f1\b \cf5 let
\f0\b0 \cf4  bounds = \cf11 minMax\cf4 (array: [\cf12 8\cf4 , \cf12 -6\cf4 , \cf12 2\cf4 , \cf12 109\cf4 , \cf12 3\cf4 , \cf12 71\cf4 ])\
        \cf10 print\cf4 (\cf9 "min is \cf4 \\(bounds.min)\cf9  and max is \cf4 \\(bounds.max)\cf9 "\cf4 )\
\
\cf2 //        
\f2 \'bf\'c9\'d1\'a1\'d4\'aa\'d7\'e9\'b7\'b5\'bb\'d8\'c0\'e0\'d0\'cd
\f0 \cf4 \
\cf2 //        
\f2 \'c8\'e7\'b9\'fb\'ba\'af\'ca\'fd\'b7\'b5\'bb\'d8\'b5\'c4\'d4\'aa\'d7\'e9\'c0\'e0\'d0\'cd\'d3\'d0\'bf\'c9\'c4\'dc\'d5\'fb\'b8\'f6\'d4\'aa\'d7\'e9\'b6\'bc
\f0 \'93
\f2 \'c3\'bb\'d3\'d0\'d6\'b5
\f0 \'94
\f2 \'a3\'ac\'c4\'e3\'bf\'c9\'d2\'d4\'ca\'b9\'d3\'c3\'bf\'c9\'d1\'a1\'b5\'c4\'a3\'a8
\f0  optional 
\f2 \'a3\'a9
\f0  
\f2 \'d4\'aa\'d7\'e9\'b7\'b5\'bb\'d8\'c0\'e0\'d0\'cd\'b7\'b4\'d3\'b3\'d5\'fb\'b8\'f6\'d4\'aa\'d7\'e9\'bf\'c9\'d2\'d4\'ca\'c7
\f0 nil
\f2 \'b5\'c4\'ca\'c2\'ca\'b5\'a1\'a3\'c4\'e3\'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd\'d4\'da\'d4\'aa\'d7\'e9\'c0\'e0\'d0\'cd\'b5\'c4\'d3\'d2\'c0\'a8\'ba\'c5\'ba\'f3\'b7\'c5\'d6\'c3\'d2\'bb\'b8\'f6\'ce\'ca\'ba\'c5\'c0\'b4\'b6\'a8\'d2\'e5\'d2\'bb\'b8\'f6\'bf\'c9\'d1\'a1\'d4\'aa\'d7\'e9\'a3\'ac\'c0\'fd\'c8\'e7
\f0  (Int, Int)? 
\f2 \'bb\'f2
\f0  (String, Int, Bool)?\cf4 \
\cf2 //        
\f2 \'d7\'a2\'d2\'e2
\f0  
\f2 \'bf\'c9\'d1\'a1\'d4\'aa\'d7\'e9\'c0\'e0\'d0\'cd\'c8\'e7
\f0  (Int, Int)? 
\f2 \'d3\'eb\'d4\'aa\'d7\'e9\'b0\'fc\'ba\'ac\'bf\'c9\'d1\'a1\'c0\'e0\'d0\'cd\'c8\'e7
\f0  (Int?, Int?) 
\f2 \'ca\'c7\'b2\'bb\'cd\'ac\'b5\'c4
\f0 .
\f2 \'bf\'c9\'d1\'a1\'b5\'c4\'d4\'aa\'d7\'e9\'c0\'e0\'d0\'cd\'a3\'ac\'d5\'fb\'b8\'f6\'d4\'aa\'d7\'e9\'ca\'c7\'bf\'c9\'d1\'a1\'b5\'c4\'a3\'ac\'b6\'f8\'b2\'bb\'d6\'bb\'ca\'c7\'d4\'aa\'d7\'e9\'d6\'d0\'b5\'c4\'c3\'bf\'b8\'f6\'d4\'aa\'cb\'d8\'d6\'b5\'a1\'a3
\f0 \cf4 \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 minMax2\cf4 (array: [\cf7 Int\cf4 ]) -> (min: \cf7 Int\cf4 , max: \cf7 Int\cf4 )? \{\
            
\f1\b \cf5 if
\f0\b0 \cf4  array.\cf10 isEmpty\cf4  \{ 
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 nil
\f0\b0 \cf4  \}\
            
\f1\b \cf5 var
\f0\b0 \cf4  currentMin = array[\cf12 0\cf4 ]\
            
\f1\b \cf5 var
\f0\b0 \cf4  currentMax = array[\cf12 0\cf4 ]\
            
\f1\b \cf5 for
\f0\b0 \cf4  value 
\f1\b \cf5 in
\f0\b0 \cf4  array[\cf12 1\cf10 ..<\cf4 array.\cf10 count\cf4 ] \{\
                
\f1\b \cf5 if
\f0\b0 \cf4  value \cf10 <\cf4  currentMin \{\
                    currentMin = value\
                \} 
\f1\b \cf5 else
\f0\b0 \cf4  
\f1\b \cf5 if
\f0\b0 \cf4  value \cf10 >\cf4  currentMax \{\
                    currentMax = value\
                \}\
            \}\
            
\f1\b \cf5 return
\f0\b0 \cf4  (currentMin, currentMax)\
        \}\
        \
        
\f1\b \cf5 if
\f0\b0 \cf4  
\f1\b \cf5 let
\f0\b0 \cf4  bounds2 = \cf11 minMax2\cf4 (array: [\cf12 8\cf4 , \cf12 -6\cf4 , \cf12 2\cf4 , \cf12 109\cf4 , \cf12 3\cf4 , \cf12 71\cf4 ]) \{\
            \cf10 print\cf4 (\cf9 "min is \cf4 \\(bounds2.min)\cf9  and max is \cf4 \\(bounds2.max)\cf9 "\cf4 )\
        \}\
        \
\cf2 //        
\f2 \'ba\'af\'ca\'fd\'b2\'ce\'ca\'fd\'b1\'ea\'c7\'a9\'ba\'cd\'b2\'ce\'ca\'fd\'c3\'fb\'b3\'c6
\f0 \cf4 \
\cf2 //        
\f2 \'c3\'bf\'b8\'f6\'ba\'af\'ca\'fd\'b2\'ce\'ca\'fd\'b6\'bc\'d3\'d0\'d2\'bb\'b8\'f6\'b2\'ce\'ca\'fd\'b1\'ea\'c7\'a9
\f0 ( argument label )
\f2 \'d2\'d4\'bc\'b0\'d2\'bb\'b8\'f6\'b2\'ce\'ca\'fd\'c3\'fb\'b3\'c6
\f0 ( parameter name )
\f2 \'a1\'a3\'b2\'ce\'ca\'fd\'b1\'ea\'c7\'a9\'d4\'da\'b5\'f7\'d3\'c3\'ba\'af\'ca\'fd\'b5\'c4\'ca\'b1\'ba\'f2\'ca\'b9\'d3\'c3\'a3\'bb\'b5\'f7\'d3\'c3\'b5\'c4\'ca\'b1\'ba\'f2\'d0\'e8\'d2\'aa\'bd\'ab\'ba\'af\'ca\'fd\'b5\'c4\'b2\'ce\'ca\'fd\'b1\'ea\'c7\'a9\'d0\'b4\'d4\'da\'b6\'d4\'d3\'a6\'b5\'c4\'b2\'ce\'ca\'fd\'c7\'b0\'c3\'e6\'a1\'a3\'b2\'ce\'ca\'fd\'c3\'fb\'b3\'c6\'d4\'da\'ba\'af\'ca\'fd\'b5\'c4\'ca\'b5\'cf\'d6\'d6\'d0\'ca\'b9\'d3\'c3\'a1\'a3\'c4\'ac\'c8\'cf\'c7\'e9\'bf\'f6\'cf\'c2\'a3\'ac\'ba\'af\'ca\'fd\'b2\'ce\'ca\'fd\'ca\'b9\'d3\'c3\'b2\'ce\'ca\'fd\'c3\'fb\'b3\'c6\'c0\'b4\'d7\'f7\'ce\'aa\'cb\'fc\'c3\'c7\'b5\'c4\'b2\'ce\'ca\'fd\'b1\'ea\'c7\'a9\'a1\'a3
\f0 \cf4 \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 someFunction0\cf4 (firstParameterName: \cf7 Int\cf4 , secondParameterName: \cf7 Int\cf4 ) \{\
            \cf2 // 
\f2 \'d4\'da\'ba\'af\'ca\'fd\'cc\'e5\'c4\'da\'a3\'ac
\f0 firstParameterName 
\f2 \'ba\'cd
\f0  secondParameterName 
\f2 \'b4\'fa\'b1\'ed\'b2\'ce\'ca\'fd\'d6\'d0\'b5\'c4\'b5\'da\'d2\'bb\'b8\'f6\'ba\'cd\'b5\'da\'b6\'fe\'b8\'f6\'b2\'ce\'ca\'fd\'d6\'b5
\f0 \cf4 \
            \cf10 print\cf4 (\cf9 "firstParameterName: \cf4 \\(firstParameterName)\cf9 , secondParameterName: \cf4 \\(secondParameterName)\cf9 "\cf4 )\
        \}\
        \cf11 someFunction0\cf4 (firstParameterName: \cf12 1\cf4 , secondParameterName: \cf12 2\cf4 )\
\cf2 //        
\f2 \'cb\'f9\'d3\'d0\'b5\'c4\'b2\'ce\'ca\'fd\'b6\'bc\'b1\'d8\'d0\'eb\'d3\'d0\'d2\'bb\'b8\'f6\'b6\'c0\'d2\'bb\'ce\'de\'b6\'fe\'b5\'c4\'c3\'fb\'d7\'d6\'a1\'a3\'cb\'e4\'c8\'bb\'b6\'e0\'b8\'f6\'b2\'ce\'ca\'fd\'d3\'b5\'d3\'d0\'cd\'ac\'d1\'f9\'b5\'c4\'b2\'ce\'ca\'fd\'b1\'ea\'c7\'a9\'ca\'c7\'bf\'c9\'c4\'dc\'b5\'c4\'a3\'ac\'b5\'ab\'ca\'c7\'d2\'bb\'b8\'f6\'ce\'a8\'d2\'bb\'b5\'c4\'ba\'af\'ca\'fd\'b1\'ea\'c7\'a9\'c4\'dc\'b9\'bb\'ca\'b9\'c4\'e3\'b5\'c4\'b4\'fa\'c2\'eb\'b8\'fc\'be\'df\'bf\'c9\'b6\'c1\'d0\'d4\'a1\'a3
\f0 \cf4 \
        \
\cf2 //        
\f2 \'d6\'b8\'b6\'a8\'b2\'ce\'ca\'fd\'b1\'ea\'c7\'a9
\f0 \cf4 \
\cf2 //        
\f2 \'c4\'e3\'bf\'c9\'d2\'d4\'d4\'da\'b2\'ce\'ca\'fd\'c3\'fb\'b3\'c6\'c7\'b0\'d6\'b8\'b6\'a8\'cb\'fc\'b5\'c4\'b2\'ce\'ca\'fd\'b1\'ea\'c7\'a9\'a3\'ac\'d6\'d0\'bc\'e4\'d2\'d4\'bf\'d5\'b8\'f1\'b7\'d6\'b8\'f4\'a3\'ba
\f0 \cf4 \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 someFunction\cf4 (argumentLabel parameterName: \cf7 Int\cf4 ) \{\
            \cf2 // 
\f2 \'d4\'da\'ba\'af\'ca\'fd\'cc\'e5\'c4\'da\'a3\'ac
\f0 parameterName 
\f2 \'b4\'fa\'b1\'ed\'b2\'ce\'ca\'fd\'d6\'b5
\f0 \cf4 \
        \}\
        \
\cf2 //        
\f2 \'ba\'f6\'c2\'d4\'b2\'ce\'ca\'fd\'b1\'ea\'c7\'a9
\f0 \cf4 \
\cf2 //        
\f2 \'c8\'e7\'b9\'fb\'c4\'e3\'b2\'bb\'cf\'a3\'cd\'fb\'ce\'aa\'c4\'b3\'b8\'f6\'b2\'ce\'ca\'fd\'cc\'ed\'bc\'d3\'d2\'bb\'b8\'f6\'b1\'ea\'c7\'a9\'a3\'ac\'bf\'c9\'d2\'d4\'ca\'b9\'d3\'c3\'d2\'bb\'b8\'f6\'cf\'c2\'bb\'ae\'cf\'df
\f0 (_)
\f2 \'c0\'b4\'b4\'fa\'cc\'e6\'d2\'bb\'b8\'f6\'c3\'f7\'c8\'b7\'b5\'c4\'b2\'ce\'ca\'fd\'b1\'ea\'c7\'a9\'a1\'a3
\f0 \cf4 \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 someFunction1\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  firstParameterName: \cf7 Int\cf4 , secondParameterName: \cf7 Int\cf4 ) \{\
            \cf2 // 
\f2 \'d4\'da\'ba\'af\'ca\'fd\'cc\'e5\'c4\'da\'a3\'ac
\f0 firstParameterName 
\f2 \'ba\'cd
\f0  secondParameterName 
\f2 \'b4\'fa\'b1\'ed\'b2\'ce\'ca\'fd\'d6\'d0\'b5\'c4\'b5\'da\'d2\'bb\'b8\'f6\'ba\'cd\'b5\'da\'b6\'fe\'b8\'f6\'b2\'ce\'ca\'fd\'d6\'b5
\f0 \cf4 \
        \}\
        \cf11 someFunction1\cf4 (\cf12 1\cf4 , secondParameterName: \cf12 2\cf4 )\
\cf2 //        
\f2 \'c8\'e7\'b9\'fb\'d2\'bb\'b8\'f6\'b2\'ce\'ca\'fd\'d3\'d0\'d2\'bb\'b8\'f6\'b1\'ea\'c7\'a9\'a3\'ac\'c4\'c7\'c3\'b4\'d4\'da\'b5\'f7\'d3\'c3\'b5\'c4\'ca\'b1\'ba\'f2\'b1\'d8\'d0\'eb\'ca\'b9\'d3\'c3\'b1\'ea\'c7\'a9\'c0\'b4\'b1\'ea\'bc\'c7\'d5\'e2\'b8\'f6\'b2\'ce\'ca\'fd\'a1\'a3
\f0 \cf4 \
        \
\cf2 //        
\f2 \'c4\'ac\'c8\'cf\'b2\'ce\'ca\'fd\'d6\'b5
\f0 \cf4 \
\cf2 //        
\f2 \'c4\'e3\'bf\'c9\'d2\'d4\'d4\'da\'ba\'af\'ca\'fd\'cc\'e5\'d6\'d0\'cd\'a8\'b9\'fd\'b8\'f8\'b2\'ce\'ca\'fd\'b8\'b3\'d6\'b5\'c0\'b4\'ce\'aa\'c8\'ce\'d2\'e2\'d2\'bb\'b8\'f6\'b2\'ce\'ca\'fd\'b6\'a8\'d2\'e5\'c4\'ac\'c8\'cf\'d6\'b5\'a3\'a8
\f0 Deafult Value
\f2 \'a3\'a9\'a1\'a3\'b5\'b1\'c4\'ac\'c8\'cf\'d6\'b5\'b1\'bb\'b6\'a8\'d2\'e5\'ba\'f3\'a3\'ac\'b5\'f7\'d3\'c3\'d5\'e2\'b8\'f6\'ba\'af\'ca\'fd\'ca\'b1\'bf\'c9\'d2\'d4\'ba\'f6\'c2\'d4\'d5\'e2\'b8\'f6\'b2\'ce\'ca\'fd\'a1\'a3
\f0 \cf4 \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 someFunction\cf4 (parameterWithoutDefault: \cf7 Int\cf4 , parameterWithDefault: \cf7 Int\cf4  = \cf12 12\cf4 ) \{\
            \cf2 // 
\f2 \'c8\'e7\'b9\'fb\'c4\'e3\'d4\'da\'b5\'f7\'d3\'c3\'ca\'b1\'ba\'f2\'b2\'bb\'b4\'ab\'b5\'da\'b6\'fe\'b8\'f6\'b2\'ce\'ca\'fd\'a3\'ac
\f0 parameterWithDefault 
\f2 \'bb\'e1\'d6\'b5\'ce\'aa
\f0  12 
\f2 \'b4\'ab\'c8\'eb\'b5\'bd\'ba\'af\'ca\'fd\'cc\'e5\'d6\'d0\'a1\'a3
\f0 \cf4 \
        \}\
        \cf11 someFunction\cf4 (parameterWithoutDefault: \cf12 3\cf4 , parameterWithDefault: \cf12 6\cf4 ) \cf2 // parameterWithDefault = 6\cf4 \
        \cf11 someFunction\cf4 (parameterWithoutDefault: \cf12 4\cf4 ) \cf2 // parameterWithDefault = 12\cf4 \
        \
\cf2 //        
\f2 \'bf\'c9\'b1\'e4\'b2\'ce\'ca\'fd
\f0 \cf4 \
\cf2 //        
\f2 \'d2\'bb\'b8\'f6\'bf\'c9\'b1\'e4\'b2\'ce\'ca\'fd\'a3\'a8
\f0 variadic parameter
\f2 \'a3\'a9\'bf\'c9\'d2\'d4\'bd\'d3\'ca\'dc\'c1\'e3\'b8\'f6\'bb\'f2\'b6\'e0\'b8\'f6\'d6\'b5\'a1\'a3\'ba\'af\'ca\'fd\'b5\'f7\'d3\'c3\'ca\'b1\'a3\'ac\'c4\'e3\'bf\'c9\'d2\'d4\'d3\'c3\'bf\'c9\'b1\'e4\'b2\'ce\'ca\'fd\'c0\'b4\'d6\'b8\'b6\'a8\'ba\'af\'ca\'fd\'b2\'ce\'ca\'fd\'bf\'c9\'d2\'d4\'b1\'bb\'b4\'ab\'c8\'eb\'b2\'bb\'c8\'b7\'b6\'a8\'ca\'fd\'c1\'bf\'b5\'c4\'ca\'e4\'c8\'eb\'d6\'b5\'a1\'a3\'cd\'a8\'b9\'fd\'d4\'da\'b1\'e4\'c1\'bf\'c0\'e0\'d0\'cd\'c3\'fb\'ba\'f3\'c3\'e6\'bc\'d3\'c8\'eb\'a3\'a8
\f0 ...
\f2 \'a3\'a9\'b5\'c4\'b7\'bd\'ca\'bd\'c0\'b4\'b6\'a8\'d2\'e5\'bf\'c9\'b1\'e4\'b2\'ce\'ca\'fd\'a1\'a3
\f0 \cf4 \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 arithmeticMean\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  numbers: \cf7 Double\cf4 ...) -> \cf7 Double\cf4  \{\
            
\f1\b \cf5 var
\f0\b0 \cf4  total: \cf7 Double\cf4  = \cf12 0\cf4 \
            
\f1\b \cf5 for
\f0\b0 \cf4  number 
\f1\b \cf5 in
\f0\b0 \cf4  numbers \{\
                total \cf10 +=\cf4  number\
            \}\
            
\f1\b \cf5 return
\f0\b0 \cf4  total \cf10 /\cf4  \cf7 Double\cf4 (numbers.\cf10 count\cf4 )\
        \}\
        \cf10 print\cf4 (\cf11 arithmeticMean\cf4 (\cf12 1\cf4 , \cf12 2\cf4 , \cf12 3\cf4 , \cf12 4\cf4 , \cf12 5\cf4 ))\
        \cf10 print\cf4 (\cf11 arithmeticMean\cf4 (\cf12 3\cf4 , \cf12 8.25\cf4 , \cf12 18.75\cf4 ))\
        \
\cf2 //        
\f2 \'d7\'a2\'d2\'e2\'a3\'ba
\f0 \cf4 \
\cf2 //        
\f2 \'d2\'bb\'b8\'f6\'ba\'af\'ca\'fd\'d7\'ee\'b6\'e0\'d6\'bb\'c4\'dc\'d3\'b5\'d3\'d0\'d2\'bb\'b8\'f6\'bf\'c9\'b1\'e4\'b2\'ce\'ca\'fd\'a1\'a3
\f0 \cf4 \
        \
\cf2 //        
\f2 \'ca\'e4\'c8\'eb\'ca\'e4\'b3\'f6\'b2\'ce\'ca\'fd
\f0 \cf4 \
\cf2 //        
\f2 \'ba\'af\'ca\'fd\'b2\'ce\'ca\'fd\'c4\'ac\'c8\'cf\'ca\'c7\'b3\'a3\'c1\'bf\'a1\'a3\'ca\'d4\'cd\'bc\'d4\'da\'ba\'af\'ca\'fd\'cc\'e5\'d6\'d0\'b8\'fc\'b8\'c4\'b2\'ce\'ca\'fd\'d6\'b5\'bd\'ab\'bb\'e1\'b5\'bc\'d6\'c2\'b1\'e0\'d2\'eb\'b4\'ed\'ce\'f3
\f0 (compile-time error)
\f2 \'a1\'a3\'d5\'e2\'d2\'e2\'ce\'b6\'d7\'c5\'c4\'e3\'b2\'bb\'c4\'dc\'b4\'ed\'ce\'f3\'b5\'d8\'b8\'fc\'b8\'c4\'b2\'ce\'ca\'fd\'d6\'b5\'a1\'a3\'c8\'e7\'b9\'fb\'c4\'e3\'cf\'eb\'d2\'aa\'d2\'bb\'b8\'f6\'ba\'af\'ca\'fd\'bf\'c9\'d2\'d4\'d0\'de\'b8\'c4\'b2\'ce\'ca\'fd\'b5\'c4\'d6\'b5\'a3\'ac\'b2\'a2\'c7\'d2\'cf\'eb\'d2\'aa\'d4\'da\'d5\'e2\'d0\'a9\'d0\'de\'b8\'c4\'d4\'da\'ba\'af\'ca\'fd\'b5\'f7\'d3\'c3\'bd\'e1\'ca\'f8\'ba\'f3\'c8\'d4\'c8\'bb\'b4\'e6\'d4\'da\'a3\'ac\'c4\'c7\'c3\'b4\'be\'cd\'d3\'a6\'b8\'c3\'b0\'d1\'d5\'e2\'b8\'f6\'b2\'ce\'ca\'fd\'b6\'a8\'d2\'e5\'ce\'aa\'ca\'e4\'c8\'eb\'ca\'e4\'b3\'f6\'b2\'ce\'ca\'fd\'a3\'a8
\f0 In-Out Parameters
\f2 \'a3\'a9\'a1\'a3
\f0 \cf4 \
\cf2 //        
\f2 \'b6\'a8\'d2\'e5\'d2\'bb\'b8\'f6\'ca\'e4\'c8\'eb\'ca\'e4\'b3\'f6\'b2\'ce\'ca\'fd\'ca\'b1\'a3\'ac\'d4\'da\'b2\'ce\'ca\'fd\'b6\'a8\'d2\'e5\'c7\'b0\'bc\'d3
\f0  inout 
\f2 \'b9\'d8\'bc\'fc\'d7\'d6\'a1\'a3\'d2\'bb\'b8\'f6\'ca\'e4\'c8\'eb\'ca\'e4\'b3\'f6\'b2\'ce\'ca\'fd\'d3\'d0\'b4\'ab\'c8\'eb\'ba\'af\'ca\'fd\'b5\'c4\'d6\'b5\'a3\'ac\'d5\'e2\'b8\'f6\'d6\'b5\'b1\'bb\'ba\'af\'ca\'fd\'d0\'de\'b8\'c4\'a3\'ac\'c8\'bb\'ba\'f3\'b1\'bb\'b4\'ab\'b3\'f6\'ba\'af\'ca\'fd\'a3\'ac\'cc\'e6\'bb\'bb\'d4\'ad\'c0\'b4\'b5\'c4\'d6\'b5\'a1\'a3
\f0 \cf4 \
\cf2 //        
\f2 \'c4\'e3\'d6\'bb\'c4\'dc\'b4\'ab\'b5\'dd\'b1\'e4\'c1\'bf\'b8\'f8\'ca\'e4\'c8\'eb\'ca\'e4\'b3\'f6\'b2\'ce\'ca\'fd\'a1\'a3\'c4\'e3\'b2\'bb\'c4\'dc\'b4\'ab\'c8\'eb\'b3\'a3\'c1\'bf\'bb\'f2\'d5\'df\'d7\'d6\'c3\'e6\'c1\'bf\'a3\'ac\'d2\'f2\'ce\'aa\'d5\'e2\'d0\'a9\'c1\'bf\'ca\'c7\'b2\'bb\'c4\'dc\'b1\'bb\'d0\'de\'b8\'c4\'b5\'c4\'a1\'a3\'b5\'b1\'b4\'ab\'c8\'eb\'b5\'c4\'b2\'ce\'ca\'fd\'d7\'f7\'ce\'aa\'ca\'e4\'c8\'eb\'ca\'e4\'b3\'f6\'b2\'ce\'ca\'fd\'ca\'b1\'a3\'ac\'d0\'e8\'d2\'aa\'d4\'da\'b2\'ce\'ca\'fd\'c3\'fb\'c7\'b0\'bc\'d3
\f0  & 
\f2 \'b7\'fb\'a3\'ac\'b1\'ed\'ca\'be\'d5\'e2\'b8\'f6\'d6\'b5\'bf\'c9\'d2\'d4\'b1\'bb\'ba\'af\'ca\'fd\'d0\'de\'b8\'c4\'a1\'a3
\f0 \cf4 \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 swapTwoInts\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  a: 
\f1\b \cf5 inout
\f0\b0 \cf4  \cf7 Int\cf4 , 
\f1\b \cf5 _
\f0\b0 \cf4  b: 
\f1\b \cf5 inout
\f0\b0 \cf4  \cf7 Int\cf4 ) \{\
            
\f1\b \cf5 let
\f0\b0 \cf4  temporaryA = a\
            a = b\
            b = temporaryA\
        \}\
        \
        
\f1\b \cf5 var
\f0\b0 \cf4  someInt = \cf12 3\cf4 \
        
\f1\b \cf5 var
\f0\b0 \cf4  anotherInt = \cf12 107\cf4 \
        \cf11 swapTwoInts\cf4 (&someInt, &anotherInt)\
        \cf10 print\cf4 (\cf9 "someInt is now \cf4 \\(someInt)\cf9 , and anotherInt is now \cf4 \\(anotherInt)\cf9 "\cf4 )\
\
\cf2 //        
\f2 \'ba\'af\'ca\'fd\'c0\'e0\'d0\'cd
\f0 \cf4 \
\cf2 //        
\f2 \'c3\'bf\'b8\'f6\'ba\'af\'ca\'fd\'b6\'bc\'d3\'d0\'d6\'d6\'cc\'d8\'b6\'a8\'b5\'c4\'ba\'af\'ca\'fd\'c0\'e0\'d0\'cd\'a3\'ac\'ba\'af\'ca\'fd\'b5\'c4\'c0\'e0\'d0\'cd\'d3\'c9\'ba\'af\'ca\'fd\'b5\'c4\'b2\'ce\'ca\'fd\'c0\'e0\'d0\'cd\'ba\'cd\'b7\'b5\'bb\'d8\'c0\'e0\'d0\'cd\'d7\'e9\'b3\'c9\'a1\'a3
\f0 \cf4 \
\cf2 //        
\f2 \'c0\'fd\'c8\'e7\'a3\'ba
\f0 \cf4 \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 addTwoInts\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  a: \cf7 Int\cf4 , 
\f1\b \cf5 _
\f0\b0 \cf4  b: \cf7 Int\cf4 ) -> \cf7 Int\cf4  \{\
            
\f1\b \cf5 return
\f0\b0 \cf4  a \cf10 +\cf4  b\
        \}\
        \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 multiplyTwoInts\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  a: \cf7 Int\cf4 , 
\f1\b \cf5 _
\f0\b0 \cf4  b: \cf7 Int\cf4 ) -> \cf7 Int\cf4  \{\
            
\f1\b \cf5 return
\f0\b0 \cf4  a \cf10 *\cf4  b\
        \}\
        \
\cf2 //        
\f2 \'d2\'bb\'b8\'f6\'c3\'bb\'d3\'d0\'b2\'ce\'ca\'fd\'a3\'ac\'d2\'b2\'c3\'bb\'d3\'d0\'b7\'b5\'bb\'d8\'d6\'b5\'b5\'c4\'ba\'af\'ca\'fd\'a3\'ba
\f0 \cf4 \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 printHelloWorld\cf4 () \{\
            \cf10 print\cf4 (\cf9 "hello, world"\cf4 )\
        \}\
        \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 printHelloWorld2\cf4 () -> \cf7 Void\cf4  \{\
            \cf10 print\cf4 (\cf9 "hello, world"\cf4 )\
        \}\
\cf2 //        
\f2 \'d5\'e2\'b8\'f6\'ba\'af\'ca\'fd\'b5\'c4\'c0\'e0\'d0\'cd\'ca\'c7\'a3\'ba
\f0 () -> Void
\f2 \'a3\'ac\'bb\'f2\'d5\'df\'bd\'d0
\f0 \'93
\f2 \'c3\'bb\'d3\'d0\'b2\'ce\'ca\'fd\'a3\'ac\'b2\'a2\'b7\'b5\'bb\'d8
\f0  Void 
\f2 \'c0\'e0\'d0\'cd\'b5\'c4\'ba\'af\'ca\'fd
\f0 \'94
\f2 \'a1\'a3
\f0 \cf4 \
        \
\cf2 //        
\f2 \'ba\'af\'ca\'fd\'c0\'e0\'d0\'cd\'d7\'f7\'ce\'aa\'b2\'ce\'ca\'fd\'c0\'e0\'d0\'cd
\f0 \cf4 \
\cf2 //        
\f2 \'c4\'e3\'bf\'c9\'d2\'d4\'d3\'c3
\f0  (Int, Int) -> Int 
\f2 \'d5\'e2\'d1\'f9\'b5\'c4\'ba\'af\'ca\'fd\'c0\'e0\'d0\'cd\'d7\'f7\'ce\'aa\'c1\'ed\'d2\'bb\'b8\'f6\'ba\'af\'ca\'fd\'b5\'c4\'b2\'ce\'ca\'fd\'c0\'e0\'d0\'cd\'a1\'a3\'d5\'e2\'d1\'f9\'c4\'e3\'bf\'c9\'d2\'d4\'bd\'ab\'ba\'af\'ca\'fd\'b5\'c4\'d2\'bb\'b2\'bf\'b7\'d6\'ca\'b5\'cf\'d6\'c1\'f4\'b8\'f8\'ba\'af\'ca\'fd\'b5\'c4\'b5\'f7\'d3\'c3\'d5\'df\'c0\'b4\'cc\'e1\'b9\'a9\'a1\'a3
\f0 \cf4 \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 printMathResult\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  mathFunction: (\cf7 Int\cf4 , \cf7 Int\cf4 ) -> \cf7 Int\cf4 , 
\f1\b \cf5 _
\f0\b0 \cf4  a: \cf7 Int\cf4 , 
\f1\b \cf5 _
\f0\b0 \cf4  b: \cf7 Int\cf4 ) \{\
            \cf10 print\cf4 (\cf9 "Result: \cf4 \\(mathFunction(a, b))\cf9 "\cf4 )\
        \}\
        \cf11 printMathResult\cf4 (\cf11 addTwoInts\cf4 , \cf12 3\cf4 , \cf12 5\cf4 )\
\
\cf2 //        
\f2 \'ba\'af\'ca\'fd\'c0\'e0\'d0\'cd\'d7\'f7\'ce\'aa\'b7\'b5\'bb\'d8\'c0\'e0\'d0\'cd
\f0 \cf4 \
\cf2 //        
\f2 \'c4\'e3\'bf\'c9\'d2\'d4\'d3\'c3\'ba\'af\'ca\'fd\'c0\'e0\'d0\'cd\'d7\'f7\'ce\'aa\'c1\'ed\'d2\'bb\'b8\'f6\'ba\'af\'ca\'fd\'b5\'c4\'b7\'b5\'bb\'d8\'c0\'e0\'d0\'cd\'a1\'a3\'c4\'e3\'d0\'e8\'d2\'aa\'d7\'f6\'b5\'c4\'ca\'c7\'d4\'da\'b7\'b5\'bb\'d8\'bc\'fd\'cd\'b7\'a3\'a8
\f0 ->
\f2 \'a3\'a9\'ba\'f3\'d0\'b4\'d2\'bb\'b8\'f6\'cd\'ea\'d5\'fb\'b5\'c4\'ba\'af\'ca\'fd\'c0\'e0\'d0\'cd\'a1\'a3
\f0 \cf4 \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 stepForward\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  input: 
\f1\b \cf5 inout
\f0\b0 \cf4  \cf7 Int\cf4 ) -> \cf7 Int\cf4  \{\
            
\f1\b \cf5 return
\f0\b0 \cf4  input \cf10 +\cf4  \cf12 1\cf4 \
        \}\
        \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 stepBackward\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  input: 
\f1\b \cf5 inout
\f0\b0 \cf4  \cf7 Int\cf4 ) -> \cf7 Int\cf4  \{\
            
\f1\b \cf5 return
\f0\b0 \cf4  input \cf10 -\cf4  \cf12 1\cf4 \
        \}\
        \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 chooseStepFunction\cf4 (backward: \cf7 Bool\cf4 ) -> (
\f1\b \cf5 inout
\f0\b0 \cf4  \cf7 Int\cf4 ) -> \cf7 Int\cf4  \{\
            
\f1\b \cf5 return
\f0\b0 \cf4  backward ? \cf11 stepBackward\cf4  : \cf11 stepForward\cf4 \
        \}\
        \
        
\f1\b \cf5 var
\f0\b0 \cf4  currentValue = \cf12 3\cf4 \
        
\f1\b \cf5 let
\f0\b0 \cf4  moveNearerToZero = \cf11 chooseStepFunction\cf4 (backward: currentValue \cf10 >\cf4  \cf12 0\cf4 )\
        \
        \cf10 print\cf4 (\cf9 "Counting to zero:"\cf4 )\
        \cf2 // Counting to zero:\cf4 \
        
\f1\b \cf5 while
\f0\b0 \cf4  currentValue \cf10 !=\cf4  \cf12 0\cf4  \{\
            \cf10 print\cf4 (\cf9 "\cf4 \\(currentValue)\cf9 ... "\cf4 )\
            currentValue = moveNearerToZero(&currentValue)\
        \}\
        \cf10 print\cf4 (\cf9 "0!"\cf4 )\
        \
\cf2 //        
\f2 \'c7\'b6\'cc\'d7\'ba\'af\'ca\'fd
\f0 \cf4 \
\cf2 //        
\f2 \'b5\'bd\'c4\'bf\'c7\'b0\'ce\'aa\'d6\'b9\'b1\'be\'d5\'c2\'d6\'d0\'c4\'e3\'cb\'f9\'bc\'fb\'b5\'bd\'b5\'c4\'cb\'f9\'d3\'d0\'ba\'af\'ca\'fd\'b6\'bc\'bd\'d0\'c8\'ab\'be\'d6\'ba\'af\'ca\'fd\'a3\'a8
\f0 global functions
\f2 \'a3\'a9\'a3\'ac\'cb\'fc\'c3\'c7\'b6\'a8\'d2\'e5\'d4\'da\'c8\'ab\'be\'d6\'d3\'f2\'d6\'d0\'a1\'a3\'c4\'e3\'d2\'b2\'bf\'c9\'d2\'d4\'b0\'d1\'ba\'af\'ca\'fd\'b6\'a8\'d2\'e5\'d4\'da\'b1\'f0\'b5\'c4\'ba\'af\'ca\'fd\'cc\'e5\'d6\'d0\'a3\'ac\'b3\'c6\'d7\'f7
\f0  
\f2 \'c7\'b6\'cc\'d7\'ba\'af\'ca\'fd\'a3\'a8
\f0 nested functions
\f2 \'a3\'a9\'a1\'a3
\f0 \cf4 \
        \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 chooseStepFunction2\cf4 (backward: \cf7 Bool\cf4 ) -> (\cf7 Int\cf4 ) -> \cf7 Int\cf4  \{\
            
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 stepForward\cf4 (input: \cf7 Int\cf4 ) -> \cf7 Int\cf4  \{ 
\f1\b \cf5 return
\f0\b0 \cf4  input \cf10 +\cf4  \cf12 1\cf4  \}\
            
\f1\b \cf5 func
\f0\b0 \cf4  \cf8 stepBackward\cf4 (input: \cf7 Int\cf4 ) -> \cf7 Int\cf4  \{ 
\f1\b \cf5 return
\f0\b0 \cf4  input \cf10 -\cf4  \cf12 1\cf4  \}\
            
\f1\b \cf5 return
\f0\b0 \cf4  backward ? \cf11 stepBackward\cf4  : \cf11 stepForward\cf4 \
        \}\
        
\f1\b \cf5 var
\f0\b0 \cf4  currentValue2 = \cf12 -4\cf4 \
        
\f1\b \cf5 let
\f0\b0 \cf4  moveNearerToZero2 = \cf11 chooseStepFunction2\cf4 (backward: currentValue2 \cf10 >\cf4  \cf12 0\cf4 )\
        \cf2 // moveNearerToZero now refers to the nested stepForward() function\cf4 \
        
\f1\b \cf5 while
\f0\b0 \cf4  currentValue2 \cf10 !=\cf4  \cf12 0\cf4  \{\
            \cf10 print\cf4 (\cf9 "\cf4 \\(currentValue2)\cf9 ... "\cf4 )\
            currentValue2 = moveNearerToZero2(currentValue2)\
        \}\
        \cf10 print\cf4 (\cf9 "zero!"\cf4 )\
        \cf2 // -4...\cf4 \
        \cf2 // -3...\cf4 \
        \cf2 // -2...\cf4 \
        \cf2 // -1...\cf4 \
        \cf2 // zero!\cf4 \
        \
    \}\
\}\
}