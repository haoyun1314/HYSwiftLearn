{\rtf1\ansi\ansicpg936\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;\f2\fnil\fcharset134 PingFangSC-Regular;
}
{\colortbl;\red255\green255\blue255;\red38\green117\blue7;\red255\green255\blue255;\red0\green0\blue0;
\red155\green35\blue147;\red57\green0\blue160;\red15\green104\blue160;\red108\green54\blue169;\red28\green0\blue207;
\red11\green79\blue121;\red28\green70\blue74;\red50\green109\blue116;\red196\green26\blue22;}
{\*\expandedcolortbl;;\csgenericrgb\c14771\c45953\c2591;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0\c85000;
\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c22454\c0\c62803;\csgenericrgb\c5696\c40622\c62817;\csgenericrgb\c42190\c21278\c66379;\csgenericrgb\c11000\c0\c81000;
\csgenericrgb\c4477\c31152\c47474;\csgenericrgb\c10981\c27276\c28869;\csgenericrgb\c19418\c42935\c45455;\csgenericrgb\c77000\c10200\c8600;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 //\cf4 \
\cf2 //  ExtensionsUsage.swift\cf4 \
\cf2 //  Extensions\cf4 \
\cf2 //\cf4 \
\cf2 //  Created by dyf on 2017/10/23.\cf4 \
\cf2 //  Copyright \'a9 2017 dyf. All rights reserved.\cf4 \
\cf2 //\cf4 \
\

\f1\b \cf5 import
\f0\b0 \cf4  UIKit\
\
\cf2 //
\f2 \'b1\'be\'d2\'b3\'b0\'fc\'ba\'ac\'c4\'da\'c8\'dd\'a3\'ba
\f0 \cf4 \
\cf2 //
\f2 \'c0\'a9\'d5\'b9\'d3\'ef\'b7\'a8
\f0 \cf4 \
\cf2 //
\f2 \'bc\'c6\'cb\'e3\'d0\'cd\'ca\'f4\'d0\'d4
\f0 \cf4 \
\cf2 //
\f2 \'b9\'b9\'d4\'ec\'c6\'f7
\f0 \cf4 \
\cf2 //
\f2 \'b7\'bd\'b7\'a8
\f0 \cf4 \
\cf2 //
\f2 \'cf\'c2\'b1\'ea
\f0 \cf4 \
\cf2 //
\f2 \'c7\'b6\'cc\'d7\'c0\'e0\'d0\'cd
\f0 \cf4 \
\cf2 //
\f2 \'c0\'a9\'d5\'b9
\f0  
\f2 \'be\'cd\'ca\'c7\'ce\'aa\'d2\'bb\'b8\'f6\'d2\'d1\'d3\'d0\'b5\'c4\'c0\'e0\'a1\'a2\'bd\'e1\'b9\'b9\'cc\'e5\'a1\'a2\'c3\'b6\'be\'d9\'c0\'e0\'d0\'cd\'bb\'f2\'d5\'df\'d0\'ad\'d2\'e9\'c0\'e0\'d0\'cd\'cc\'ed\'bc\'d3\'d0\'c2\'b9\'a6\'c4\'dc\'a1\'a3\'d5\'e2\'b0\'fc\'c0\'a8\'d4\'da\'c3\'bb\'d3\'d0\'c8\'a8\'cf\'de\'bb\'f1\'c8\'a1\'d4\'ad\'ca\'bc\'d4\'b4\'b4\'fa\'c2\'eb\'b5\'c4\'c7\'e9\'bf\'f6\'cf\'c2\'c0\'a9\'d5\'b9\'c0\'e0\'d0\'cd\'b5\'c4\'c4\'dc\'c1\'a6\'a3\'a8\'bc\'b4
\f0  
\f2 \'c4\'e6\'cf\'f2\'bd\'a8\'c4\'a3
\f0  
\f2 \'a3\'a9\'a1\'a3\'c0\'a9\'d5\'b9\'ba\'cd
\f0  Objective-C 
\f2 \'d6\'d0\'b5\'c4\'b7\'d6\'c0\'e0\'c0\'e0\'cb\'c6\'a1\'a3\'a3\'a8\'d3\'eb
\f0  Objective-C 
\f2 \'b2\'bb\'cd\'ac\'b5\'c4\'ca\'c7\'a3\'ac
\f0 Swift 
\f2 \'b5\'c4\'c0\'a9\'d5\'b9\'c3\'bb\'d3\'d0\'c3\'fb\'d7\'d6\'a1\'a3\'a3\'a9
\f0 \cf4 \
\
\cf2 //Swift 
\f2 \'d6\'d0\'b5\'c4\'c0\'a9\'d5\'b9\'bf\'c9\'d2\'d4\'a3\'ba
\f0 \cf4 \
\cf2 //
\f2 \'cc\'ed\'bc\'d3\'bc\'c6\'cb\'e3\'d0\'cd\'ca\'f4\'d0\'d4\'ba\'cd\'bc\'c6\'cb\'e3\'d0\'cd\'c0\'e0\'d0\'cd\'ca\'f4\'d0\'d4
\f0 \cf4 \
\cf2 //
\f2 \'b6\'a8\'d2\'e5\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'ba\'cd\'c0\'e0\'d0\'cd\'b7\'bd\'b7\'a8
\f0 \cf4 \
\cf2 //
\f2 \'cc\'e1\'b9\'a9\'d0\'c2\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7
\f0 \cf4 \
\cf2 //
\f2 \'b6\'a8\'d2\'e5\'cf\'c2\'b1\'ea
\f0 \cf4 \
\cf2 //
\f2 \'b6\'a8\'d2\'e5\'ba\'cd\'ca\'b9\'d3\'c3\'d0\'c2\'b5\'c4\'c7\'b6\'cc\'d7\'c0\'e0\'d0\'cd
\f0 \cf4 \
\cf2 //
\f2 \'ca\'b9\'d2\'bb\'b8\'f6\'d2\'d1\'d3\'d0\'c0\'e0\'d0\'cd\'b7\'fb\'ba\'cf\'c4\'b3\'b8\'f6\'d0\'ad\'d2\'e9
\f0 \cf4 \
\cf2 //
\f2 \'d4\'da
\f0  Swift 
\f2 \'d6\'d0\'a3\'ac\'c4\'e3\'c9\'f5\'d6\'c1\'bf\'c9\'d2\'d4\'b6\'d4\'d0\'ad\'d2\'e9\'bd\'f8\'d0\'d0\'c0\'a9\'d5\'b9\'a3\'ac\'cc\'e1\'b9\'a9\'d0\'ad\'d2\'e9\'d2\'aa\'c7\'f3\'b5\'c4\'ca\'b5\'cf\'d6\'a3\'ac\'bb\'f2\'d5\'df\'cc\'ed\'bc\'d3\'b6\'ee\'cd\'e2\'b5\'c4\'b9\'a6\'c4\'dc\'a3\'ac\'b4\'d3\'b6\'f8\'bf\'c9\'d2\'d4\'c8\'c3\'b7\'fb\'ba\'cf\'d0\'ad\'d2\'e9\'b5\'c4\'c0\'e0\'d0\'cd\'d3\'b5\'d3\'d0\'d5\'e2\'d0\'a9\'b9\'a6\'c4\'dc\'a1\'a3\'c4\'e3\'bf\'c9\'d2\'d4\'b4\'d3\'d0\'ad\'d2\'e9\'c0\'a9\'d5\'b9\'bb\'f1\'c8\'a1\'b8\'fc\'b6\'e0\'b5\'c4\'cf\'b8\'bd\'da\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'d7\'a2\'d2\'e2
\f0 \cf4 \
\cf2 //
\f2 \'c0\'a9\'d5\'b9\'bf\'c9\'d2\'d4\'ce\'aa\'d2\'bb\'b8\'f6\'c0\'e0\'d0\'cd\'cc\'ed\'bc\'d3\'d0\'c2\'b5\'c4\'b9\'a6\'c4\'dc\'a3\'ac\'b5\'ab\'ca\'c7\'b2\'bb\'c4\'dc\'d6\'d8\'d0\'b4\'d2\'d1\'d3\'d0\'b5\'c4\'b9\'a6\'c4\'dc\'a1\'a3
\f0 \cf4 \
\
\
\cf2 //
\f2 \'c0\'a9\'d5\'b9\'d3\'ef\'b7\'a8
\f0 \cf4 \
\cf2 //
\f2 \'ca\'b9\'d3\'c3\'b9\'d8\'bc\'fc\'d7\'d6
\f0  extension 
\f2 \'c0\'b4\'c9\'f9\'c3\'f7\'c0\'a9\'d5\'b9\'a3\'ba
\f0 \cf4 \
\cf2 //extension SomeType \{\cf4 \
    \cf2 // 
\f2 \'ce\'aa
\f0  SomeType 
\f2 \'cc\'ed\'bc\'d3\'b5\'c4\'d0\'c2\'b9\'a6\'c4\'dc\'d0\'b4\'b5\'bd\'d5\'e2\'c0\'ef
\f0 \cf4 \
\cf2 //\}\cf4 \
\
\cf2 //
\f2 \'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd\'c0\'a9\'d5\'b9\'c0\'b4\'c0\'a9\'d5\'b9\'d2\'bb\'b8\'f6\'d2\'d1\'d3\'d0\'c0\'e0\'d0\'cd\'a3\'ac\'ca\'b9\'c6\'e4\'b2\'c9\'c4\'c9\'d2\'bb\'b8\'f6\'bb\'f2\'b6\'e0\'b8\'f6\'d0\'ad\'d2\'e9\'a1\'a3\'d4\'da\'d5\'e2\'d6\'d6\'c7\'e9\'bf\'f6\'cf\'c2\'a3\'ac\'ce\'de\'c2\'db\'ca\'c7\'c0\'e0\'bb\'b9\'ca\'c7\'bd\'e1\'b9\'b9\'cc\'e5\'a3\'ac\'d0\'ad\'d2\'e9\'c3\'fb\'d7\'d6\'b5\'c4\'ca\'e9\'d0\'b4\'b7\'bd\'ca\'bd\'cd\'ea\'c8\'ab\'d2\'bb\'d1\'f9\'a3\'ba
\f0 \cf4 \
\cf2 //extension SomeType: SomeProtocol, AnotherProctocol \{\cf4 \
    \cf2 // 
\f2 \'d0\'ad\'d2\'e9\'ca\'b5\'cf\'d6\'d0\'b4\'b5\'bd\'d5\'e2\'c0\'ef
\f0 \cf4 \
\cf2 //\}\cf4 \
\
\cf2 //
\f2 \'cd\'a8\'b9\'fd\'d5\'e2\'d6\'d6\'b7\'bd\'ca\'bd\'cc\'ed\'bc\'d3\'d0\'ad\'d2\'e9\'d2\'bb\'d6\'c2\'d0\'d4\'b5\'c4\'cf\'ea\'cf\'b8\'c3\'e8\'ca\'f6\'c7\'eb\'b2\'ce\'d4\'c4\'c0\'fb\'d3\'c3\'c0\'a9\'d5\'b9\'cc\'ed\'bc\'d3\'d0\'ad\'d2\'e9\'d2\'bb\'d6\'c2\'d0\'d4\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'d7\'a2\'d2\'e2
\f0 \cf4 \
\cf2 //
\f2 \'c8\'e7\'b9\'fb\'c4\'e3\'cd\'a8\'b9\'fd\'c0\'a9\'d5\'b9\'ce\'aa\'d2\'bb\'b8\'f6\'d2\'d1\'d3\'d0\'c0\'e0\'d0\'cd\'cc\'ed\'bc\'d3\'d0\'c2\'b9\'a6\'c4\'dc\'a3\'ac\'c4\'c7\'c3\'b4\'d0\'c2\'b9\'a6\'c4\'dc\'b6\'d4\'b8\'c3\'c0\'e0\'d0\'cd\'b5\'c4\'cb\'f9\'d3\'d0\'d2\'d1\'d3\'d0\'ca\'b5\'c0\'fd\'b6\'bc\'ca\'c7\'bf\'c9\'d3\'c3\'b5\'c4\'a3\'ac\'bc\'b4\'ca\'b9\'cb\'fc\'c3\'c7\'ca\'c7\'d4\'da\'d5\'e2\'b8\'f6\'c0\'a9\'d5\'b9\'b6\'a8\'d2\'e5\'d6\'ae\'c7\'b0\'b4\'b4\'bd\'a8\'b5\'c4\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'bc\'c6\'cb\'e3\'d0\'cd\'ca\'f4\'d0\'d4
\f0 \cf4 \
\cf2 //
\f2 \'c0\'a9\'d5\'b9\'bf\'c9\'d2\'d4\'ce\'aa\'d2\'d1\'d3\'d0\'c0\'e0\'d0\'cd\'cc\'ed\'bc\'d3\'bc\'c6\'cb\'e3\'d0\'cd\'ca\'b5\'c0\'fd\'ca\'f4\'d0\'d4\'ba\'cd\'bc\'c6\'cb\'e3\'d0\'cd\'c0\'e0\'d0\'cd\'ca\'f4\'d0\'d4\'a1\'a3\'cf\'c2\'c3\'e6\'b5\'c4\'c0\'fd\'d7\'d3\'ce\'aa
\f0  Swift 
\f2 \'b5\'c4\'c4\'da\'bd\'a8
\f0  Double 
\f2 \'c0\'e0\'d0\'cd\'cc\'ed\'bc\'d3\'c1\'cb\'ce\'e5\'b8\'f6\'bc\'c6\'cb\'e3\'d0\'cd\'ca\'b5\'c0\'fd\'ca\'f4\'d0\'d4\'a3\'ac\'b4\'d3\'b6\'f8\'cc\'e1\'b9\'a9\'d3\'eb\'be\'e0\'c0\'eb\'b5\'a5\'ce\'bb\'d0\'ad\'d7\'f7\'b5\'c4\'bb\'f9\'b1\'be\'d6\'a7\'b3\'d6\'a3\'ba
\f0 \cf4 \

\f1\b \cf5 extension
\f0\b0 \cf4  \cf6 Double\cf4  \{\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf7 km\cf4 : \cf6 Double\cf4  \{ 
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 self
\f0\b0 \cf4  \cf8 *\cf4  \cf9 1_000.0\cf4  \}\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf7 m\cf4  : \cf6 Double\cf4  \{ 
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 self
\f0\b0 \cf4  \}\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf7 cm\cf4 : \cf6 Double\cf4  \{ 
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 self
\f0\b0 \cf4  \cf8 /\cf4  \cf9 100.0\cf4  \}\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf7 mm\cf4 : \cf6 Double\cf4  \{ 
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 self
\f0\b0 \cf4  \cf8 /\cf4  \cf9 1000.0\cf4  \}\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf7 ft\cf4 : \cf6 Double\cf4  \{ 
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 self
\f0\b0 \cf4  \cf8 /\cf4  \cf9 3.28084\cf4  \}\
\}\
\
\
\cf2 //
\f2 \'b9\'b9\'d4\'ec\'c6\'f7
\f0 \cf4 \
\cf2 //
\f2 \'c0\'a9\'d5\'b9\'bf\'c9\'d2\'d4\'ce\'aa\'d2\'d1\'d3\'d0\'c0\'e0\'d0\'cd\'cc\'ed\'bc\'d3\'d0\'c2\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'a1\'a3\'d5\'e2\'bf\'c9\'d2\'d4\'c8\'c3\'c4\'e3\'c0\'a9\'d5\'b9\'c6\'e4\'cb\'fc\'c0\'e0\'d0\'cd\'a3\'ac\'bd\'ab\'c4\'e3\'d7\'d4\'bc\'ba\'b5\'c4\'b6\'a8\'d6\'c6\'c0\'e0\'d0\'cd\'d7\'f7\'ce\'aa\'c6\'e4\'b9\'b9\'d4\'ec\'c6\'f7\'b2\'ce\'ca\'fd\'a3\'ac\'bb\'f2\'d5\'df\'cc\'e1\'b9\'a9\'b8\'c3\'c0\'e0\'d0\'cd\'b5\'c4\'d4\'ad\'ca\'bc\'ca\'b5\'cf\'d6\'d6\'d0\'ce\'b4\'cc\'e1\'b9\'a9\'b5\'c4\'b6\'ee\'cd\'e2\'b3\'f5\'ca\'bc\'bb\'af\'d1\'a1\'cf\'ee\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'c0\'a9\'d5\'b9\'c4\'dc\'ce\'aa\'c0\'e0\'cc\'ed\'bc\'d3\'d0\'c2\'b5\'c4\'b1\'e3\'c0\'fb\'b9\'b9\'d4\'ec\'c6\'f7\'a3\'ac\'b5\'ab\'ca\'c7\'cb\'fc\'c3\'c7\'b2\'bb\'c4\'dc\'ce\'aa\'c0\'e0\'cc\'ed\'bc\'d3\'d0\'c2\'b5\'c4\'d6\'b8\'b6\'a8\'b9\'b9\'d4\'ec\'c6\'f7\'bb\'f2\'ce\'f6\'b9\'b9\'c6\'f7\'a1\'a3\'d6\'b8\'b6\'a8\'b9\'b9\'d4\'ec\'c6\'f7\'ba\'cd\'ce\'f6\'b9\'b9\'c6\'f7\'b1\'d8\'d0\'eb\'d7\'dc\'ca\'c7\'d3\'c9\'d4\'ad\'ca\'bc\'b5\'c4\'c0\'e0\'ca\'b5\'cf\'d6\'c0\'b4\'cc\'e1\'b9\'a9\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'d7\'a2\'d2\'e2
\f0 \cf4 \
\cf2 //
\f2 \'c8\'e7\'b9\'fb\'c4\'e3\'ca\'b9\'d3\'c3\'c0\'a9\'d5\'b9\'ce\'aa\'d2\'bb\'b8\'f6\'d6\'b5\'c0\'e0\'d0\'cd\'cc\'ed\'bc\'d3\'b9\'b9\'d4\'ec\'c6\'f7\'a3\'ac\'cd\'ac\'ca\'b1\'b8\'c3\'d6\'b5\'c0\'e0\'d0\'cd\'b5\'c4\'d4\'ad\'ca\'bc\'ca\'b5\'cf\'d6\'d6\'d0\'ce\'b4\'b6\'a8\'d2\'e5\'c8\'ce\'ba\'ce\'b6\'a8\'d6\'c6\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'c7\'d2\'cb\'f9\'d3\'d0\'b4\'e6\'b4\'a2\'ca\'f4\'d0\'d4\'cc\'e1\'b9\'a9\'c1\'cb\'c4\'ac\'c8\'cf\'d6\'b5\'a3\'ac\'c4\'c7\'c3\'b4\'ce\'d2\'c3\'c7\'be\'cd\'bf\'c9\'d2\'d4\'d4\'da\'c0\'a9\'d5\'b9\'d6\'d0\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'c0\'ef\'b5\'f7\'d3\'c3\'c4\'ac\'c8\'cf\'b9\'b9\'d4\'ec\'c6\'f7\'ba\'cd\'d6\'f0\'d2\'bb\'b3\'c9\'d4\'b1\'b9\'b9\'d4\'ec\'c6\'f7\'a1\'a3
\f0 \cf4 \
\cf2 //
\f2 \'d5\'fd\'c8\'e7\'d4\'da\'d6\'b5\'c0\'e0\'d0\'cd\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'b4\'fa\'c0\'ed\'d6\'d0\'c3\'e8\'ca\'f6\'b5\'c4\'a3\'ac\'c8\'e7\'b9\'fb\'c4\'e3\'b0\'d1\'b6\'a8\'d6\'c6\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'d0\'b4\'d4\'da\'d6\'b5\'c0\'e0\'d0\'cd\'b5\'c4\'d4\'ad\'ca\'bc\'ca\'b5\'cf\'d6\'d6\'d0\'a3\'ac\'c9\'cf\'ca\'f6\'b9\'e6\'d4\'f2\'bd\'ab\'b2\'bb\'d4\'d9\'ca\'ca\'d3\'c3\'a1\'a3
\f0 \cf4 \
\cf2 //
\f2 \'cf\'c2\'c3\'e6\'b5\'c4\'c0\'fd\'d7\'d3\'b6\'a8\'d2\'e5\'c1\'cb\'d2\'bb\'b8\'f6\'d3\'c3\'d3\'da\'c3\'e8\'ca\'f6\'bc\'b8\'ba\'ce\'be\'d8\'d0\'ce\'b5\'c4\'bd\'e1\'b9\'b9\'cc\'e5
\f0  Rect
\f2 \'a1\'a3\'d5\'e2\'b8\'f6\'c0\'fd\'d7\'d3\'cd\'ac\'ca\'b1\'b6\'a8\'d2\'e5\'c1\'cb\'c1\'bd\'b8\'f6\'b8\'a8\'d6\'fa\'bd\'e1\'b9\'b9\'cc\'e5
\f0  Size 
\f2 \'ba\'cd
\f0  Point
\f2 \'a3\'ac\'cb\'fc\'c3\'c7\'b6\'bc\'b0\'d1
\f0  0.0 
\f2 \'d7\'f7\'ce\'aa\'cb\'f9\'d3\'d0\'ca\'f4\'d0\'d4\'b5\'c4\'c4\'ac\'c8\'cf\'d6\'b5\'a3\'ba
\f0 \cf4 \
\

\f1\b \cf5 struct
\f0\b0 \cf4  \cf10 Size\cf4  \{\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf7 width\cf4  = \cf9 0.0\cf4 , \cf7 height\cf4  = \cf9 0.0\cf4 \
\}\
\

\f1\b \cf5 struct
\f0\b0 \cf4  \cf10 Point\cf4  \{\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf7 x\cf4  = \cf9 0.0\cf4 , \cf7 y\cf4  = \cf9 0.0\cf4 \
\}\
\

\f1\b \cf5 struct
\f0\b0 \cf4  \cf10 Rect\cf4  \{\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf7 origin\cf4  = \cf11 Point\cf4 ()\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf7 size\cf4  = \cf11 Size\cf4 ()\
\}\
\
\cf2 //
\f2 \'c4\'e3\'bf\'c9\'d2\'d4\'cc\'e1\'b9\'a9\'d2\'bb\'b8\'f6\'b6\'ee\'cd\'e2\'b5\'c4\'bd\'d3\'ca\'dc\'d6\'b8\'b6\'a8\'d6\'d0\'d0\'c4\'b5\'e3\'ba\'cd\'b4\'f3\'d0\'a1\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'c0\'b4\'c0\'a9\'d5\'b9
\f0  Rect 
\f2 \'bd\'e1\'b9\'b9\'cc\'e5\'a3\'ba
\f0 \cf4 \

\f1\b \cf5 extension
\f0\b0 \cf4  \cf11 Rect\cf4  \{\
    
\f1\b \cf5 init
\f0\b0 \cf4 (center: \cf11 Point\cf4 , size: \cf11 Size\cf4 ) \{\
        
\f1\b \cf5 let
\f0\b0 \cf4  originX = center.\cf12 x\cf4  \cf8 -\cf4  size.\cf12 width\cf8 /\cf9 2\cf4 \
        
\f1\b \cf5 let
\f0\b0 \cf4  originY = center.\cf12 y\cf4  \cf8 -\cf4  size.\cf12 height\cf8 /\cf9 2\cf4 \
        
\f1\b \cf5 self
\f0\b0 \cf4 .\cf11 init\cf4 (origin: \cf11 Point\cf4 (x: originX, y: originY), size: size)\
    \}\
\}\
\
\cf2 //
\f2 \'b7\'bd\'b7\'a8
\f0 \cf4 \
\cf2 //
\f2 \'c0\'a9\'d5\'b9\'bf\'c9\'d2\'d4\'ce\'aa\'d2\'d1\'d3\'d0\'c0\'e0\'d0\'cd\'cc\'ed\'bc\'d3\'d0\'c2\'b5\'c4\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'ba\'cd\'c0\'e0\'d0\'cd\'b7\'bd\'b7\'a8\'a1\'a3\'cf\'c2\'c3\'e6\'b5\'c4\'c0\'fd\'d7\'d3\'ce\'aa
\f0  Int 
\f2 \'c0\'e0\'d0\'cd\'cc\'ed\'bc\'d3\'c1\'cb\'d2\'bb\'b8\'f6\'c3\'fb\'ce\'aa
\f0  repetitions 
\f2 \'b5\'c4\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'a3\'ba
\f0 \cf4 \

\f1\b \cf5 extension
\f0\b0 \cf4  \cf6 Int\cf4  \{\
    
\f1\b \cf5 func
\f0\b0 \cf4  \cf7 repetitions\cf4 (task: () -> \cf6 Void\cf4 ) \{\
        
\f1\b \cf5 for
\f0\b0 \cf4  
\f1\b \cf5 _
\f0\b0 \cf4  
\f1\b \cf5 in
\f0\b0 \cf4  \cf9 0\cf8 ..<
\f1\b \cf5 self
\f0\b0 \cf4  \{\
            task()\
        \}\
    \}\
\}\
\
\cf2 //
\f2 \'d5\'e2\'b8\'f6
\f0  repetitions(task:) 
\f2 \'b7\'bd\'b7\'a8\'bd\'d3\'ca\'dc\'d2\'bb\'b8\'f6
\f0  () -> Void 
\f2 \'c0\'e0\'d0\'cd\'b5\'c4\'b5\'a5\'b2\'ce\'ca\'fd\'a3\'ac\'b1\'ed\'ca\'be\'c3\'bb\'d3\'d0\'b2\'ce\'ca\'fd\'c7\'d2\'c3\'bb\'d3\'d0\'b7\'b5\'bb\'d8\'d6\'b5\'b5\'c4\'ba\'af\'ca\'fd\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'bf\'c9\'b1\'e4\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8
\f0 \cf4 \
\cf2 //
\f2 \'cd\'a8\'b9\'fd\'c0\'a9\'d5\'b9\'cc\'ed\'bc\'d3\'b5\'c4\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'d2\'b2\'bf\'c9\'d2\'d4\'d0\'de\'b8\'c4\'b8\'c3\'ca\'b5\'c0\'fd\'b1\'be\'c9\'ed\'a1\'a3\'bd\'e1\'b9\'b9\'cc\'e5\'ba\'cd\'c3\'b6\'be\'d9\'c0\'e0\'d0\'cd\'d6\'d0\'d0\'de\'b8\'c4
\f0  self 
\f2 \'bb\'f2\'c6\'e4\'ca\'f4\'d0\'d4\'b5\'c4\'b7\'bd\'b7\'a8\'b1\'d8\'d0\'eb\'bd\'ab\'b8\'c3\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'b1\'ea\'d7\'a2\'ce\'aa
\f0  mutating
\f2 \'a3\'ac\'d5\'fd\'c8\'e7\'c0\'b4\'d7\'d4\'d4\'ad\'ca\'bc\'ca\'b5\'cf\'d6\'b5\'c4\'bf\'c9\'b1\'e4\'b7\'bd\'b7\'a8\'d2\'bb\'d1\'f9\'a1\'a3
\f0 \cf4 \
\cf2 //
\f2 \'cf\'c2\'c3\'e6\'b5\'c4\'c0\'fd\'d7\'d3\'ce\'aa
\f0  Swift 
\f2 \'b5\'c4
\f0  Int 
\f2 \'c0\'e0\'d0\'cd\'cc\'ed\'bc\'d3\'c1\'cb\'d2\'bb\'b8\'f6\'c3\'fb\'ce\'aa
\f0  square 
\f2 \'b5\'c4\'bf\'c9\'b1\'e4\'b7\'bd\'b7\'a8\'a3\'ac\'d3\'c3\'d3\'da\'bc\'c6\'cb\'e3\'d4\'ad\'ca\'bc\'d6\'b5\'b5\'c4\'c6\'bd\'b7\'bd\'d6\'b5
\f0 \cf4 \

\f1\b \cf5 extension
\f0\b0 \cf4  \cf6 Int\cf4  \{\
    
\f1\b \cf5 mutating
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf7 square\cf4 () \{\
        
\f1\b \cf5 self
\f0\b0 \cf4  = 
\f1\b \cf5 self
\f0\b0 \cf4  \cf8 *\cf4  
\f1\b \cf5 self
\f0\b0 \cf4 \
    \}\
\}\
\
\cf2 //
\f2 \'cf\'c2\'b1\'ea
\f0 \cf4 \
\cf2 //
\f2 \'c0\'a9\'d5\'b9\'bf\'c9\'d2\'d4\'ce\'aa\'d2\'d1\'d3\'d0\'c0\'e0\'d0\'cd\'cc\'ed\'bc\'d3\'d0\'c2\'cf\'c2\'b1\'ea\'a1\'a3\'d5\'e2\'b8\'f6\'c0\'fd\'d7\'d3\'ce\'aa
\f0  Swift 
\f2 \'c4\'da\'bd\'a8\'c0\'e0\'d0\'cd
\f0  Int 
\f2 \'cc\'ed\'bc\'d3\'c1\'cb\'d2\'bb\'b8\'f6\'d5\'fb\'d0\'cd\'cf\'c2\'b1\'ea\'a1\'a3\'b8\'c3\'cf\'c2\'b1\'ea
\f0  [n] 
\f2 \'b7\'b5\'bb\'d8\'ca\'ae\'bd\'f8\'d6\'c6\'ca\'fd\'d7\'d6\'b4\'d3\'d3\'d2\'cf\'f2\'d7\'f3\'ca\'fd\'b5\'c4\'b5\'da
\f0  n 
\f2 \'b8\'f6\'ca\'fd\'d7\'d6\'a3\'ba
\f0 \cf4 \
\cf2 //123456789[0] 
\f2 \'b7\'b5\'bb\'d8
\f0  9\cf4 \
\cf2 //123456789[1] 
\f2 \'b7\'b5\'bb\'d8
\f0  8\cf4 \
\cf2 //\'85\'85
\f2 \'d2\'d4\'b4\'cb\'c0\'e0\'cd\'c6\'a1\'a3
\f0 \cf4 \

\f1\b \cf5 extension
\f0\b0 \cf4  \cf6 Int\cf4  \{\
    
\f1\b \cf5 subscript
\f0\b0 \cf4 (digitIndex: \cf6 Int\cf4 ) -> \cf6 Int\cf4  \{\
        
\f1\b \cf5 var
\f0\b0 \cf4  decimalBase = \cf9 1\cf4 \
        
\f1\b \cf5 for
\f0\b0 \cf4  
\f1\b \cf5 _
\f0\b0 \cf4  
\f1\b \cf5 in
\f0\b0 \cf4  \cf9 0\cf8 ..<\cf4 digitIndex \{\
            decimalBase \cf8 *=\cf4  \cf9 10\cf4 \
        \}\
        
\f1\b \cf5 return
\f0\b0 \cf4  (
\f1\b \cf5 self
\f0\b0 \cf4  \cf8 /\cf4  decimalBase) \cf8 %\cf4  \cf9 10\cf4 \
    \}\
\}\
\
\
\cf2 //
\f2 \'c7\'b6\'cc\'d7\'c0\'e0\'d0\'cd
\f0 \cf4 \
\cf2 //
\f2 \'c0\'a9\'d5\'b9\'bf\'c9\'d2\'d4\'ce\'aa\'d2\'d1\'d3\'d0\'b5\'c4\'c0\'e0\'a1\'a2\'bd\'e1\'b9\'b9\'cc\'e5\'ba\'cd\'c3\'b6\'be\'d9\'cc\'ed\'bc\'d3\'d0\'c2\'b5\'c4\'c7\'b6\'cc\'d7\'c0\'e0\'d0\'cd\'a3\'ba
\f0 \cf4 \

\f1\b \cf5 extension
\f0\b0 \cf4  \cf6 Int\cf4  \{\
    
\f1\b \cf5 enum
\f0\b0 \cf4  \cf10 Kind\cf4  \{\
        
\f1\b \cf5 case
\f0\b0 \cf4  \cf7 Negative\cf4 , \cf7 Zero\cf4 , \cf7 Positive\cf4 \
    \}\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf7 kind\cf4 : \cf11 Kind\cf4  \{\
        
\f1\b \cf5 switch
\f0\b0 \cf4  
\f1\b \cf5 self
\f0\b0 \cf4  \{\
        
\f1\b \cf5 case
\f0\b0 \cf4  \cf9 0\cf4 :\
            
\f1\b \cf5 return
\f0\b0 \cf4  .\cf12 Zero\cf4 \
        
\f1\b \cf5 case
\f0\b0 \cf4  
\f1\b \cf5 let
\f0\b0 \cf4  x 
\f1\b \cf5 where
\f0\b0 \cf4  x \cf8 >\cf4  \cf9 0\cf4 :\
            
\f1\b \cf5 return
\f0\b0 \cf4  .\cf12 Positive\cf4 \
        
\f1\b \cf5 default
\f0\b0 \cf4 :\
            
\f1\b \cf5 return
\f0\b0 \cf4  .\cf12 Negative\cf4 \
        \}\
    \}\
\}\
\
\cf2 //
\f2 \'b8\'c3\'c0\'fd\'d7\'d3\'ce\'aa
\f0  Int 
\f2 \'cc\'ed\'bc\'d3\'c1\'cb\'c7\'b6\'cc\'d7\'c3\'b6\'be\'d9\'a1\'a3\'d5\'e2\'b8\'f6\'c3\'fb\'ce\'aa
\f0  Kind 
\f2 \'b5\'c4\'c3\'b6\'be\'d9\'b1\'ed\'ca\'be\'cc\'d8\'b6\'a8\'d5\'fb\'ca\'fd\'b5\'c4\'c0\'e0\'d0\'cd\'a1\'a3\'be\'df\'cc\'e5\'c0\'b4\'cb\'b5\'a3\'ac\'be\'cd\'ca\'c7\'b1\'ed\'ca\'be\'d5\'fb\'ca\'fd\'ca\'c7\'d5\'fd\'ca\'fd\'a1\'a2\'c1\'e3\'bb\'f2\'d5\'df\'b8\'ba\'ca\'fd\'a1\'a3
\f0 \cf4 \
\cf2 //
\f2 \'d5\'e2\'b8\'f6\'c0\'fd\'d7\'d3\'bb\'b9\'ce\'aa
\f0  Int 
\f2 \'cc\'ed\'bc\'d3\'c1\'cb\'d2\'bb\'b8\'f6\'bc\'c6\'cb\'e3\'d0\'cd\'ca\'b5\'c0\'fd\'ca\'f4\'d0\'d4\'a3\'ac\'bc\'b4
\f0  kind
\f2 \'a3\'ac\'d3\'c3\'c0\'b4\'b8\'f9\'be\'dd\'d5\'fb\'ca\'fd\'b7\'b5\'bb\'d8\'ca\'ca\'b5\'b1\'b5\'c4
\f0  Kind 
\f2 \'c3\'b6\'be\'d9\'b3\'c9\'d4\'b1\'a1\'a3
\f0 \cf4 \
\
\

\f1\b \cf5 class
\f0\b0 \cf4  \cf10 ExtensionsUsage\cf4 : \cf6 NSObject\cf4  \{\
    \
    
\f1\b \cf5 func
\f0\b0 \cf4  \cf7 execute\cf4 () \{\
        \cf2 //
\f2 \'d5\'e2\'d0\'a9\'bc\'c6\'cb\'e3\'d0\'cd\'ca\'f4\'d0\'d4\'b1\'ed\'b4\'ef\'b5\'c4\'ba\'ac\'d2\'e5\'ca\'c7\'b0\'d1\'d2\'bb\'b8\'f6
\f0  Double 
\f2 \'d6\'b5\'bf\'b4\'d7\'f7\'ca\'c7\'c4\'b3\'b5\'a5\'ce\'bb\'cf\'c2\'b5\'c4\'b3\'a4\'b6\'c8\'d6\'b5\'a1\'a3\'bc\'b4\'ca\'b9\'cb\'fc\'c3\'c7\'b1\'bb\'ca\'b5\'cf\'d6\'ce\'aa\'bc\'c6\'cb\'e3\'d0\'cd\'ca\'f4\'d0\'d4\'a3\'ac\'b5\'ab\'d5\'e2\'d0\'a9\'ca\'f4\'d0\'d4\'b5\'c4\'c3\'fb\'d7\'d6\'c8\'d4\'bf\'c9\'bd\'f4\'bd\'d3\'d2\'bb\'b8\'f6\'b8\'a1\'b5\'e3\'d0\'cd\'d7\'d6\'c3\'e6\'d6\'b5\'a3\'ac\'b4\'d3\'b6\'f8\'cd\'a8\'b9\'fd\'b5\'e3\'d3\'ef\'b7\'a8\'c0\'b4\'ca\'b9\'d3\'c3\'a3\'ac\'b2\'a2\'d2\'d4\'b4\'cb\'ca\'b5\'cf\'d6\'be\'e0\'c0\'eb\'d7\'aa\'bb\'bb\'a1\'a3
\f0 \cf4 \
        \
        \cf2 //
\f2 \'d4\'da\'c9\'cf\'ca\'f6\'c0\'fd\'d7\'d3\'d6\'d0\'a3\'ac
\f0 Double 
\f2 \'d6\'b5
\f0  1.0 
\f2 \'d3\'c3\'c0\'b4\'b1\'ed\'ca\'be
\f0 \'931
\f2 \'c3\'d7
\f0 \'94
\f2 \'a1\'a3\'d5\'e2\'be\'cd\'ca\'c7\'ce\'aa\'ca\'b2\'c3\'b4\'bc\'c6\'cb\'e3\'d0\'cd\'ca\'f4\'d0\'d4
\f0  m 
\f2 \'b7\'b5\'bb\'d8
\f0  self
\f2 \'a3\'ac\'bc\'b4\'b1\'ed\'b4\'ef\'ca\'bd
\f0  1.m 
\f2 \'b1\'bb\'c8\'cf\'ce\'aa\'ca\'c7\'bc\'c6\'cb\'e3
\f0  Double 
\f2 \'d6\'b5
\f0  1.0
\f2 \'a1\'a3
\f0 \cf4 \
        \
        \cf2 //
\f2 \'c6\'e4\'cb\'fc\'b5\'a5\'ce\'bb\'d4\'f2\'d0\'e8\'d2\'aa\'d2\'bb\'d0\'a9\'b5\'a5\'ce\'bb\'bb\'bb\'cb\'e3\'a1\'a3\'d2\'bb\'c7\'a7\'c3\'d7\'b5\'c8\'d3\'da
\f0  1,000 
\f2 \'c3\'d7\'a3\'ac\'cb\'f9\'d2\'d4\'bc\'c6\'cb\'e3\'d0\'cd\'ca\'f4\'d0\'d4
\f0  km 
\f2 \'d2\'aa\'b0\'d1\'d6\'b5\'b3\'cb\'d2\'d4
\f0  1_000.00 
\f2 \'c0\'b4\'ca\'b5\'cf\'d6\'c7\'a7\'c3\'d7\'b5\'bd\'c3\'d7\'b5\'c4\'b5\'a5\'ce\'bb\'bb\'bb\'cb\'e3\'a1\'a3\'c0\'e0\'cb\'c6\'b5\'d8\'a3\'ac\'d2\'bb\'c3\'d7\'d3\'d0
\f0  3.28024 
\f2 \'d3\'a2\'b3\'df\'a3\'ac\'cb\'f9\'d2\'d4\'bc\'c6\'cb\'e3\'d0\'cd\'ca\'f4\'d0\'d4
\f0  ft 
\f2 \'d2\'aa\'b0\'d1\'b6\'d4\'d3\'a6\'b5\'c4
\f0  Double 
\f2 \'d6\'b5\'b3\'fd\'d2\'d4
\f0  3.28024 
\f2 \'c0\'b4\'ca\'b5\'cf\'d6\'d3\'a2\'b3\'df\'b5\'bd\'c3\'d7\'b5\'c4\'b5\'a5\'ce\'bb\'bb\'bb\'cb\'e3\'a1\'a3
\f0 \cf4 \
        
\f1\b \cf5 let
\f0\b0 \cf4  oneInch = \cf9 25.4\cf4 .\cf12 mm\cf4 \
        \cf8 print\cf4 (\cf13 "One inch is \cf4 \\(oneInch)\cf13  meters"\cf4 )\
        \cf2 // 
\f2 \'b4\'f2\'d3\'a1
\f0  \'93One inch is 0.0254 meters\'94\cf4 \
        
\f1\b \cf5 let
\f0\b0 \cf4  threeFeet = \cf9 3\cf4 .\cf12 ft\cf4 \
        \cf8 print\cf4 (\cf13 "Three feet is \cf4 \\(threeFeet)\cf13  meters"\cf4 )\
        \cf2 // 
\f2 \'b4\'f2\'d3\'a1
\f0  \'93Three feet is 0.914399970739201 meters\'94\cf4 \
        \
        \cf2 //
\f2 \'d5\'e2\'d0\'a9\'ca\'f4\'d0\'d4\'ca\'c7\'d6\'bb\'b6\'c1\'b5\'c4\'bc\'c6\'cb\'e3\'d0\'cd\'ca\'f4\'d0\'d4\'a3\'ac\'ce\'aa\'c1\'cb\'b8\'fc\'bc\'f2\'bd\'e0\'a3\'ac\'ca\'a1\'c2\'d4\'c1\'cb
\f0  get 
\f2 \'b9\'d8\'bc\'fc\'d7\'d6\'a1\'a3\'cb\'fc\'c3\'c7\'b5\'c4\'b7\'b5\'bb\'d8\'d6\'b5\'ca\'c7
\f0  Double
\f2 \'a3\'ac\'b6\'f8\'c7\'d2\'bf\'c9\'d2\'d4\'d3\'c3\'d3\'da\'cb\'f9\'d3\'d0\'bd\'d3\'ca\'dc
\f0  Double 
\f2 \'d6\'b5\'b5\'c4\'ca\'fd\'d1\'a7\'bc\'c6\'cb\'e3\'d6\'d0\'a3\'ba
\f0 \cf4 \
        
\f1\b \cf5 let
\f0\b0 \cf4  aMarathon = \cf9 42\cf4 .\cf12 km\cf4  \cf8 +\cf4  \cf9 195\cf4 .\cf12 m\cf4 \
        \cf8 print\cf4 (\cf13 "A marathon is \cf4 \\(aMarathon)\cf13  meters long"\cf4 )\
        \cf2 // 
\f2 \'b4\'f2\'d3\'a1
\f0  \'93A marathon is 42195.0 meters long\'94\cf4 \
        \cf2 //
\f2 \'d7\'a2\'d2\'e2
\f0 \cf4 \
        \cf2 //
\f2 \'c0\'a9\'d5\'b9\'bf\'c9\'d2\'d4\'cc\'ed\'bc\'d3\'d0\'c2\'b5\'c4\'bc\'c6\'cb\'e3\'d0\'cd\'ca\'f4\'d0\'d4\'a3\'ac\'b5\'ab\'ca\'c7\'b2\'bb\'bf\'c9\'d2\'d4\'cc\'ed\'bc\'d3\'b4\'e6\'b4\'a2\'d0\'cd\'ca\'f4\'d0\'d4\'a3\'ac\'d2\'b2\'b2\'bb\'bf\'c9\'d2\'d4\'ce\'aa\'d2\'d1\'d3\'d0\'ca\'f4\'d0\'d4\'cc\'ed\'bc\'d3\'ca\'f4\'d0\'d4\'b9\'db\'b2\'ec\'c6\'f7\'a1\'a3
\f0 \cf4 \
        \
        \cf2 //
\f2 \'d2\'f2\'ce\'aa\'bd\'e1\'b9\'b9\'cc\'e5
\f0  Rect 
\f2 \'ce\'b4\'cc\'e1\'b9\'a9\'b6\'a8\'d6\'c6\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'a3\'ac\'d2\'f2\'b4\'cb\'cb\'fc\'bb\'e1\'bb\'f1\'b5\'c3\'d2\'bb\'b8\'f6\'d6\'f0\'d2\'bb\'b3\'c9\'d4\'b1\'b9\'b9\'d4\'ec\'c6\'f7\'a1\'a3\'d3\'d6\'d2\'f2\'ce\'aa\'cb\'fc\'ce\'aa\'cb\'f9\'d3\'d0\'b4\'e6\'b4\'a2\'d0\'cd\'ca\'f4\'d0\'d4\'cc\'e1\'b9\'a9\'c1\'cb\'c4\'ac\'c8\'cf\'d6\'b5\'a3\'ac\'cb\'fc\'d3\'d6\'bb\'e1\'bb\'f1\'b5\'c3\'d2\'bb\'b8\'f6\'c4\'ac\'c8\'cf\'b9\'b9\'d4\'ec\'c6\'f7\'a1\'a3\'cf\'ea\'c7\'e9\'c7\'eb\'b2\'ce\'d4\'c4\'c4\'ac\'c8\'cf\'b9\'b9\'d4\'ec\'c6\'f7\'a1\'a3\'d5\'e2\'d0\'a9\'b9\'b9\'d4\'ec\'c6\'f7\'bf\'c9\'d2\'d4\'d3\'c3\'d3\'da\'b9\'b9\'d4\'ec\'d0\'c2\'b5\'c4
\f0  Rect 
\f2 \'ca\'b5\'c0\'fd\'a3\'ba
\f0 \cf4 \
        
\f1\b \cf5 let
\f0\b0 \cf4  defaultRect = \cf11 Rect\cf4 ()\
        
\f1\b \cf5 let
\f0\b0 \cf4  memberwiseRect = \cf11 Rect\cf4 (origin: \cf11 Point\cf4 (x: \cf9 2.0\cf4 , y: \cf9 2.0\cf4 ), size: \cf11 Size\cf4 (width: \cf9 5.0\cf4 , height: \cf9 5.0\cf4 ))\
        \cf8 print\cf4 (\cf13 "defaultRect: \cf4 \\(defaultRect)\cf13 "\cf4 )\
        \cf8 print\cf4 (\cf13 "memberwiseRect: \cf4 \\(memberwiseRect)\cf13 "\cf4 )\
\
        \cf2 //
\f2 \'d5\'e2\'b8\'f6\'d0\'c2\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'ca\'d7\'cf\'c8\'b8\'f9\'be\'dd\'cc\'e1\'b9\'a9\'b5\'c4
\f0  center 
\f2 \'ba\'cd
\f0  size 
\f2 \'b5\'c4\'d6\'b5\'bc\'c6\'cb\'e3\'d2\'bb\'b8\'f6\'ba\'cf\'ca\'ca\'b5\'c4\'d4\'ad\'b5\'e3\'a1\'a3\'c8\'bb\'ba\'f3\'b5\'f7\'d3\'c3\'b8\'c3\'bd\'e1\'b9\'b9\'cc\'e5\'b5\'c4\'d6\'f0\'d2\'bb\'b3\'c9\'d4\'b1\'b9\'b9\'d4\'ec\'c6\'f7
\f0  init(origin:size:)
\f2 \'a3\'ac\'b8\'c3\'b9\'b9\'d4\'ec\'c6\'f7\'bd\'ab\'d0\'c2\'b5\'c4\'d4\'ad\'b5\'e3\'ba\'cd\'b4\'f3\'d0\'a1\'b5\'c4\'d6\'b5\'b1\'a3\'b4\'e6\'b5\'bd\'c1\'cb\'cf\'e0\'d3\'a6\'b5\'c4\'ca\'f4\'d0\'d4\'d6\'d0\'a3\'ba
\f0 \cf4 \
        
\f1\b \cf5 let
\f0\b0 \cf4  centerRect = \cf11 Rect\cf4 (center: \cf11 Point\cf4 (x: \cf9 4.0\cf4 , y: \cf9 4.0\cf4 ),\
                              size: \cf11 Size\cf4 (width: \cf9 3.0\cf4 , height: \cf9 3.0\cf4 ))\
        \cf8 print\cf4 (\cf13 "centerRect: \cf4 \\(centerRect)\cf13 "\cf4 )\
        \cf2 // centerRect 
\f2 \'b5\'c4\'d4\'ad\'b5\'e3\'ca\'c7
\f0  (2.5, 2.5)
\f2 \'a3\'ac\'b4\'f3\'d0\'a1\'ca\'c7
\f0  (3.0, 3.0)\cf4 \
\
        \cf2 //
\f2 \'b6\'a8\'d2\'e5\'b8\'c3\'c0\'a9\'d5\'b9\'d6\'ae\'ba\'f3\'a3\'ac\'c4\'e3\'be\'cd\'bf\'c9\'d2\'d4\'b6\'d4\'c8\'ce\'d2\'e2\'d5\'fb\'ca\'fd\'b5\'f7\'d3\'c3
\f0  repetitions(task:) 
\f2 \'b7\'bd\'b7\'a8\'a3\'ac\'bd\'ab\'b1\'d5\'b0\'fc\'d6\'d0\'b5\'c4\'c8\'ce\'ce\'f1\'d6\'b4\'d0\'d0\'d5\'fb\'ca\'fd\'b6\'d4\'d3\'a6\'b5\'c4\'b4\'ce\'ca\'fd\'a3\'ba
\f0 \cf4 \
        \cf9 3\cf4 .\cf12 repetitions\cf4 (task: \{\
            \cf8 print\cf4 (\cf13 "Hello!"\cf4 )\
        \})\
        \cf2 // Hello!\cf4 \
        \cf2 // Hello!\cf4 \
        \cf2 // Hello!\cf4 \
       \
        \cf2 //
\f2 \'bf\'c9\'d2\'d4\'ca\'b9\'d3\'c3\'ce\'b2\'cb\'e6\'b1\'d5\'b0\'fc\'c8\'c3\'b5\'f7\'d3\'c3\'b8\'fc\'bc\'d3\'bc\'f2\'bd\'e0\'a3\'ba
\f0 \cf4 \
        \cf9 3\cf4 .\cf12 repetitions\cf4  \{\
            \cf8 print\cf4 (\cf13 "Goodbye!"\cf4 )\
        \}\
        \cf2 // Goodbye!\cf4 \
        \cf2 // Goodbye!\cf4 \
        \cf2 // Goodbye!\cf4 \
\
        
\f1\b \cf5 var
\f0\b0 \cf4  someInt = \cf9 3\cf4 \
        \cf8 print\cf4 (\cf13 "Now someInt is \cf4 \\(someInt.\cf12 square\cf4 ())\cf13 "\cf4 )\
        \
        \cf2 //746381295[0]\cf4 \
        \cf2 // 
\f2 \'b7\'b5\'bb\'d8
\f0  5\cf4 \
        \cf2 //746381295[1]\cf4 \
        \cf2 // 
\f2 \'b7\'b5\'bb\'d8
\f0  9\cf4 \
        \cf2 //746381295[2]\cf4 \
        \cf2 // 
\f2 \'b7\'b5\'bb\'d8
\f0  2\cf4 \
        \cf2 //746381295[8]\cf4 \
        \cf2 // 
\f2 \'b7\'b5\'bb\'d8
\f0  7\cf4 \
        \cf8 print\cf4 (\cf13 "index 0 of 746381295 is \cf4 \\(\cf9 746381295\cf4 [\cf9 0\cf4 ])\cf13 "\cf4 )\
        \cf8 print\cf4 (\cf13 "index 1 of 746381295 is \cf4 \\(\cf9 746381295\cf4 [\cf9 1\cf4 ])\cf13 "\cf4 )\
        \cf8 print\cf4 (\cf13 "index 2 of 746381295 is \cf4 \\(\cf9 746381295\cf4 [\cf9 2\cf4 ])\cf13 "\cf4 )\
        \cf8 print\cf4 (\cf13 "index 8 of 746381295 is \cf4 \\(\cf9 746381295\cf4 [\cf9 8\cf4 ])\cf13 "\cf4 )\
        \cf2 //
\f2 \'c8\'e7\'b9\'fb\'b8\'c3
\f0  Int 
\f2 \'d6\'b5\'c3\'bb\'d3\'d0\'d7\'e3\'b9\'bb\'b5\'c4\'ce\'bb\'ca\'fd\'a3\'ac\'bc\'b4\'cf\'c2\'b1\'ea\'d4\'bd\'bd\'e7\'a3\'ac\'c4\'c7\'c3\'b4\'c9\'cf\'ca\'f6\'cf\'c2\'b1\'ea\'ca\'b5\'cf\'d6\'bb\'e1\'b7\'b5\'bb\'d8
\f0  0
\f2 \'a3\'ac\'d3\'cc\'c8\'e7\'d4\'da\'ca\'fd\'d7\'d6\'d7\'f3\'b1\'df\'d7\'d4\'b6\'af\'b2\'b9
\f0  0
\f2 \'a3\'ba
\f0 \cf4 \
        \cf8 print\cf4 (\cf13 "index 9 of 746381295 is \cf4 \\(\cf9 746381295\cf4 [\cf9 9\cf4 ])\cf13 "\cf4 )\
\
        \cf2 //
\f2 \'cf\'d6\'d4\'da\'a3\'ac\'d5\'e2\'b8\'f6\'c7\'b6\'cc\'d7\'c3\'b6\'be\'d9\'bf\'c9\'d2\'d4\'ba\'cd\'c8\'ce\'d2\'e2
\f0  Int 
\f2 \'d6\'b5\'d2\'bb\'c6\'f0\'ca\'b9\'d3\'c3\'c1\'cb\'a3\'ba
\f0 \cf4 \
        
\f1\b \cf5 func
\f0\b0 \cf4  \cf7 printIntegerKinds\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  numbers: [\cf6 Int\cf4 ]) \{\
            
\f1\b \cf5 for
\f0\b0 \cf4  number 
\f1\b \cf5 in
\f0\b0 \cf4  numbers \{\
                
\f1\b \cf5 switch
\f0\b0 \cf4  number.\cf12 kind\cf4  \{\
                
\f1\b \cf5 case
\f0\b0 \cf4  .\cf12 Zero\cf4 :\
                    \cf8 print\cf4 (\cf13 "0"\cf4 , terminator: \cf13 " "\cf4 )\
                
\f1\b \cf5 case
\f0\b0 \cf4  .\cf12 Positive\cf4 :\
                    \cf8 print\cf4 (\cf13 "+"\cf4 , terminator: \cf13 " "\cf4 )\
                
\f1\b \cf5 case
\f0\b0 \cf4  .\cf12 Negative\cf4 :\
                    \cf8 print\cf4 (\cf13 "-"\cf4 , terminator: \cf13 " "\cf4 )\
                \}\
            \}\
            \cf8 print\cf4 (\cf13 ""\cf4 )\
        \}\
        \
        \cf12 printIntegerKinds\cf4 ([\cf9 3\cf4 , \cf9 19\cf4 , \cf9 -27\cf4 , \cf9 0\cf4 , \cf9 -6\cf4 , \cf9 0\cf4 , \cf9 7\cf4 ])\
        \
        \cf2 //
\f2 \'ba\'af\'ca\'fd
\f0  printIntegerKinds(_:) 
\f2 \'bd\'d3\'ca\'dc\'d2\'bb\'b8\'f6
\f0  Int 
\f2 \'ca\'fd\'d7\'e9\'a3\'ac\'c8\'bb\'ba\'f3\'b6\'d4\'b8\'c3\'ca\'fd\'d7\'e9\'bd\'f8\'d0\'d0\'b5\'fc\'b4\'fa\'a1\'a3\'d4\'da\'c3\'bf\'b4\'ce\'b5\'fc\'b4\'fa\'b9\'fd\'b3\'cc\'d6\'d0\'a3\'ac\'b6\'d4\'b5\'b1\'c7\'b0\'d5\'fb\'ca\'fd\'b5\'c4\'bc\'c6\'cb\'e3\'d0\'cd\'ca\'f4\'d0\'d4
\f0  kind 
\f2 \'b5\'c4\'d6\'b5\'bd\'f8\'d0\'d0\'c6\'c0\'b9\'c0\'a3\'ac\'b2\'a2\'b4\'f2\'d3\'a1\'b3\'f6\'ca\'ca\'b5\'b1\'b5\'c4\'c3\'e8\'ca\'f6\'a1\'a3
\f0 \cf4 \
        \cf2 //
\f2 \'d7\'a2\'d2\'e2
\f0 \cf4 \
        \cf2 //
\f2 \'d3\'c9\'d3\'da\'d2\'d1\'d6\'aa
\f0  number.kind 
\f2 \'ca\'c7
\f0  Int.Kind 
\f2 \'c0\'e0\'d0\'cd\'a3\'ac\'d2\'f2\'b4\'cb\'d4\'da
\f0  switch 
\f2 \'d3\'ef\'be\'e4\'d6\'d0\'a3\'ac
\f0 Int.Kind 
\f2 \'d6\'d0\'b5\'c4\'cb\'f9\'d3\'d0\'b3\'c9\'d4\'b1\'d6\'b5\'b6\'bc\'bf\'c9\'d2\'d4\'ca\'b9\'d3\'c3\'bc\'f2\'d0\'b4\'d0\'ce\'ca\'bd\'a3\'ac\'c0\'fd\'c8\'e7\'ca\'b9\'d3\'c3
\f0  . Negative 
\f2 \'b6\'f8\'b2\'bb\'ca\'c7
\f0  Int.Kind.Negative
\f2 \'a1\'a3
\f0 \cf4 \
    \}\
    \
\}\
}