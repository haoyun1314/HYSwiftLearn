{\rtf1\ansi\ansicpg936\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;\f2\fnil\fcharset134 PingFangSC-Regular;
}
{\colortbl;\red255\green255\blue255;\red38\green117\blue7;\red255\green255\blue255;\red0\green0\blue0;
\red155\green35\blue147;\red15\green104\blue160;\red57\green0\blue160;\red11\green79\blue121;\red28\green0\blue207;
\red196\green26\blue22;}
{\*\expandedcolortbl;;\csgenericrgb\c14771\c45953\c2591;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0\c85000;
\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c5696\c40622\c62817;\csgenericrgb\c22454\c0\c62803;\csgenericrgb\c4477\c31152\c47474;\csgenericrgb\c11000\c0\c81000;
\csgenericrgb\c77000\c10200\c8600;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 //\cf4 \
\cf2 //  GenericityUsage.swift\cf4 \
\cf2 //  Genericity\cf4 \
\cf2 //\cf4 \
\cf2 //  Created by dyf on 2017/10/24.\cf4 \
\cf2 //  Copyright \'a9 2017 dyf. All rights reserved.\cf4 \
\cf2 //\cf4 \
\

\f1\b \cf5 import
\f0\b0 \cf4  UIKit\
\
\
\cf2 //
\f2 \'b1\'be\'d2\'b3\'b0\'fc\'ba\'ac\'c4\'da\'c8\'dd\'a3\'ba
\f0 \cf4 \
\cf2 //
\f2 \'b7\'ba\'d0\'cd\'cb\'f9\'bd\'e2\'be\'f6\'b5\'c4\'ce\'ca\'cc\'e2
\f0 \cf4 \
\cf2 //
\f2 \'b7\'ba\'d0\'cd\'ba\'af\'ca\'fd
\f0 \cf4 \
\cf2 //
\f2 \'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd
\f0 \cf4 \
\cf2 //
\f2 \'c3\'fc\'c3\'fb\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd
\f0 \cf4 \
\cf2 //
\f2 \'b7\'ba\'d0\'cd\'c0\'e0\'d0\'cd
\f0 \cf4 \
\cf2 //
\f2 \'c0\'a9\'d5\'b9\'d2\'bb\'b8\'f6\'b7\'ba\'d0\'cd\'c0\'e0\'d0\'cd
\f0 \cf4 \
\cf2 //
\f2 \'c0\'e0\'d0\'cd\'d4\'bc\'ca\'f8
\f0 \cf4 \
\cf2 //
\f2 \'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd
\f0 \cf4 \
\cf2 //
\f2 \'b7\'ba\'d0\'cd
\f0  Where 
\f2 \'d3\'ef\'be\'e4
\f0 \cf4 \
\cf2 //
\f2 \'be\'df\'d3\'d0\'b7\'ba\'d0\'cd
\f0  where 
\f2 \'d7\'d3\'be\'e4\'b5\'c4\'c0\'a9\'d5\'b9
\f0 \cf4 \
\cf2 //
\f2 \'be\'df\'d3\'d0\'b7\'ba\'d0\'cd
\f0  Where 
\f2 \'d7\'d3\'be\'e4\'b5\'c4\'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd
\f0 \cf4 \
\cf2 //
\f2 \'b7\'ba\'d0\'cd\'cf\'c2\'b1\'ea
\f0 \cf4 \
\cf2 //
\f2 \'b7\'ba\'d0\'cd\'b4\'fa\'c2\'eb\'c8\'c3\'c4\'e3\'c4\'dc\'b9\'bb\'b8\'f9\'be\'dd\'d7\'d4\'b6\'a8\'d2\'e5\'b5\'c4\'d0\'e8\'c7\'f3\'a3\'ac\'b1\'e0\'d0\'b4\'b3\'f6\'ca\'ca\'d3\'c3\'d3\'da\'c8\'ce\'d2\'e2\'c0\'e0\'d0\'cd\'a1\'a2\'c1\'e9\'bb\'ee\'bf\'c9\'d6\'d8\'d3\'c3\'b5\'c4\'ba\'af\'ca\'fd\'bc\'b0\'c0\'e0\'d0\'cd\'a1\'a3\'cb\'fc\'c4\'dc\'c8\'c3\'c4\'e3\'b1\'dc\'c3\'e2\'b4\'fa\'c2\'eb\'b5\'c4\'d6\'d8\'b8\'b4\'a3\'ac\'d3\'c3\'d2\'bb\'d6\'d6\'c7\'e5\'ce\'fa\'ba\'cd\'b3\'e9\'cf\'f3\'b5\'c4\'b7\'bd\'ca\'bd\'c0\'b4\'b1\'ed\'b4\'ef\'b4\'fa\'c2\'eb\'b5\'c4\'d2\'e2\'cd\'bc\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'b7\'ba\'d0\'cd\'ca\'c7
\f0  Swift 
\f2 \'d7\'ee\'c7\'bf\'b4\'f3\'b5\'c4\'cc\'d8\'d0\'d4\'d6\'ae\'d2\'bb\'a3\'ac\'d0\'ed\'b6\'e0
\f0  Swift 
\f2 \'b1\'ea\'d7\'bc\'bf\'e2\'ca\'c7\'cd\'a8\'b9\'fd\'b7\'ba\'d0\'cd\'b4\'fa\'c2\'eb\'b9\'b9\'bd\'a8\'b5\'c4\'a1\'a3\'ca\'c2\'ca\'b5\'c9\'cf\'a3\'ac\'b7\'ba\'d0\'cd\'b5\'c4\'ca\'b9\'d3\'c3\'b9\'e1\'b4\'a9\'c1\'cb\'d5\'fb\'b1\'be\'d3\'ef\'d1\'d4\'ca\'d6\'b2\'e1\'a3\'ac\'d6\'bb\'ca\'c7\'c4\'e3\'bf\'c9\'c4\'dc\'c3\'bb\'d3\'d0\'b7\'a2\'cf\'d6\'b6\'f8\'d2\'d1\'a1\'a3\'c0\'fd\'c8\'e7\'a3\'ac
\f0 Swift 
\f2 \'b5\'c4
\f0  Array 
\f2 \'ba\'cd
\f0  Dictionary 
\f2 \'b6\'bc\'ca\'c7\'b7\'ba\'d0\'cd\'bc\'af\'ba\'cf\'a1\'a3\'c4\'e3\'bf\'c9\'d2\'d4\'b4\'b4\'bd\'a8\'d2\'bb\'b8\'f6
\f0  Int 
\f2 \'ca\'fd\'d7\'e9\'a3\'ac\'d2\'b2\'bf\'c9\'b4\'b4\'bd\'a8\'d2\'bb\'b8\'f6
\f0  String 
\f2 \'ca\'fd\'d7\'e9\'a3\'ac\'c9\'f5\'d6\'c1\'bf\'c9\'d2\'d4\'ca\'c7\'c8\'ce\'d2\'e2\'c6\'e4\'cb\'fb
\f0  Swift 
\f2 \'c0\'e0\'d0\'cd\'b5\'c4\'ca\'fd\'d7\'e9\'a1\'a3\'cd\'ac\'d1\'f9\'b5\'c4\'a3\'ac\'c4\'e3\'d2\'b2\'bf\'c9\'d2\'d4\'b4\'b4\'bd\'a8\'b4\'e6\'b4\'a2\'c8\'ce\'d2\'e2\'d6\'b8\'b6\'a8\'c0\'e0\'d0\'cd\'b5\'c4\'d7\'d6\'b5\'e4\'a1\'a3
\f0 \cf4 \
\
\
\cf2 //
\f2 \'b7\'ba\'d0\'cd\'cb\'f9\'bd\'e2\'be\'f6\'b5\'c4\'ce\'ca\'cc\'e2
\f0 \cf4 \
\cf2 //
\f2 \'cf\'c2\'c3\'e6\'ca\'c7\'d2\'bb\'b8\'f6\'b1\'ea\'d7\'bc\'b5\'c4\'b7\'c7\'b7\'ba\'d0\'cd\'ba\'af\'ca\'fd
\f0  swapTwoInts(_:_:)
\f2 \'a3\'ac\'d3\'c3\'c0\'b4\'bd\'bb\'bb\'bb\'c1\'bd\'b8\'f6
\f0  Int 
\f2 \'d6\'b5\'a3\'ba
\f0 \cf4 \

\f1\b \cf5 func
\f0\b0 \cf4  \cf6 swapTwoInts\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  a: 
\f1\b \cf5 inout
\f0\b0 \cf4  \cf7 Int\cf4 , 
\f1\b \cf5 _
\f0\b0 \cf4  b: 
\f1\b \cf5 inout
\f0\b0 \cf4  \cf7 Int\cf4 ) \{\
    
\f1\b \cf5 let
\f0\b0 \cf4  temporaryA = a\
    a = b\
    b = temporaryA\
\}\
\cf2 //
\f2 \'d5\'e2\'b8\'f6\'ba\'af\'ca\'fd\'ca\'b9\'d3\'c3\'ca\'e4\'c8\'eb\'ca\'e4\'b3\'f6\'b2\'ce\'ca\'fd\'a3\'a8
\f0 inout
\f2 \'a3\'a9\'c0\'b4\'bd\'bb\'bb\'bb
\f0  a 
\f2 \'ba\'cd
\f0  b 
\f2 \'b5\'c4\'d6\'b5\'a3\'ac\'c7\'eb\'b2\'ce\'bf\'bc\'ca\'e4\'c8\'eb\'ca\'e4\'b3\'f6\'b2\'ce\'ca\'fd\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'b3\'cf\'c8\'bb\'a3\'ac
\f0 swapTwoInts(_:_:) 
\f2 \'ba\'af\'ca\'fd\'cd\'a6\'d3\'d0\'d3\'c3\'a3\'ac\'b5\'ab\'ca\'c7\'cb\'fc\'d6\'bb\'c4\'dc\'bd\'bb\'bb\'bb
\f0  Int 
\f2 \'d6\'b5\'a3\'ac\'c8\'e7\'b9\'fb\'c4\'e3\'cf\'eb\'d2\'aa\'bd\'bb\'bb\'bb\'c1\'bd\'b8\'f6
\f0  String 
\f2 \'d6\'b5\'bb\'f2\'d5\'df
\f0  Double
\f2 \'d6\'b5\'a3\'ac\'be\'cd\'b2\'bb\'b5\'c3\'b2\'bb\'d0\'b4\'b8\'fc\'b6\'e0\'b5\'c4\'ba\'af\'ca\'fd\'a3\'ac\'c0\'fd\'c8\'e7
\f0  swapTwoStrings(_:_:) 
\f2 \'ba\'cd
\f0  swapTwoDoubles(_:_:)
\f2 \'a3\'ac\'c8\'e7\'cf\'c2\'cb\'f9\'ca\'be\'a3\'ba
\f0 \cf4 \

\f1\b \cf5 func
\f0\b0 \cf4  \cf6 swapTwoStrings\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  a: 
\f1\b \cf5 inout
\f0\b0 \cf4  \cf7 String\cf4 , 
\f1\b \cf5 _
\f0\b0 \cf4  b: 
\f1\b \cf5 inout
\f0\b0 \cf4  \cf7 String\cf4 ) \{\
    
\f1\b \cf5 let
\f0\b0 \cf4  temporaryA = a\
    a = b\
    b = temporaryA\
\}\
\

\f1\b \cf5 func
\f0\b0 \cf4  \cf6 swapTwoDoubles\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  a: 
\f1\b \cf5 inout
\f0\b0 \cf4  \cf7 Double\cf4 , 
\f1\b \cf5 _
\f0\b0 \cf4  b: 
\f1\b \cf5 inout
\f0\b0 \cf4  \cf7 Double\cf4 ) \{\
    
\f1\b \cf5 let
\f0\b0 \cf4  temporaryA = a\
    a = b\
    b = temporaryA\
\}\
\cf2 //
\f2 \'c4\'e3\'bf\'c9\'c4\'dc\'d7\'a2\'d2\'e2\'b5\'bd
\f0  swapTwoInts(_:_:)
\f2 \'a1\'a2
\f0 swapTwoStrings(_:_:) 
\f2 \'ba\'cd
\f0  swapTwoDoubles(_:_:) 
\f2 \'b5\'c4\'ba\'af\'ca\'fd\'b9\'a6\'c4\'dc\'b6\'bc\'ca\'c7\'cf\'e0\'cd\'ac\'b5\'c4\'a3\'ac\'ce\'a8\'d2\'bb\'b2\'bb\'cd\'ac\'d6\'ae\'b4\'a6\'be\'cd\'d4\'da\'d3\'da\'b4\'ab\'c8\'eb\'b5\'c4\'b1\'e4\'c1\'bf\'c0\'e0\'d0\'cd\'b2\'bb\'cd\'ac\'a3\'ac\'b7\'d6\'b1\'f0\'ca\'c7
\f0  Int
\f2 \'a1\'a2
\f0 String 
\f2 \'ba\'cd
\f0  Double
\f2 \'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'d4\'da\'ca\'b5\'bc\'ca\'d3\'a6\'d3\'c3\'d6\'d0\'a3\'ac\'cd\'a8\'b3\'a3\'d0\'e8\'d2\'aa\'d2\'bb\'b8\'f6\'b8\'fc\'ca\'b5\'d3\'c3\'b8\'fc\'c1\'e9\'bb\'ee\'b5\'c4\'ba\'af\'ca\'fd\'c0\'b4\'bd\'bb\'bb\'bb\'c1\'bd\'b8\'f6\'c8\'ce\'d2\'e2\'c0\'e0\'d0\'cd\'b5\'c4\'d6\'b5\'a3\'ac\'d0\'d2\'d4\'cb\'b5\'c4\'ca\'c7\'a3\'ac\'b7\'ba\'d0\'cd\'b4\'fa\'c2\'eb\'b0\'ef\'c4\'e3\'bd\'e2\'be\'f6\'c1\'cb\'d5\'e2\'d6\'d6\'ce\'ca\'cc\'e2\'a1\'a3\'a3\'a8\'d5\'e2\'d0\'a9\'ba\'af\'ca\'fd\'b5\'c4\'b7\'ba\'d0\'cd\'b0\'e6\'b1\'be\'d2\'d1\'be\'ad\'d4\'da\'cf\'c2\'c3\'e6\'b6\'a8\'d2\'e5\'ba\'c3\'c1\'cb\'a1\'a3\'a3\'a9
\f0 \cf4 \
\
\cf2 //
\f2 \'d7\'a2\'d2\'e2
\f0 \cf4 \
\cf2 //
\f2 \'d4\'da\'c9\'cf\'c3\'e6\'c8\'fd\'b8\'f6\'ba\'af\'ca\'fd\'d6\'d0\'a3\'ac
\f0 a 
\f2 \'ba\'cd
\f0  b 
\f2 \'c0\'e0\'d0\'cd\'b1\'d8\'d0\'eb\'cf\'e0\'cd\'ac\'a1\'a3\'c8\'e7\'b9\'fb
\f0  a 
\f2 \'ba\'cd
\f0  b 
\f2 \'c0\'e0\'d0\'cd\'b2\'bb\'cd\'ac\'a3\'ac\'c4\'c7\'cb\'fc\'c3\'c7\'c1\'a9\'be\'cd\'b2\'bb\'c4\'dc\'bb\'a5\'bb\'bb\'d6\'b5\'a1\'a3
\f0 Swift 
\f2 \'ca\'c7\'c0\'e0\'d0\'cd\'b0\'b2\'c8\'ab\'b5\'c4\'d3\'ef\'d1\'d4\'a3\'ac\'cb\'f9\'d2\'d4\'cb\'fc\'b2\'bb\'d4\'ca\'d0\'ed\'d2\'bb\'b8\'f6
\f0  String 
\f2 \'c0\'e0\'d0\'cd\'b5\'c4\'b1\'e4\'c1\'bf\'ba\'cd\'d2\'bb\'b8\'f6
\f0  Double 
\f2 \'c0\'e0\'d0\'cd\'b5\'c4\'b1\'e4\'c1\'bf\'bb\'a5\'bb\'bb\'d6\'b5\'a1\'a3\'ca\'d4\'cd\'bc\'d5\'e2\'d1\'f9\'d7\'f6\'bd\'ab\'b5\'bc\'d6\'c2\'b1\'e0\'d2\'eb\'b4\'ed\'ce\'f3\'a1\'a3
\f0 \cf4 \
\
\
\cf2 //
\f2 \'b7\'ba\'d0\'cd\'ba\'af\'ca\'fd
\f0 \cf4 \
\cf2 //
\f2 \'b7\'ba\'d0\'cd\'ba\'af\'ca\'fd\'bf\'c9\'d2\'d4\'ca\'ca\'d3\'c3\'d3\'da\'c8\'ce\'ba\'ce\'c0\'e0\'d0\'cd\'a3\'ac\'cf\'c2\'c3\'e6\'b5\'c4
\f0  swapTwoValues(_:_:) 
\f2 \'ba\'af\'ca\'fd\'ca\'c7\'c9\'cf\'c3\'e6\'c8\'fd\'b8\'f6\'ba\'af\'ca\'fd\'b5\'c4\'b7\'ba\'d0\'cd\'b0\'e6\'b1\'be\'a3\'ba
\f0 \cf4 \

\f1\b \cf5 func
\f0\b0 \cf4  \cf6 swapTwoValues\cf4 <\cf8 T\cf4 >(
\f1\b \cf5 _
\f0\b0 \cf4  a: 
\f1\b \cf5 inout
\f0\b0 \cf4  \cf7 T\cf4 , 
\f1\b \cf5 _
\f0\b0 \cf4  b: 
\f1\b \cf5 inout
\f0\b0 \cf4  \cf7 T\cf4 ) \{\
    
\f1\b \cf5 let
\f0\b0 \cf4  temporaryA = a\
    a = b\
    b = temporaryA\
\}\
\
\cf2 //swapTwoValues(_:_:) 
\f2 \'b5\'c4\'ba\'af\'ca\'fd\'d6\'f7\'cc\'e5\'ba\'cd
\f0  swapTwoInts(_:_:) 
\f2 \'ba\'af\'ca\'fd\'ca\'c7\'d2\'bb\'d1\'f9\'b5\'c4\'a3\'ac\'cb\'fc\'c3\'c7\'d6\'bb\'d4\'da\'b5\'da\'d2\'bb\'d0\'d0\'d3\'d0\'b5\'e3\'b2\'bb\'cd\'ac\'a3\'ac\'c8\'e7\'cf\'c2\'cb\'f9\'ca\'be\'a3\'ba
\f0 \cf4 \
\cf2 //func swapTwoInts(_ a: inout Int, _ b: inout Int)\cf4 \
\cf2 //func swapTwoValues<T>(_ a: inout T, _ b: inout T)\cf4 \
\
\cf2 //
\f2 \'d5\'e2\'b8\'f6\'ba\'af\'ca\'fd\'b5\'c4\'b7\'ba\'d0\'cd\'b0\'e6\'b1\'be\'ca\'b9\'d3\'c3\'c1\'cb\'d5\'bc\'ce\'bb\'c0\'e0\'d0\'cd\'c3\'fb\'a3\'a8\'d4\'da\'d5\'e2\'c0\'ef\'d3\'c3\'d7\'d6\'c4\'b8
\f0  T 
\f2 \'c0\'b4\'b1\'ed\'ca\'be\'a3\'a9\'c0\'b4\'b4\'fa\'cc\'e6\'ca\'b5\'bc\'ca\'c0\'e0\'d0\'cd\'c3\'fb\'a3\'a8\'c0\'fd\'c8\'e7
\f0  Int
\f2 \'a1\'a2
\f0 String 
\f2 \'bb\'f2
\f0  Double
\f2 \'a3\'a9\'a1\'a3\'d5\'bc\'ce\'bb\'c0\'e0\'d0\'cd\'c3\'fb\'c3\'bb\'d3\'d0\'d6\'b8\'c3\'f7
\f0  T 
\f2 \'b1\'d8\'d0\'eb\'ca\'c7\'ca\'b2\'c3\'b4\'c0\'e0\'d0\'cd\'a3\'ac\'b5\'ab\'ca\'c7\'cb\'fc\'d6\'b8\'c3\'f7\'c1\'cb
\f0  a 
\f2 \'ba\'cd
\f0  b 
\f2 \'b1\'d8\'d0\'eb\'ca\'c7\'cd\'ac\'d2\'bb\'c0\'e0\'d0\'cd
\f0  T
\f2 \'a3\'ac\'ce\'de\'c2\'db
\f0  T 
\f2 \'b4\'fa\'b1\'ed\'ca\'b2\'c3\'b4\'c0\'e0\'d0\'cd\'a1\'a3\'d6\'bb\'d3\'d0
\f0  swapTwoValues(_:_:) 
\f2 \'ba\'af\'ca\'fd\'d4\'da\'b5\'f7\'d3\'c3\'ca\'b1\'a3\'ac\'b2\'c5\'bb\'e1\'b8\'f9\'be\'dd\'cb\'f9\'b4\'ab\'c8\'eb\'b5\'c4\'ca\'b5\'bc\'ca\'c0\'e0\'d0\'cd\'be\'f6\'b6\'a8
\f0  T 
\f2 \'cb\'f9\'b4\'fa\'b1\'ed\'b5\'c4\'c0\'e0\'d0\'cd\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'b7\'ba\'d0\'cd\'ba\'af\'ca\'fd\'ba\'cd\'b7\'c7\'b7\'ba\'d0\'cd\'ba\'af\'ca\'fd\'b5\'c4\'c1\'ed\'cd\'e2\'d2\'bb\'b8\'f6\'b2\'bb\'cd\'ac\'d6\'ae\'b4\'a6\'a3\'ac\'d4\'da\'d3\'da\'d5\'e2\'b8\'f6\'b7\'ba\'d0\'cd\'ba\'af\'ca\'fd\'c3\'fb\'a3\'a8
\f0 swapTwoValues(_:_:)
\f2 \'a3\'a9\'ba\'f3\'c3\'e6\'b8\'fa\'d7\'c5\'d5\'bc\'ce\'bb\'c0\'e0\'d0\'cd\'c3\'fb\'a3\'a8
\f0 T
\f2 \'a3\'a9\'a3\'ac\'b2\'a2\'d3\'c3\'bc\'e2\'c0\'a8\'ba\'c5\'c0\'a8\'c6\'f0\'c0\'b4\'a3\'a8
\f0 <T>
\f2 \'a3\'a9\'a1\'a3\'d5\'e2\'b8\'f6\'bc\'e2\'c0\'a8\'ba\'c5\'b8\'e6\'cb\'df
\f0  Swift 
\f2 \'c4\'c7\'b8\'f6
\f0  T 
\f2 \'ca\'c7
\f0  swapTwoValues(_:_:) 
\f2 \'ba\'af\'ca\'fd\'b6\'a8\'d2\'e5\'c4\'da\'b5\'c4\'d2\'bb\'b8\'f6\'d5\'bc\'ce\'bb\'c0\'e0\'d0\'cd\'c3\'fb\'a3\'ac\'d2\'f2\'b4\'cb
\f0  Swift 
\f2 \'b2\'bb\'bb\'e1\'c8\'a5\'b2\'e9\'d5\'d2\'c3\'fb\'ce\'aa
\f0  T 
\f2 \'b5\'c4\'ca\'b5\'bc\'ca\'c0\'e0\'d0\'cd\'a1\'a3
\f0 \cf4 \
\
\cf2 //swapTwoValues(_:_:) 
\f2 \'ba\'af\'ca\'fd\'cf\'d6\'d4\'da\'bf\'c9\'d2\'d4\'cf\'f1
\f0  swapTwoInts(_:_:) 
\f2 \'c4\'c7\'d1\'f9\'b5\'f7\'d3\'c3\'a3\'ac\'b2\'bb\'cd\'ac\'b5\'c4\'ca\'c7\'cb\'fc\'c4\'dc\'bd\'d3\'ca\'dc\'c1\'bd\'b8\'f6\'c8\'ce\'d2\'e2\'c0\'e0\'d0\'cd\'b5\'c4\'d6\'b5\'a3\'ac\'cc\'f5\'bc\'fe\'ca\'c7\'d5\'e2\'c1\'bd\'b8\'f6\'d6\'b5\'d3\'d0\'d7\'c5\'cf\'e0\'cd\'ac\'b5\'c4\'c0\'e0\'d0\'cd\'a1\'a3
\f0 swapTwoValues(_:_:) 
\f2 \'ba\'af\'ca\'fd\'b1\'bb\'b5\'f7\'d3\'c3\'ca\'b1\'a3\'ac
\f0 T 
\f2 \'cb\'f9\'b4\'fa\'b1\'ed\'b5\'c4\'c0\'e0\'d0\'cd\'b6\'bc\'bb\'e1\'d3\'c9\'b4\'ab\'c8\'eb\'b5\'c4\'d6\'b5\'b5\'c4\'c0\'e0\'d0\'cd\'cd\'c6\'b6\'cf\'b3\'f6\'c0\'b4\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'d7\'a2\'d2\'e2
\f0 \cf4 \
\cf2 //
\f2 \'c9\'cf\'c3\'e6\'b6\'a8\'d2\'e5\'b5\'c4
\f0  swapTwoValues(_:_:) 
\f2 \'ba\'af\'ca\'fd\'ca\'c7\'ca\'dc
\f0  swap(_:_:) 
\f2 \'ba\'af\'ca\'fd\'c6\'f4\'b7\'a2\'b6\'f8\'ca\'b5\'cf\'d6\'b5\'c4\'a1\'a3\'ba\'f3\'d5\'df\'b4\'e6\'d4\'da\'d3\'da
\f0  Swift 
\f2 \'b1\'ea\'d7\'bc\'bf\'e2\'a3\'ac\'c4\'e3\'bf\'c9\'d2\'d4\'d4\'da\'c4\'e3\'b5\'c4\'d3\'a6\'d3\'c3\'b3\'cc\'d0\'f2\'d6\'d0\'ca\'b9\'d3\'c3\'cb\'fc\'a1\'a3\'c8\'e7\'b9\'fb\'c4\'e3\'d4\'da\'b4\'fa\'c2\'eb\'d6\'d0\'d0\'e8\'d2\'aa\'c0\'e0\'cb\'c6
\f0  swapTwoValues(_:_:) 
\f2 \'ba\'af\'ca\'fd\'b5\'c4\'b9\'a6\'c4\'dc\'a3\'ac\'c4\'e3\'bf\'c9\'d2\'d4\'ca\'b9\'d3\'c3\'d2\'d1\'b4\'e6\'d4\'da\'b5\'c4
\f0  swap(_:_:) 
\f2 \'ba\'af\'ca\'fd\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd
\f0 \cf4 \
\cf2 //
\f2 \'d4\'da\'c9\'cf\'c3\'e6\'b5\'c4
\f0  swapTwoValues(_:_:) 
\f2 \'c0\'fd\'d7\'d3\'d6\'d0\'a3\'ac\'d5\'bc\'ce\'bb\'c0\'e0\'d0\'cd
\f0  T 
\f2 \'ca\'c7\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'b5\'c4\'d2\'bb\'b8\'f6\'c0\'fd\'d7\'d3\'a1\'a3\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'d6\'b8\'b6\'a8\'b2\'a2\'c3\'fc\'c3\'fb\'d2\'bb\'b8\'f6\'d5\'bc\'ce\'bb\'c0\'e0\'d0\'cd\'a3\'ac\'b2\'a2\'c7\'d2\'bd\'f4\'cb\'e6\'d4\'da\'ba\'af\'ca\'fd\'c3\'fb\'ba\'f3\'c3\'e6\'a3\'ac\'ca\'b9\'d3\'c3\'d2\'bb\'b6\'d4\'bc\'e2\'c0\'a8\'ba\'c5\'c0\'a8\'c6\'f0\'c0\'b4\'a3\'a8\'c0\'fd\'c8\'e7
\f0  <T>
\f2 \'a3\'a9\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'d2\'bb\'b5\'a9\'d2\'bb\'b8\'f6\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'b1\'bb\'d6\'b8\'b6\'a8\'a3\'ac\'c4\'e3\'bf\'c9\'d2\'d4\'d3\'c3\'cb\'fc\'c0\'b4\'b6\'a8\'d2\'e5\'d2\'bb\'b8\'f6\'ba\'af\'ca\'fd\'b5\'c4\'b2\'ce\'ca\'fd\'c0\'e0\'d0\'cd\'a3\'a8\'c0\'fd\'c8\'e7
\f0  swapTwoValues(_:_:) 
\f2 \'ba\'af\'ca\'fd\'d6\'d0\'b5\'c4\'b2\'ce\'ca\'fd
\f0  a 
\f2 \'ba\'cd
\f0  b
\f2 \'a3\'a9\'a3\'ac\'bb\'f2\'d5\'df\'d7\'f7\'ce\'aa\'ba\'af\'ca\'fd\'b5\'c4\'b7\'b5\'bb\'d8\'c0\'e0\'d0\'cd\'a3\'ac\'bb\'b9\'bf\'c9\'d2\'d4\'d3\'c3\'d7\'f7\'ba\'af\'ca\'fd\'d6\'f7\'cc\'e5\'d6\'d0\'b5\'c4\'d7\'a2\'ca\'cd\'c0\'e0\'d0\'cd\'a1\'a3\'d4\'da\'d5\'e2\'d0\'a9\'c7\'e9\'bf\'f6\'cf\'c2\'a3\'ac\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'bb\'e1\'d4\'da\'ba\'af\'ca\'fd\'b5\'f7\'d3\'c3\'ca\'b1\'b1\'bb\'ca\'b5\'bc\'ca\'c0\'e0\'d0\'cd\'cb\'f9\'cc\'e6\'bb\'bb\'a1\'a3\'a3\'a8\'d4\'da\'c9\'cf\'c3\'e6\'b5\'c4
\f0  swapTwoValues(_:_:) 
\f2 \'c0\'fd\'d7\'d3\'d6\'d0\'a3\'ac\'b5\'b1\'ba\'af\'ca\'fd\'b5\'da\'d2\'bb\'b4\'ce\'b1\'bb\'b5\'f7\'d3\'c3\'ca\'b1\'a3\'ac
\f0 T 
\f2 \'b1\'bb
\f0  Int 
\f2 \'cc\'e6\'bb\'bb\'a3\'ac\'b5\'da\'b6\'fe\'b4\'ce\'b5\'f7\'d3\'c3\'ca\'b1\'a3\'ac\'b1\'bb
\f0  String 
\f2 \'cc\'e6\'bb\'bb\'a1\'a3\'a3\'a9
\f0 \cf4 \
\
\cf2 //
\f2 \'c4\'e3\'bf\'c9\'cc\'e1\'b9\'a9\'b6\'e0\'b8\'f6\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'a3\'ac\'bd\'ab\'cb\'fc\'c3\'c7\'b6\'bc\'d0\'b4\'d4\'da\'bc\'e2\'c0\'a8\'ba\'c5\'d6\'d0\'a3\'ac\'d3\'c3\'b6\'ba\'ba\'c5\'b7\'d6\'bf\'aa\'a1\'a3
\f0 \cf4 \
\
\
\cf2 //
\f2 \'c3\'fc\'c3\'fb\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd
\f0 \cf4 \
\cf2 //
\f2 \'d4\'da\'b4\'f3\'b6\'e0\'ca\'fd\'c7\'e9\'bf\'f6\'cf\'c2\'a3\'ac\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'be\'df\'d3\'d0\'d2\'bb\'b8\'f6\'c3\'e8\'ca\'f6\'d0\'d4\'c3\'fb\'d7\'d6\'a3\'ac\'c0\'fd\'c8\'e7
\f0  Dictionary<Key, Value> 
\f2 \'d6\'d0\'b5\'c4
\f0  Key 
\f2 \'ba\'cd
\f0  Value
\f2 \'a3\'ac\'d2\'d4\'bc\'b0
\f0  Array<Element> 
\f2 \'d6\'d0\'b5\'c4
\f0  Element
\f2 \'a3\'ac\'d5\'e2\'bf\'c9\'d2\'d4\'b8\'e6\'cb\'df\'d4\'c4\'b6\'c1\'b4\'fa\'c2\'eb\'b5\'c4\'c8\'cb\'d5\'e2\'d0\'a9\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'ba\'cd\'b7\'ba\'d0\'cd\'ba\'af\'ca\'fd\'d6\'ae\'bc\'e4\'b5\'c4\'b9\'d8\'cf\'b5\'a1\'a3\'c8\'bb\'b6\'f8\'a3\'ac\'b5\'b1\'cb\'fc\'c3\'c7\'d6\'ae\'bc\'e4\'c3\'bb\'d3\'d0\'d3\'d0\'d2\'e2\'d2\'e5\'b5\'c4\'b9\'d8\'cf\'b5\'ca\'b1\'a3\'ac\'cd\'a8\'b3\'a3\'ca\'b9\'d3\'c3\'b5\'a5\'b8\'f6\'d7\'d6\'c4\'b8\'c0\'b4\'c3\'fc\'c3\'fb\'a3\'ac\'c0\'fd\'c8\'e7
\f0  T
\f2 \'a1\'a2
\f0 U
\f2 \'a1\'a2
\f0 V
\f2 \'a3\'ac\'d5\'fd\'c8\'e7\'c9\'cf\'c3\'e6\'d1\'dd\'ca\'be\'b5\'c4
\f0  swapTwoValues(_:_:) 
\f2 \'ba\'af\'ca\'fd\'d6\'d0\'b5\'c4
\f0  T 
\f2 \'d2\'bb\'d1\'f9\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'d7\'a2\'d2\'e2
\f0 \cf4 \
\cf2 //
\f2 \'c7\'eb\'ca\'bc\'d6\'d5\'ca\'b9\'d3\'c3\'b4\'f3\'d0\'b4\'d7\'d6\'c4\'b8\'bf\'aa\'cd\'b7\'b5\'c4\'cd\'d5\'b7\'e5\'c3\'fc\'c3\'fb\'b7\'a8\'a3\'a8\'c0\'fd\'c8\'e7
\f0  T 
\f2 \'ba\'cd
\f0  MyTypeParameter
\f2 \'a3\'a9\'c0\'b4\'ce\'aa\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'c3\'fc\'c3\'fb\'a3\'ac\'d2\'d4\'b1\'ed\'c3\'f7\'cb\'fc\'c3\'c7\'ca\'c7\'d5\'bc\'ce\'bb\'c0\'e0\'d0\'cd\'a3\'ac\'b6\'f8\'b2\'bb\'ca\'c7\'d2\'bb\'b8\'f6\'d6\'b5\'a1\'a3
\f0 \cf4 \
\
\
\
\cf2 //
\f2 \'b7\'ba\'d0\'cd\'c0\'e0\'d0\'cd
\f0 \cf4 \
\cf2 //
\f2 \'b3\'fd\'c1\'cb\'b7\'ba\'d0\'cd\'ba\'af\'ca\'fd\'a3\'ac
\f0 Swift 
\f2 \'bb\'b9\'d4\'ca\'d0\'ed\'c4\'e3\'b6\'a8\'d2\'e5\'b7\'ba\'d0\'cd\'c0\'e0\'d0\'cd\'a1\'a3\'d5\'e2\'d0\'a9\'d7\'d4\'b6\'a8\'d2\'e5\'c0\'e0\'a1\'a2\'bd\'e1\'b9\'b9\'cc\'e5\'ba\'cd\'c3\'b6\'be\'d9\'bf\'c9\'d2\'d4\'ca\'ca\'d3\'c3\'d3\'da\'c8\'ce\'ba\'ce\'c0\'e0\'d0\'cd\'a3\'ac\'c0\'e0\'cb\'c6\'d3\'da
\f0  Array 
\f2 \'ba\'cd
\f0  Dictionary
\f2 \'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'d5\'e2\'b2\'bf\'b7\'d6\'c4\'da\'c8\'dd\'bd\'ab\'cf\'f2\'c4\'e3\'d5\'b9\'ca\'be\'c8\'e7\'ba\'ce\'b1\'e0\'d0\'b4\'d2\'bb\'b8\'f6\'c3\'fb\'ce\'aa
\f0  Stack 
\f2 \'a3\'a8\'d5\'bb\'a3\'a9\'b5\'c4\'b7\'ba\'d0\'cd\'bc\'af\'ba\'cf\'c0\'e0\'d0\'cd\'a1\'a3\'d5\'bb\'ca\'c7\'d2\'bb\'cf\'b5\'c1\'d0\'d6\'b5\'b5\'c4\'d3\'d0\'d0\'f2\'bc\'af\'ba\'cf\'a3\'ac\'ba\'cd
\f0  Array 
\f2 \'c0\'e0\'cb\'c6\'a3\'ac\'b5\'ab\'cb\'fc\'cf\'e0\'b1\'c8
\f0  Swift 
\f2 \'b5\'c4
\f0  Array 
\f2 \'c0\'e0\'d0\'cd\'d3\'d0\'b8\'fc\'b6\'e0\'b5\'c4\'b2\'d9\'d7\'f7\'cf\'de\'d6\'c6\'a1\'a3\'ca\'fd\'d7\'e9\'d4\'ca\'d0\'ed\'d4\'da\'ca\'fd\'d7\'e9\'b5\'c4\'c8\'ce\'d2\'e2\'ce\'bb\'d6\'c3\'b2\'e5\'c8\'eb\'d0\'c2\'d4\'aa\'cb\'d8\'bb\'f2\'ca\'c7\'c9\'be\'b3\'fd\'c6\'e4\'d6\'d0\'c8\'ce\'d2\'e2\'ce\'bb\'d6\'c3\'b5\'c4\'d4\'aa\'cb\'d8\'a1\'a3\'b6\'f8\'d5\'bb\'d6\'bb\'d4\'ca\'d0\'ed\'d4\'da\'bc\'af\'ba\'cf\'b5\'c4\'c4\'a9\'b6\'cb\'cc\'ed\'bc\'d3\'d0\'c2\'b5\'c4\'d4\'aa\'cb\'d8\'a3\'a8\'b3\'c6\'d6\'ae\'ce\'aa\'c8\'eb\'d5\'bb\'a3\'a9\'a1\'a3\'c0\'e0\'cb\'c6\'b5\'c4\'a3\'ac\'d5\'bb\'d2\'b2\'d6\'bb\'c4\'dc\'b4\'d3\'c4\'a9\'b6\'cb\'d2\'c6\'b3\'fd\'d4\'aa\'cb\'d8\'a3\'a8\'b3\'c6\'d6\'ae\'ce\'aa\'b3\'f6\'d5\'bb\'a3\'a9\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'d7\'a2\'d2\'e2
\f0 \cf4 \
\cf2 //
\f2 \'d5\'bb\'b5\'c4\'b8\'c5\'c4\'ee\'d2\'d1\'b1\'bb
\f0  UINavigationController 
\f2 \'c0\'e0\'d3\'c3\'c0\'b4\'b9\'b9\'d4\'ec\'ca\'d3\'cd\'bc\'bf\'d8\'d6\'c6\'c6\'f7\'b5\'c4\'b5\'bc\'ba\'bd\'bd\'e1\'b9\'b9\'a1\'a3\'c4\'e3\'cd\'a8\'b9\'fd\'b5\'f7\'d3\'c3
\f0  UINavigationController 
\f2 \'b5\'c4
\f0  pushViewController(_:animated:) 
\f2 \'b7\'bd\'b7\'a8\'c0\'b4\'cc\'ed\'bc\'d3\'d0\'c2\'b5\'c4\'ca\'d3\'cd\'bc\'bf\'d8\'d6\'c6\'c6\'f7\'b5\'bd\'b5\'bc\'ba\'bd\'d5\'bb\'a3\'ac\'cd\'a8\'b9\'fd
\f0  popViewControllerAnimated(_:) 
\f2 \'b7\'bd\'b7\'a8\'c0\'b4\'b4\'d3\'b5\'bc\'ba\'bd\'d5\'bb\'d6\'d0\'d2\'c6\'b3\'fd\'ca\'d3\'cd\'bc\'bf\'d8\'d6\'c6\'c6\'f7\'a1\'a3\'c3\'bf\'b5\'b1\'c4\'e3\'d0\'e8\'d2\'aa\'d2\'bb\'b8\'f6\'d1\'cf\'b8\'f1\'b5\'c4
\f0 \'93
\f2 \'ba\'f3\'bd\'f8\'cf\'c8\'b3\'f6
\f0 \'94
\f2 \'b7\'bd\'ca\'bd\'c0\'b4\'b9\'dc\'c0\'ed\'bc\'af\'ba\'cf\'a3\'ac\'d5\'bb\'b6\'bc\'ca\'c7\'d7\'ee\'ca\'b5\'d3\'c3\'b5\'c4\'c4\'a3\'d0\'cd\'a1\'a3
\f0 \cf4 \
\cf2 //
\f2 \'cf\'c2\'cd\'bc\'d5\'b9\'ca\'be\'c1\'cb\'d2\'bb\'b8\'f6\'d5\'bb\'b5\'c4\'c8\'eb\'d5\'bb\'a3\'a8
\f0 push
\f2 \'a3\'a9\'ba\'cd\'b3\'f6\'d5\'bb\'a3\'a8
\f0 pop
\f2 \'a3\'a9\'b5\'c4\'d0\'d0\'ce\'aa\'a3\'ba
\f0 \cf4 \
\cf2 //
\f2 \'cf\'d6\'d4\'da\'d3\'d0\'c8\'fd\'b8\'f6\'d6\'b5\'d4\'da\'d5\'bb\'d6\'d0\'a1\'a3
\f0 \cf4 \
\cf2 //
\f2 \'b5\'da\'cb\'c4\'b8\'f6\'d6\'b5\'b1\'bb\'d1\'b9\'c8\'eb\'b5\'bd\'d5\'bb\'b5\'c4\'b6\'a5\'b2\'bf\'a1\'a3
\f0 \cf4 \
\cf2 //
\f2 \'cf\'d6\'d4\'da\'d3\'d0\'cb\'c4\'b8\'f6\'d6\'b5\'d4\'da\'d5\'bb\'d6\'d0\'a3\'ac\'d7\'ee\'bd\'fc\'c8\'eb\'d5\'bb\'b5\'c4\'c4\'c7\'b8\'f6\'d6\'b5\'d4\'da\'b6\'a5\'b2\'bf\'a1\'a3
\f0 \cf4 \
\cf2 //
\f2 \'d5\'bb\'d6\'d0\'d7\'ee\'b6\'a5\'b2\'bf\'b5\'c4\'c4\'c7\'b8\'f6\'d6\'b5\'b1\'bb\'d2\'c6\'b3\'fd\'b3\'f6\'d5\'bb\'a1\'a3
\f0 \cf4 \
\cf2 //
\f2 \'d2\'bb\'b8\'f6\'d6\'b5\'d2\'c6\'b3\'fd\'b3\'f6\'d5\'bb\'ba\'f3\'a3\'ac\'cf\'d6\'d4\'da\'d5\'bb\'d3\'d6\'d6\'bb\'d3\'d0\'c8\'fd\'b8\'f6\'d6\'b5\'c1\'cb\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'cf\'c2\'c3\'e6\'d5\'b9\'ca\'be\'c1\'cb\'c8\'e7\'ba\'ce\'b1\'e0\'d0\'b4\'d2\'bb\'b8\'f6\'b7\'c7\'b7\'ba\'d0\'cd\'b0\'e6\'b1\'be\'b5\'c4\'d5\'bb\'a3\'ac\'d2\'d4
\f0  Int 
\f2 \'d0\'cd\'b5\'c4\'d5\'bb\'ce\'aa\'c0\'fd\'a3\'ba
\f0 \cf4 \

\f1\b \cf5 struct
\f0\b0 \cf4  \cf8 IntStack\cf4  \{\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf6 items\cf4  = [Int]()\
    
\f1\b \cf5 mutating
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf6 push\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  item: \cf7 Int\cf4 ) \{\
        items.append(item)\
    \}\
    
\f1\b \cf5 mutating
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf6 pop\cf4 () -> \cf7 Int\cf4  \{\
        
\f1\b \cf5 return
\f0\b0 \cf4  items.removeLast()\
    \}\
\}\
\
\cf2 //
\f2 \'d5\'e2\'b8\'f6\'bd\'e1\'b9\'b9\'cc\'e5\'d4\'da\'d5\'bb\'d6\'d0\'ca\'b9\'d3\'c3\'d2\'bb\'b8\'f6\'c3\'fb\'ce\'aa
\f0  items 
\f2 \'b5\'c4
\f0  Array 
\f2 \'ca\'f4\'d0\'d4\'c0\'b4\'b4\'e6\'b4\'a2\'d6\'b5\'a1\'a3
\f0 Stack 
\f2 \'cc\'e1\'b9\'a9\'c1\'cb\'c1\'bd\'b8\'f6\'b7\'bd\'b7\'a8\'a3\'ba
\f0 push(_:) 
\f2 \'ba\'cd
\f0  pop()
\f2 \'a3\'ac\'d3\'c3\'c0\'b4\'cf\'f2\'d5\'bb\'d6\'d0\'d1\'b9\'c8\'eb\'d6\'b5\'d2\'d4\'bc\'b0\'b4\'d3\'d5\'bb\'d6\'d0\'d2\'c6\'b3\'fd\'d6\'b5\'a1\'a3\'d5\'e2\'d0\'a9\'b7\'bd\'b7\'a8\'b1\'bb\'b1\'ea\'bc\'c7\'ce\'aa
\f0  mutating
\f2 \'a3\'ac\'d2\'f2\'ce\'aa\'cb\'fc\'c3\'c7\'d0\'e8\'d2\'aa\'d0\'de\'b8\'c4\'bd\'e1\'b9\'b9\'cc\'e5\'b5\'c4
\f0  items 
\f2 \'ca\'fd\'d7\'e9\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'c9\'cf\'c3\'e6\'b5\'c4
\f0  IntStack 
\f2 \'bd\'e1\'b9\'b9\'cc\'e5\'d6\'bb\'c4\'dc\'d3\'c3\'d3\'da
\f0  Int 
\f2 \'c0\'e0\'d0\'cd\'a1\'a3\'b2\'bb\'b9\'fd\'a3\'ac\'bf\'c9\'d2\'d4\'b6\'a8\'d2\'e5\'d2\'bb\'b8\'f6\'b7\'ba\'d0\'cd
\f0  Stack 
\f2 \'bd\'e1\'b9\'b9\'cc\'e5\'a3\'ac\'b4\'d3\'b6\'f8\'c4\'dc\'b9\'bb\'b4\'a6\'c0\'ed\'c8\'ce\'d2\'e2\'c0\'e0\'d0\'cd\'b5\'c4\'d6\'b5\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'cf\'c2\'c3\'e6\'ca\'c7\'cf\'e0\'cd\'ac\'b4\'fa\'c2\'eb\'b5\'c4\'b7\'ba\'d0\'cd\'b0\'e6\'b1\'be\'a3\'ba
\f0 \cf4 \
\

\f1\b \cf5 struct
\f0\b0 \cf4  \cf8 Stack\cf4 <\cf8 Element\cf4 > \{\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf6 items\cf4  = [Element]()\
    
\f1\b \cf5 mutating
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf6 push\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  item: \cf7 Element\cf4 ) \{\
        items.append(item)\
    \}\
    
\f1\b \cf5 mutating
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf6 pop\cf4 () -> \cf7 Element\cf4  \{\
        
\f1\b \cf5 return
\f0\b0 \cf4  items.removeLast()\
    \}\
\}\
\
\cf2 //
\f2 \'d7\'a2\'d2\'e2\'a3\'ac
\f0 Stack 
\f2 \'bb\'f9\'b1\'be\'c9\'cf\'ba\'cd
\f0  IntStack 
\f2 \'cf\'e0\'cd\'ac\'a3\'ac\'d6\'bb\'ca\'c7\'d3\'c3\'d5\'bc\'ce\'bb\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd
\f0  Element 
\f2 \'b4\'fa\'cc\'e6\'c1\'cb\'ca\'b5\'bc\'ca\'b5\'c4
\f0  Int 
\f2 \'c0\'e0\'d0\'cd\'a1\'a3\'d5\'e2\'b8\'f6\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'b0\'fc\'b9\'fc\'d4\'da\'bd\'f4\'cb\'e6\'bd\'e1\'b9\'b9\'cc\'e5\'c3\'fb\'b5\'c4\'d2\'bb\'b6\'d4\'bc\'e2\'c0\'a8\'ba\'c5\'c0\'ef\'a3\'a8
\f0 <Element>
\f2 \'a3\'a9\'a1\'a3
\f0 \cf4 \
\
\cf2 //Element 
\f2 \'ce\'aa\'b4\'fd\'cc\'e1\'b9\'a9\'b5\'c4\'c0\'e0\'d0\'cd\'b6\'a8\'d2\'e5\'c1\'cb\'d2\'bb\'b8\'f6\'d5\'bc\'ce\'bb\'c3\'fb\'a1\'a3\'d5\'e2\'d6\'d6\'b4\'fd\'cc\'e1\'b9\'a9\'b5\'c4\'c0\'e0\'d0\'cd\'bf\'c9\'d2\'d4\'d4\'da\'bd\'e1\'b9\'b9\'cc\'e5\'b5\'c4\'b6\'a8\'d2\'e5\'d6\'d0\'cd\'a8\'b9\'fd
\f0  Element 
\f2 \'c0\'b4\'d2\'fd\'d3\'c3\'a1\'a3\'d4\'da\'d5\'e2\'b8\'f6\'c0\'fd\'d7\'d3\'d6\'d0\'a3\'ac
\f0 Element 
\f2 \'d4\'da\'c8\'e7\'cf\'c2\'c8\'fd\'b8\'f6\'b5\'d8\'b7\'bd\'b1\'bb\'d3\'c3\'d7\'f7\'d5\'bc\'ce\'bb\'b7\'fb\'a3\'ba
\f0 \cf4 \
\
\cf2 //
\f2 \'b4\'b4\'bd\'a8
\f0  items 
\f2 \'ca\'f4\'d0\'d4\'a3\'ac\'ca\'b9\'d3\'c3
\f0  Element 
\f2 \'c0\'e0\'d0\'cd\'b5\'c4\'bf\'d5\'ca\'fd\'d7\'e9\'b6\'d4\'c6\'e4\'bd\'f8\'d0\'d0\'b3\'f5\'ca\'bc\'bb\'af\'a1\'a3
\f0 \cf4 \
\cf2 //
\f2 \'d6\'b8\'b6\'a8
\f0  push(_:) 
\f2 \'b7\'bd\'b7\'a8\'b5\'c4\'ce\'a8\'d2\'bb\'b2\'ce\'ca\'fd
\f0  item 
\f2 \'b5\'c4\'c0\'e0\'d0\'cd\'b1\'d8\'d0\'eb\'ca\'c7
\f0  Element 
\f2 \'c0\'e0\'d0\'cd\'a1\'a3
\f0 \cf4 \
\cf2 //
\f2 \'d6\'b8\'b6\'a8
\f0  pop() 
\f2 \'b7\'bd\'b7\'a8\'b5\'c4\'b7\'b5\'bb\'d8\'d6\'b5\'c0\'e0\'d0\'cd\'b1\'d8\'d0\'eb\'ca\'c7
\f0  Element 
\f2 \'c0\'e0\'d0\'cd\'a1\'a3
\f0 \cf4 \
\cf2 //
\f2 \'d3\'c9\'d3\'da
\f0  Stack 
\f2 \'ca\'c7\'b7\'ba\'d0\'cd\'c0\'e0\'d0\'cd\'a3\'ac\'d2\'f2\'b4\'cb\'bf\'c9\'d2\'d4\'d3\'c3\'c0\'b4\'b4\'b4\'bd\'a8
\f0  Swift 
\f2 \'d6\'d0\'c8\'ce\'d2\'e2\'d3\'d0\'d0\'a7\'c0\'e0\'d0\'cd\'b5\'c4\'d5\'bb\'a3\'ac\'be\'cd\'cf\'f1
\f0  Array 
\f2 \'ba\'cd
\f0  Dictionary 
\f2 \'c4\'c7\'d1\'f9\'a1\'a3
\f0 \cf4 \
\
\
\cf2 //
\f2 \'c0\'a9\'d5\'b9\'d2\'bb\'b8\'f6\'b7\'ba\'d0\'cd\'c0\'e0\'d0\'cd
\f0 \cf4 \
\cf2 //
\f2 \'b5\'b1\'c4\'e3\'c0\'a9\'d5\'b9\'d2\'bb\'b8\'f6\'b7\'ba\'d0\'cd\'c0\'e0\'d0\'cd\'b5\'c4\'ca\'b1\'ba\'f2\'a3\'ac\'c4\'e3\'b2\'a2\'b2\'bb\'d0\'e8\'d2\'aa\'d4\'da\'c0\'a9\'d5\'b9\'b5\'c4\'b6\'a8\'d2\'e5\'d6\'d0\'cc\'e1\'b9\'a9\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'c1\'d0\'b1\'ed\'a1\'a3\'d4\'ad\'ca\'bc\'c0\'e0\'d0\'cd\'b6\'a8\'d2\'e5\'d6\'d0\'c9\'f9\'c3\'f7\'b5\'c4\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'c1\'d0\'b1\'ed\'d4\'da\'c0\'a9\'d5\'b9\'d6\'d0\'bf\'c9\'d2\'d4\'d6\'b1\'bd\'d3\'ca\'b9\'d3\'c3\'a3\'ac\'b2\'a2\'c7\'d2\'d5\'e2\'d0\'a9\'c0\'b4\'d7\'d4\'d4\'ad\'ca\'bc\'c0\'e0\'d0\'cd\'d6\'d0\'b5\'c4\'b2\'ce\'ca\'fd\'c3\'fb\'b3\'c6\'bb\'e1\'b1\'bb\'d3\'c3\'d7\'f7\'d4\'ad\'ca\'bc\'b6\'a8\'d2\'e5\'d6\'d0\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'b5\'c4\'d2\'fd\'d3\'c3\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'cf\'c2\'c3\'e6\'b5\'c4\'c0\'fd\'d7\'d3\'c0\'a9\'d5\'b9\'c1\'cb\'b7\'ba\'d0\'cd\'c0\'e0\'d0\'cd
\f0  Stack
\f2 \'a3\'ac\'ce\'aa\'c6\'e4\'cc\'ed\'bc\'d3\'c1\'cb\'d2\'bb\'b8\'f6\'c3\'fb\'ce\'aa
\f0  topItem 
\f2 \'b5\'c4\'d6\'bb\'b6\'c1\'bc\'c6\'cb\'e3\'d0\'cd\'ca\'f4\'d0\'d4\'a3\'ac\'cb\'fc\'bd\'ab\'bb\'e1\'b7\'b5\'bb\'d8\'b5\'b1\'c7\'b0\'d5\'bb\'b6\'a5\'b6\'cb\'b5\'c4\'d4\'aa\'cb\'d8\'b6\'f8\'b2\'bb\'bb\'e1\'bd\'ab\'c6\'e4\'b4\'d3\'d5\'bb\'d6\'d0\'d2\'c6\'b3\'fd\'a3\'ba
\f0 \cf4 \

\f1\b \cf5 extension
\f0\b0 \cf4  \cf7 Stack\cf4  \{\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf6 topItem\cf4 : \cf7 Element\cf4 ? \{\
        
\f1\b \cf5 return
\f0\b0 \cf4  items.isEmpty ? 
\f1\b \cf5 nil
\f0\b0 \cf4  : items[items.count - \cf9 1\cf4 ]\
    \}\
\}\
\
\cf2 //topItem 
\f2 \'ca\'f4\'d0\'d4\'bb\'e1\'b7\'b5\'bb\'d8\'d2\'bb\'b8\'f6
\f0  Element 
\f2 \'c0\'e0\'d0\'cd\'b5\'c4\'bf\'c9\'d1\'a1\'d6\'b5\'a1\'a3\'b5\'b1\'d5\'bb\'ce\'aa\'bf\'d5\'b5\'c4\'ca\'b1\'ba\'f2\'a3\'ac
\f0 topItem 
\f2 \'bb\'e1\'b7\'b5\'bb\'d8
\f0  nil
\f2 \'a3\'bb\'b5\'b1\'d5\'bb\'b2\'bb\'ce\'aa\'bf\'d5\'b5\'c4\'ca\'b1\'ba\'f2\'a3\'ac
\f0 topItem 
\f2 \'bb\'e1\'b7\'b5\'bb\'d8
\f0  items 
\f2 \'ca\'fd\'d7\'e9\'d6\'d0\'b5\'c4\'d7\'ee\'ba\'f3\'d2\'bb\'b8\'f6\'d4\'aa\'cb\'d8\'a1\'a3
\f0 \cf4 \
\cf2 //
\f2 \'d7\'a2\'d2\'e2\'a3\'ac\'d5\'e2\'b8\'f6\'c0\'a9\'d5\'b9\'b2\'a2\'c3\'bb\'d3\'d0\'b6\'a8\'d2\'e5\'d2\'bb\'b8\'f6\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'c1\'d0\'b1\'ed\'a1\'a3\'cf\'e0\'b7\'b4\'b5\'c4\'a3\'ac
\f0 Stack 
\f2 \'c0\'e0\'d0\'cd\'d2\'d1\'d3\'d0\'b5\'c4\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'c3\'fb\'b3\'c6
\f0  Element
\f2 \'a3\'ac\'b1\'bb\'d3\'c3\'d4\'da\'c0\'a9\'d5\'b9\'d6\'d0\'c0\'b4\'b1\'ed\'ca\'be\'bc\'c6\'cb\'e3\'d0\'cd\'ca\'f4\'d0\'d4
\f0  topItem 
\f2 \'b5\'c4\'bf\'c9\'d1\'a1\'c0\'e0\'d0\'cd\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'c0\'e0\'d0\'cd\'d4\'bc\'ca\'f8
\f0 \cf4 \
\cf2 //swapTwoValues(_:_:) 
\f2 \'ba\'af\'ca\'fd\'ba\'cd
\f0  Stack 
\f2 \'c0\'e0\'d0\'cd\'bf\'c9\'d2\'d4\'d7\'f7\'d3\'c3\'d3\'da\'c8\'ce\'ba\'ce\'c0\'e0\'d0\'cd\'a1\'a3\'b2\'bb\'b9\'fd\'a3\'ac\'d3\'d0\'b5\'c4\'ca\'b1\'ba\'f2\'c8\'e7\'b9\'fb\'c4\'dc\'bd\'ab\'ca\'b9\'d3\'c3\'d4\'da\'b7\'ba\'d0\'cd\'ba\'af\'ca\'fd\'ba\'cd\'b7\'ba\'d0\'cd\'c0\'e0\'d0\'cd\'d6\'d0\'b5\'c4\'c0\'e0\'d0\'cd\'cc\'ed\'bc\'d3\'d2\'bb\'b8\'f6\'cc\'d8\'b6\'a8\'b5\'c4\'c0\'e0\'d0\'cd\'d4\'bc\'ca\'f8\'a3\'ac\'bd\'ab\'bb\'e1\'ca\'c7\'b7\'c7\'b3\'a3\'d3\'d0\'d3\'c3\'b5\'c4\'a1\'a3\'c0\'e0\'d0\'cd\'d4\'bc\'ca\'f8\'bf\'c9\'d2\'d4\'d6\'b8\'b6\'a8\'d2\'bb\'b8\'f6\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'b1\'d8\'d0\'eb\'bc\'cc\'b3\'d0\'d7\'d4\'d6\'b8\'b6\'a8\'c0\'e0\'a3\'ac\'bb\'f2\'d5\'df\'b7\'fb\'ba\'cf\'d2\'bb\'b8\'f6\'cc\'d8\'b6\'a8\'b5\'c4\'d0\'ad\'d2\'e9\'bb\'f2\'d0\'ad\'d2\'e9\'d7\'e9\'ba\'cf\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'c0\'fd\'c8\'e7\'a3\'ac
\f0 Swift 
\f2 \'b5\'c4
\f0  Dictionary 
\f2 \'c0\'e0\'d0\'cd\'b6\'d4\'d7\'d6\'b5\'e4\'b5\'c4\'bc\'fc\'b5\'c4\'c0\'e0\'d0\'cd\'d7\'f6\'c1\'cb\'d0\'a9\'cf\'de\'d6\'c6\'a1\'a3\'d4\'da\'d7\'d6\'b5\'e4\'b5\'c4\'c3\'e8\'ca\'f6\'d6\'d0\'a3\'ac\'d7\'d6\'b5\'e4\'b5\'c4\'bc\'fc\'b5\'c4\'c0\'e0\'d0\'cd\'b1\'d8\'d0\'eb\'ca\'c7\'bf\'c9\'b9\'fe\'cf\'a3\'a3\'a8
\f0 hashable
\f2 \'a3\'a9\'b5\'c4\'a1\'a3\'d2\'b2\'be\'cd\'ca\'c7\'cb\'b5\'a3\'ac\'b1\'d8\'d0\'eb\'d3\'d0\'d2\'bb\'d6\'d6\'b7\'bd\'b7\'a8\'c4\'dc\'b9\'bb\'ce\'a8\'d2\'bb\'b5\'d8\'b1\'ed\'ca\'be\'cb\'fc\'a1\'a3
\f0 Dictionary 
\f2 \'b5\'c4\'bc\'fc\'d6\'ae\'cb\'f9\'d2\'d4\'d2\'aa\'ca\'c7\'bf\'c9\'b9\'fe\'cf\'a3\'b5\'c4\'a3\'ac\'ca\'c7\'ce\'aa\'c1\'cb\'b1\'e3\'d3\'da\'bc\'ec\'b2\'e9\'d7\'d6\'b5\'e4\'ca\'c7\'b7\'f1\'d2\'d1\'be\'ad\'b0\'fc\'ba\'ac\'c4\'b3\'b8\'f6\'cc\'d8\'b6\'a8\'bc\'fc\'b5\'c4\'d6\'b5\'a1\'a3\'c8\'f4\'c3\'bb\'d3\'d0\'d5\'e2\'b8\'f6\'d2\'aa\'c7\'f3\'a3\'ac
\f0 Dictionary 
\f2 \'bd\'ab\'ce\'de\'b7\'a8\'c5\'d0\'b6\'cf\'ca\'c7\'b7\'f1\'bf\'c9\'d2\'d4\'b2\'e5\'c8\'eb\'bb\'f2\'d5\'df\'cc\'e6\'bb\'bb\'c4\'b3\'b8\'f6\'d6\'b8\'b6\'a8\'bc\'fc\'b5\'c4\'d6\'b5\'a3\'ac\'d2\'b2\'b2\'bb\'c4\'dc\'b2\'e9\'d5\'d2\'b5\'bd\'d2\'d1\'be\'ad\'b4\'e6\'b4\'a2\'d4\'da\'d7\'d6\'b5\'e4\'d6\'d0\'b5\'c4\'d6\'b8\'b6\'a8\'bc\'fc\'b5\'c4\'d6\'b5\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'ce\'aa\'c1\'cb\'ca\'b5\'cf\'d6\'d5\'e2\'b8\'f6\'d2\'aa\'c7\'f3\'a3\'ac\'d2\'bb\'b8\'f6\'c0\'e0\'d0\'cd\'d4\'bc\'ca\'f8\'b1\'bb\'c7\'bf\'d6\'c6\'bc\'d3\'b5\'bd
\f0  Dictionary 
\f2 \'b5\'c4\'bc\'fc\'c0\'e0\'d0\'cd\'c9\'cf\'a3\'ac\'d2\'aa\'c7\'f3\'c6\'e4\'bc\'fc\'c0\'e0\'d0\'cd\'b1\'d8\'d0\'eb\'b7\'fb\'ba\'cf
\f0  Hashable 
\f2 \'d0\'ad\'d2\'e9\'a3\'ac\'d5\'e2\'ca\'c7
\f0  Swift 
\f2 \'b1\'ea\'d7\'bc\'bf\'e2\'d6\'d0\'b6\'a8\'d2\'e5\'b5\'c4\'d2\'bb\'b8\'f6\'cc\'d8\'b6\'a8\'d0\'ad\'d2\'e9\'a1\'a3\'cb\'f9\'d3\'d0\'b5\'c4
\f0  Swift 
\f2 \'bb\'f9\'b1\'be\'c0\'e0\'d0\'cd\'a3\'a8\'c0\'fd\'c8\'e7
\f0  String
\f2 \'a1\'a2
\f0 Int
\f2 \'a1\'a2
\f0 Double 
\f2 \'ba\'cd
\f0  Bool
\f2 \'a3\'a9\'c4\'ac\'c8\'cf\'b6\'bc\'ca\'c7\'bf\'c9\'b9\'fe\'cf\'a3\'b5\'c4\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'b5\'b1\'c4\'e3\'b4\'b4\'bd\'a8\'d7\'d4\'b6\'a8\'d2\'e5\'b7\'ba\'d0\'cd\'c0\'e0\'d0\'cd\'ca\'b1\'a3\'ac\'c4\'e3\'bf\'c9\'d2\'d4\'b6\'a8\'d2\'e5\'c4\'e3\'d7\'d4\'bc\'ba\'b5\'c4\'c0\'e0\'d0\'cd\'d4\'bc\'ca\'f8\'a3\'ac\'d5\'e2\'d0\'a9\'d4\'bc\'ca\'f8\'bd\'ab\'cc\'e1\'b9\'a9\'b8\'fc\'ce\'aa\'c7\'bf\'b4\'f3\'b5\'c4\'b7\'ba\'d0\'cd\'b1\'e0\'b3\'cc\'c4\'dc\'c1\'a6\'a1\'a3\'b3\'e9\'cf\'f3\'b8\'c5\'c4\'ee\'a3\'ac\'c0\'fd\'c8\'e7\'bf\'c9\'b9\'fe\'cf\'a3\'b5\'c4\'a3\'ac\'c3\'e8\'ca\'f6\'b5\'c4\'ca\'c7\'c0\'e0\'d0\'cd\'d4\'da\'b8\'c5\'c4\'ee\'c9\'cf\'b5\'c4\'cc\'d8\'d5\'f7\'a3\'ac\'b6\'f8\'b2\'bb\'ca\'c7\'cb\'fc\'c3\'c7\'b5\'c4\'cf\'d4\'ca\'bd\'c0\'e0\'d0\'cd\'a1\'a3
\f0 \cf4 \
\
\
\cf2 //
\f2 \'c0\'e0\'d0\'cd\'d4\'bc\'ca\'f8\'d3\'ef\'b7\'a8
\f0 \cf4 \
\cf2 //
\f2 \'c4\'e3\'bf\'c9\'d2\'d4\'d4\'da\'d2\'bb\'b8\'f6\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'c3\'fb\'ba\'f3\'c3\'e6\'b7\'c5\'d6\'c3\'d2\'bb\'b8\'f6\'c0\'e0\'c3\'fb\'bb\'f2\'d5\'df\'d0\'ad\'d2\'e9\'c3\'fb\'a3\'ac\'b2\'a2\'d3\'c3\'c3\'b0\'ba\'c5\'bd\'f8\'d0\'d0\'b7\'d6\'b8\'f4\'a3\'ac\'c0\'b4\'b6\'a8\'d2\'e5\'c0\'e0\'d0\'cd\'d4\'bc\'ca\'f8\'a3\'ac\'cb\'fc\'c3\'c7\'bd\'ab\'b3\'c9\'ce\'aa\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'c1\'d0\'b1\'ed\'b5\'c4\'d2\'bb\'b2\'bf\'b7\'d6\'a1\'a3\'b6\'d4\'b7\'ba\'d0\'cd\'ba\'af\'ca\'fd\'cc\'ed\'bc\'d3\'c0\'e0\'d0\'cd\'d4\'bc\'ca\'f8\'b5\'c4\'bb\'f9\'b1\'be\'d3\'ef\'b7\'a8\'c8\'e7\'cf\'c2\'cb\'f9\'ca\'be\'a3\'a8\'d7\'f7\'d3\'c3\'d3\'da\'b7\'ba\'d0\'cd\'c0\'e0\'d0\'cd\'ca\'b1\'b5\'c4\'d3\'ef\'b7\'a8\'d3\'eb\'d6\'ae\'cf\'e0\'cd\'ac\'a3\'a9\'a3\'ba
\f0 \cf4 \
\
\cf2 //func someFunction<T: SomeClass, U: SomeProtocol>(someT: T, someU: U) \{\cf4 \
    \cf2 // 
\f2 \'d5\'e2\'c0\'ef\'ca\'c7\'b7\'ba\'d0\'cd\'ba\'af\'ca\'fd\'b5\'c4\'ba\'af\'ca\'fd\'cc\'e5\'b2\'bf\'b7\'d6
\f0 \cf4 \
\cf2 //\}\cf4 \
\
\cf2 //
\f2 \'c9\'cf\'c3\'e6\'d5\'e2\'b8\'f6\'ba\'af\'ca\'fd\'d3\'d0\'c1\'bd\'b8\'f6\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'a1\'a3\'b5\'da\'d2\'bb\'b8\'f6\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd
\f0  T
\f2 \'a3\'ac\'d3\'d0\'d2\'bb\'b8\'f6\'d2\'aa\'c7\'f3
\f0  T 
\f2 \'b1\'d8\'d0\'eb\'ca\'c7
\f0  SomeClass 
\f2 \'d7\'d3\'c0\'e0\'b5\'c4\'c0\'e0\'d0\'cd\'d4\'bc\'ca\'f8\'a3\'bb\'b5\'da\'b6\'fe\'b8\'f6\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd
\f0  U
\f2 \'a3\'ac\'d3\'d0\'d2\'bb\'b8\'f6\'d2\'aa\'c7\'f3
\f0  U 
\f2 \'b1\'d8\'d0\'eb\'b7\'fb\'ba\'cf
\f0  SomeProtocol 
\f2 \'d0\'ad\'d2\'e9\'b5\'c4\'c0\'e0\'d0\'cd\'d4\'bc\'ca\'f8\'a1\'a3
\f0 \cf4 \
\
\
\cf2 //
\f2 \'c0\'e0\'d0\'cd\'d4\'bc\'ca\'f8\'ca\'b5\'bc\'f9
\f0 \cf4 \
\cf2 //
\f2 \'d5\'e2\'c0\'ef\'d3\'d0\'b8\'f6\'c3\'fb\'ce\'aa
\f0  findIndex(ofString:in:) 
\f2 \'b5\'c4\'b7\'c7\'b7\'ba\'d0\'cd\'ba\'af\'ca\'fd\'a3\'ac\'b8\'c3\'ba\'af\'ca\'fd\'b5\'c4\'b9\'a6\'c4\'dc\'ca\'c7\'d4\'da\'d2\'bb\'b8\'f6
\f0  String 
\f2 \'ca\'fd\'d7\'e9\'d6\'d0\'b2\'e9\'d5\'d2\'b8\'f8\'b6\'a8
\f0  String 
\f2 \'d6\'b5\'b5\'c4\'cb\'f7\'d2\'fd\'a1\'a3\'c8\'f4\'b2\'e9\'d5\'d2\'b5\'bd\'c6\'a5\'c5\'e4\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae\'a3\'ac
\f0 findIndex(ofString:in:) 
\f2 \'ba\'af\'ca\'fd\'b7\'b5\'bb\'d8\'b8\'c3\'d7\'d6\'b7\'fb\'b4\'ae\'d4\'da\'ca\'fd\'d7\'e9\'d6\'d0\'b5\'c4\'cb\'f7\'d2\'fd\'d6\'b5\'a3\'ac\'b7\'f1\'d4\'f2\'b7\'b5\'bb\'d8
\f0  nil
\f2 \'a3\'ba
\f0 \cf4 \

\f1\b \cf5 func
\f0\b0 \cf4  \cf6 findIndex\cf4 (ofString valueToFind: \cf7 String\cf4 , in array: [\cf7 String\cf4 ]) -> \cf7 Int\cf4 ? \{\
    
\f1\b \cf5 for
\f0\b0 \cf4  (index, value) 
\f1\b \cf5 in
\f0\b0 \cf4  array.enumerated() \{\
        
\f1\b \cf5 if
\f0\b0 \cf4  value == valueToFind \{\
            
\f1\b \cf5 return
\f0\b0 \cf4  index\
        \}\
    \}\
    
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 nil
\f0\b0 \cf4 \
\}\
\
\cf2 //
\f2 \'c8\'e7\'b9\'fb\'d6\'bb\'c4\'dc\'b2\'e9\'d5\'d2\'d7\'d6\'b7\'fb\'b4\'ae\'d4\'da\'ca\'fd\'d7\'e9\'d6\'d0\'b5\'c4\'cb\'f7\'d2\'fd\'a3\'ac\'d3\'c3\'b4\'a6\'b2\'bb\'ca\'c7\'ba\'dc\'b4\'f3\'a1\'a3\'b2\'bb\'b9\'fd\'a3\'ac\'c4\'e3\'bf\'c9\'d2\'d4\'d3\'c3\'d5\'bc\'ce\'bb\'c0\'e0\'d0\'cd
\f0  T 
\f2 \'cc\'e6\'bb\'bb
\f0  String 
\f2 \'c0\'e0\'d0\'cd\'c0\'b4\'d0\'b4\'b3\'f6\'be\'df\'d3\'d0\'cf\'e0\'cd\'ac\'b9\'a6\'c4\'dc\'b5\'c4\'b7\'ba\'d0\'cd\'ba\'af\'ca\'fd
\f0  findIndex(_:_:)
\f2 \'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'cf\'c2\'c3\'e6\'d5\'b9\'ca\'be\'c1\'cb
\f0  findIndex(ofString:in:) 
\f2 \'ba\'af\'ca\'fd\'b5\'c4\'b7\'ba\'d0\'cd\'b0\'e6\'b1\'be
\f0  findIndex(ofString:in:)
\f2 \'a1\'a3\'c7\'eb\'d7\'a2\'d2\'e2\'d5\'e2\'b8\'f6\'ba\'af\'ca\'fd\'b7\'b5\'bb\'d8\'d6\'b5\'b5\'c4\'c0\'e0\'d0\'cd\'c8\'d4\'c8\'bb\'ca\'c7
\f0  Int?
\f2 \'a3\'ac\'d5\'e2\'ca\'c7\'d2\'f2\'ce\'aa\'ba\'af\'ca\'fd\'b7\'b5\'bb\'d8\'b5\'c4\'ca\'c7\'d2\'bb\'b8\'f6\'bf\'c9\'d1\'a1\'b5\'c4\'cb\'f7\'d2\'fd\'ca\'fd\'a3\'ac\'b6\'f8\'b2\'bb\'ca\'c7\'b4\'d3\'ca\'fd\'d7\'e9\'d6\'d0\'b5\'c3\'b5\'bd\'b5\'c4\'d2\'bb\'b8\'f6\'bf\'c9\'d1\'a1\'d6\'b5\'a1\'a3\'d0\'e8\'d2\'aa\'cc\'e1\'d0\'d1\'b5\'c4\'ca\'c7\'a3\'ac\'d5\'e2\'b8\'f6\'ba\'af\'ca\'fd\'ce\'de\'b7\'a8\'cd\'a8\'b9\'fd\'b1\'e0\'d2\'eb\'a3\'ac\'d4\'ad\'d2\'f2\'bb\'e1\'d4\'da\'c0\'fd\'d7\'d3\'ba\'f3\'c3\'e6\'cb\'b5\'c3\'f7\'a3\'ba
\f0 \cf4 \

\f1\b \cf5 func
\f0\b0 \cf4  \cf6 findIndex\cf4 <\cf8 T\cf4 : \cf7 Equatable\cf4 >(of valueToFind: \cf7 T\cf4 , in array: [\cf7 T\cf4 ]) -> \cf7 Int\cf4 ? \{\
    
\f1\b \cf5 for
\f0\b0 \cf4  (index, value) 
\f1\b \cf5 in
\f0\b0 \cf4  array.enumerated() \{\
        
\f1\b \cf5 if
\f0\b0 \cf4  value == valueToFind \{\
            
\f1\b \cf5 return
\f0\b0 \cf4  index\
        \}\
    \}\
    
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 nil
\f0\b0 \cf4 \
\}\
\
\cf2 //
\f2 \'c9\'cf\'c3\'e6\'cb\'f9\'d0\'b4\'b5\'c4\'ba\'af\'ca\'fd\'ce\'de\'b7\'a8\'cd\'a8\'b9\'fd\'b1\'e0\'d2\'eb\'a1\'a3\'ce\'ca\'cc\'e2\'b3\'f6\'d4\'da\'cf\'e0\'b5\'c8\'d0\'d4\'bc\'ec\'b2\'e9\'c9\'cf\'a3\'ac\'bc\'b4
\f0  "if value == valueToFind"
\f2 \'a1\'a3\'b2\'bb\'ca\'c7\'cb\'f9\'d3\'d0\'b5\'c4
\f0  Swift 
\f2 \'c0\'e0\'d0\'cd\'b6\'bc\'bf\'c9\'d2\'d4\'d3\'c3\'b5\'c8\'ca\'bd\'b7\'fb\'a3\'a8
\f0 ==
\f2 \'a3\'a9\'bd\'f8\'d0\'d0\'b1\'c8\'bd\'cf\'a1\'a3\'b1\'c8\'c8\'e7\'cb\'b5\'a3\'ac\'c8\'e7\'b9\'fb\'c4\'e3\'b4\'b4\'bd\'a8\'d2\'bb\'b8\'f6\'d7\'d4\'b6\'a8\'d2\'e5\'b5\'c4\'c0\'e0\'bb\'f2\'bd\'e1\'b9\'b9\'cc\'e5\'c0\'b4\'b1\'ed\'ca\'be\'d2\'bb\'b8\'f6\'b8\'b4\'d4\'d3\'b5\'c4\'ca\'fd\'be\'dd\'c4\'a3\'d0\'cd\'a3\'ac\'c4\'c7\'c3\'b4
\f0  Swift 
\f2 \'ce\'de\'b7\'a8\'b2\'c2\'b5\'bd\'b6\'d4\'d3\'da\'d5\'e2\'b8\'f6\'c0\'e0\'bb\'f2\'bd\'e1\'b9\'b9\'cc\'e5\'b6\'f8\'d1\'d4
\f0 \'93
\f2 \'cf\'e0\'b5\'c8
\f0 \'94
\f2 \'d2\'e2\'ce\'b6\'d7\'c5\'ca\'b2\'c3\'b4\'a1\'a3\'d5\'fd\'d2\'f2\'c8\'e7\'b4\'cb\'a3\'ac\'d5\'e2\'b2\'bf\'b7\'d6\'b4\'fa\'c2\'eb\'ce\'de\'b7\'a8\'b1\'a3\'d6\'a4\'ca\'ca\'d3\'c3\'d3\'da\'c3\'bf\'b8\'f6\'bf\'c9\'c4\'dc\'b5\'c4\'c0\'e0\'d0\'cd
\f0  T
\f2 \'a3\'ac\'b5\'b1\'c4\'e3\'ca\'d4\'cd\'bc\'b1\'e0\'d2\'eb\'d5\'e2\'b2\'bf\'b7\'d6\'b4\'fa\'c2\'eb\'ca\'b1\'bb\'e1\'b3\'f6\'cf\'d6\'cf\'e0\'d3\'a6\'b5\'c4\'b4\'ed\'ce\'f3\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'b2\'bb\'b9\'fd\'a3\'ac\'cb\'f9\'d3\'d0\'b5\'c4\'d5\'e2\'d0\'a9\'b2\'a2\'b2\'bb\'bb\'e1\'c8\'c3\'ce\'d2\'c3\'c7\'ce\'de\'b4\'d3\'cf\'c2\'ca\'d6\'a1\'a3
\f0 Swift 
\f2 \'b1\'ea\'d7\'bc\'bf\'e2\'d6\'d0\'b6\'a8\'d2\'e5\'c1\'cb\'d2\'bb\'b8\'f6
\f0  Equatable 
\f2 \'d0\'ad\'d2\'e9\'a3\'ac\'b8\'c3\'d0\'ad\'d2\'e9\'d2\'aa\'c7\'f3\'c8\'ce\'ba\'ce\'d7\'f1\'d1\'ad\'b8\'c3\'d0\'ad\'d2\'e9\'b5\'c4\'c0\'e0\'d0\'cd\'b1\'d8\'d0\'eb\'ca\'b5\'cf\'d6\'b5\'c8\'ca\'bd\'b7\'fb\'a3\'a8
\f0 ==
\f2 \'a3\'a9\'bc\'b0\'b2\'bb\'b5\'c8\'b7\'fb
\f0 (!=)
\f2 \'a3\'ac\'b4\'d3\'b6\'f8\'c4\'dc\'b6\'d4\'b8\'c3\'c0\'e0\'d0\'cd\'b5\'c4\'c8\'ce\'d2\'e2\'c1\'bd\'b8\'f6\'d6\'b5\'bd\'f8\'d0\'d0\'b1\'c8\'bd\'cf\'a1\'a3\'cb\'f9\'d3\'d0\'b5\'c4
\f0  Swift 
\f2 \'b1\'ea\'d7\'bc\'c0\'e0\'d0\'cd\'d7\'d4\'b6\'af\'d6\'a7\'b3\'d6
\f0  Equatable 
\f2 \'d0\'ad\'d2\'e9\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'c8\'ce\'ba\'ce
\f0  Equatable 
\f2 \'c0\'e0\'d0\'cd\'b6\'bc\'bf\'c9\'d2\'d4\'b0\'b2\'c8\'ab\'b5\'d8\'ca\'b9\'d3\'c3\'d4\'da
\f0  findIndex(of:in:) 
\f2 \'ba\'af\'ca\'fd\'d6\'d0\'a3\'ac\'d2\'f2\'ce\'aa\'c6\'e4\'b1\'a3\'d6\'a4\'d6\'a7\'b3\'d6\'b5\'c8\'ca\'bd\'b2\'d9\'d7\'f7\'b7\'fb\'a1\'a3\'ce\'aa\'c1\'cb\'cb\'b5\'c3\'f7\'d5\'e2\'b8\'f6\'ca\'c2\'ca\'b5\'a3\'ac\'b5\'b1\'c4\'e3\'b6\'a8\'d2\'e5\'d2\'bb\'b8\'f6\'ba\'af\'ca\'fd\'ca\'b1\'a3\'ac\'c4\'e3\'bf\'c9\'d2\'d4\'b6\'a8\'d2\'e5\'d2\'bb\'b8\'f6
\f0  Equatable 
\f2 \'c0\'e0\'d0\'cd\'d4\'bc\'ca\'f8\'d7\'f7\'ce\'aa\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'b6\'a8\'d2\'e5\'b5\'c4\'d2\'bb\'b2\'bf\'b7\'d6\'a3\'ba
\f0 \cf4 \
\
\cf2 //findIndex(of:in:) 
\f2 \'ce\'a8\'d2\'bb\'b5\'c4\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'d0\'b4\'d7\'f6
\f0  T: Equatable
\f2 \'a3\'ac\'d2\'b2\'be\'cd\'d2\'e2\'ce\'b6\'d7\'c5
\f0 \'93
\f2 \'c8\'ce\'ba\'ce\'b7\'fb\'ba\'cf
\f0  Equatable 
\f2 \'d0\'ad\'d2\'e9\'b5\'c4\'c0\'e0\'d0\'cd
\f0  T \'94
\f2 \'a1\'a3
\f0 \cf4 \
\
\
\cf2 //
\f2 \'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd
\f0 \cf4 \
\cf2 //
\f2 \'b6\'a8\'d2\'e5\'d2\'bb\'b8\'f6\'d0\'ad\'d2\'e9\'ca\'b1\'a3\'ac\'d3\'d0\'b5\'c4\'ca\'b1\'ba\'f2\'c9\'f9\'c3\'f7\'d2\'bb\'b8\'f6\'bb\'f2\'b6\'e0\'b8\'f6\'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd\'d7\'f7\'ce\'aa\'d0\'ad\'d2\'e9\'b6\'a8\'d2\'e5\'b5\'c4\'d2\'bb\'b2\'bf\'b7\'d6\'bd\'ab\'bb\'e1\'b7\'c7\'b3\'a3\'d3\'d0\'d3\'c3\'a1\'a3\'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd\'ce\'aa\'d0\'ad\'d2\'e9\'d6\'d0\'b5\'c4\'c4\'b3\'b8\'f6\'c0\'e0\'d0\'cd\'cc\'e1\'b9\'a9\'c1\'cb\'d2\'bb\'b8\'f6\'d5\'bc\'ce\'bb\'c3\'fb\'a3\'a8\'bb\'f2\'d5\'df\'cb\'b5\'b1\'f0\'c3\'fb\'a3\'a9\'a3\'ac\'c6\'e4\'b4\'fa\'b1\'ed\'b5\'c4\'ca\'b5\'bc\'ca\'c0\'e0\'d0\'cd\'d4\'da\'d0\'ad\'d2\'e9\'b1\'bb\'b2\'c9\'c4\'c9\'ca\'b1\'b2\'c5\'bb\'e1\'b1\'bb\'d6\'b8\'b6\'a8\'a1\'a3\'c4\'e3\'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd
\f0  associatedtype 
\f2 \'b9\'d8\'bc\'fc\'d7\'d6\'c0\'b4\'d6\'b8\'b6\'a8\'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd\'ca\'b5\'bc\'f9
\f0 \cf4 \
\cf2 //
\f2 \'cf\'c2\'c3\'e6\'c0\'fd\'d7\'d3\'b6\'a8\'d2\'e5\'c1\'cb\'d2\'bb\'b8\'f6
\f0  Container 
\f2 \'d0\'ad\'d2\'e9\'a3\'ac\'b8\'c3\'d0\'ad\'d2\'e9\'b6\'a8\'d2\'e5\'c1\'cb\'d2\'bb\'b8\'f6\'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd
\f0  ItemType
\f2 \'a3\'ba
\f0 \cf4 \

\f1\b \cf5 protocol
\f0\b0 \cf4  \cf8 Container\cf4  \{\
    
\f1\b \cf5 associatedtype
\f0\b0 \cf4  \cf8 ItemType\cf4 \
    
\f1\b \cf5 mutating
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf6 append\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  item: \cf7 ItemType\cf4 )\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf6 count\cf4 : \cf7 Int\cf4  \{ 
\f1\b \cf5 get
\f0\b0 \cf4  \}\
    
\f1\b \cf5 subscript
\f0\b0 \cf4 (i: \cf7 Int\cf4 ) -> \cf7 ItemType\cf4  \{ 
\f1\b \cf5 get
\f0\b0 \cf4  \}\
\}\
\
\cf2 //Container 
\f2 \'d0\'ad\'d2\'e9\'b6\'a8\'d2\'e5\'c1\'cb\'c8\'fd\'b8\'f6\'c8\'ce\'ba\'ce\'b2\'c9\'c4\'c9\'c1\'cb\'b8\'c3\'d0\'ad\'d2\'e9\'b5\'c4\'c0\'e0\'d0\'cd\'a3\'a8\'bc\'b4\'c8\'dd\'c6\'f7\'a3\'a9\'b1\'d8\'d0\'eb\'cc\'e1\'b9\'a9\'b5\'c4\'b9\'a6\'c4\'dc\'a3\'ba
\f0 \cf4 \
\
\cf2 //
\f2 \'b1\'d8\'d0\'eb\'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd
\f0  append(_:) 
\f2 \'b7\'bd\'b7\'a8\'cc\'ed\'bc\'d3\'d2\'bb\'b8\'f6\'d0\'c2\'d4\'aa\'cb\'d8\'b5\'bd\'c8\'dd\'c6\'f7\'c0\'ef\'a1\'a3
\f0 \cf4 \
\cf2 //
\f2 \'b1\'d8\'d0\'eb\'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd
\f0  count 
\f2 \'ca\'f4\'d0\'d4\'bb\'f1\'c8\'a1\'c8\'dd\'c6\'f7\'d6\'d0\'d4\'aa\'cb\'d8\'b5\'c4\'ca\'fd\'c1\'bf\'a3\'ac\'b2\'a2\'b7\'b5\'bb\'d8\'d2\'bb\'b8\'f6
\f0  Int 
\f2 \'d6\'b5\'a1\'a3
\f0 \cf4 \
\cf2 //
\f2 \'b1\'d8\'d0\'eb\'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd\'cb\'f7\'d2\'fd\'d6\'b5\'c0\'e0\'d0\'cd\'ce\'aa
\f0  Int 
\f2 \'b5\'c4\'cf\'c2\'b1\'ea\'bc\'ec\'cb\'f7\'b5\'bd\'c8\'dd\'c6\'f7\'d6\'d0\'b5\'c4\'c3\'bf\'d2\'bb\'b8\'f6\'d4\'aa\'cb\'d8\'a1\'a3
\f0 \cf4 \
\cf2 //
\f2 \'d5\'e2\'b8\'f6\'d0\'ad\'d2\'e9\'c3\'bb\'d3\'d0\'d6\'b8\'b6\'a8\'c8\'dd\'c6\'f7\'d6\'d0\'d4\'aa\'cb\'d8\'b8\'c3\'c8\'e7\'ba\'ce\'b4\'e6\'b4\'a2\'a3\'ac\'d2\'d4\'bc\'b0\'d4\'aa\'cb\'d8\'b1\'d8\'d0\'eb\'ca\'c7\'ba\'ce\'d6\'d6\'c0\'e0\'d0\'cd\'a1\'a3\'d5\'e2\'b8\'f6\'d0\'ad\'d2\'e9\'d6\'bb\'d6\'b8\'b6\'a8\'c1\'cb\'c8\'fd\'b8\'f6\'c8\'ce\'ba\'ce\'d7\'f1\'b4\'d3
\f0  Container 
\f2 \'d0\'ad\'d2\'e9\'b5\'c4\'c0\'e0\'d0\'cd\'b1\'d8\'d0\'eb\'cc\'e1\'b9\'a9\'b5\'c4\'b9\'a6\'c4\'dc\'a1\'a3\'d7\'f1\'b4\'d3\'d0\'ad\'d2\'e9\'b5\'c4\'c0\'e0\'d0\'cd\'d4\'da\'c2\'fa\'d7\'e3\'d5\'e2\'c8\'fd\'b8\'f6\'cc\'f5\'bc\'fe\'b5\'c4\'c7\'e9\'bf\'f6\'cf\'c2\'d2\'b2\'bf\'c9\'d2\'d4\'cc\'e1\'b9\'a9\'c6\'e4\'cb\'fb\'b6\'ee\'cd\'e2\'b5\'c4\'b9\'a6\'c4\'dc\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'c8\'ce\'ba\'ce\'d7\'f1\'b4\'d3
\f0  Container 
\f2 \'d0\'ad\'d2\'e9\'b5\'c4\'c0\'e0\'d0\'cd\'b1\'d8\'d0\'eb\'c4\'dc\'b9\'bb\'d6\'b8\'b6\'a8\'c6\'e4\'b4\'e6\'b4\'a2\'b5\'c4\'d4\'aa\'cb\'d8\'b5\'c4\'c0\'e0\'d0\'cd\'a3\'ac\'b1\'d8\'d0\'eb\'b1\'a3\'d6\'a4\'d6\'bb\'d3\'d0\'d5\'fd\'c8\'b7\'c0\'e0\'d0\'cd\'b5\'c4\'d4\'aa\'cb\'d8\'bf\'c9\'d2\'d4\'bc\'d3\'bd\'f8\'c8\'dd\'c6\'f7\'d6\'d0\'a3\'ac\'b1\'d8\'d0\'eb\'c3\'f7\'c8\'b7\'cd\'a8\'b9\'fd\'c6\'e4\'cf\'c2\'b1\'ea\'b7\'b5\'bb\'d8\'b5\'c4\'d4\'aa\'cb\'d8\'b5\'c4\'c0\'e0\'d0\'cd\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'ce\'aa\'c1\'cb\'b6\'a8\'d2\'e5\'d5\'e2\'c8\'fd\'b8\'f6\'cc\'f5\'bc\'fe\'a3\'ac
\f0 Container 
\f2 \'d0\'ad\'d2\'e9\'d0\'e8\'d2\'aa\'d4\'da\'b2\'bb\'d6\'aa\'b5\'c0\'c8\'dd\'c6\'f7\'d6\'d0\'d4\'aa\'cb\'d8\'b5\'c4\'be\'df\'cc\'e5\'c0\'e0\'d0\'cd\'b5\'c4\'c7\'e9\'bf\'f6\'cf\'c2\'d2\'fd\'d3\'c3\'d5\'e2\'d6\'d6\'c0\'e0\'d0\'cd\'a1\'a3
\f0 Container 
\f2 \'d0\'ad\'d2\'e9\'d0\'e8\'d2\'aa\'d6\'b8\'b6\'a8\'c8\'ce\'ba\'ce\'cd\'a8\'b9\'fd
\f0  append(_:) 
\f2 \'b7\'bd\'b7\'a8\'cc\'ed\'bc\'d3\'b5\'bd\'c8\'dd\'c6\'f7\'d6\'d0\'b5\'c4\'d4\'aa\'cb\'d8\'ba\'cd\'c8\'dd\'c6\'f7\'d6\'d0\'b5\'c4\'d4\'aa\'cb\'d8\'ca\'c7\'cf\'e0\'cd\'ac\'c0\'e0\'d0\'cd\'a3\'ac\'b2\'a2\'c7\'d2\'cd\'a8\'b9\'fd\'c8\'dd\'c6\'f7\'cf\'c2\'b1\'ea\'b7\'b5\'bb\'d8\'b5\'c4\'d4\'aa\'cb\'d8\'b5\'c4\'c0\'e0\'d0\'cd\'d2\'b2\'ca\'c7\'d5\'e2\'d6\'d6\'c0\'e0\'d0\'cd\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'ce\'aa\'c1\'cb\'b4\'ef\'b5\'bd\'d5\'e2\'b8\'f6\'c4\'bf\'b5\'c4\'a3\'ac
\f0 Container 
\f2 \'d0\'ad\'d2\'e9\'c9\'f9\'c3\'f7\'c1\'cb\'d2\'bb\'b8\'f6\'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd
\f0  ItemType
\f2 \'a3\'ac\'d0\'b4\'d7\'f7
\f0  associatedtype ItemType
\f2 \'a1\'a3\'d5\'e2\'b8\'f6\'d0\'ad\'d2\'e9\'ce\'de\'b7\'a8\'b6\'a8\'d2\'e5
\f0  ItemType 
\f2 \'ca\'c7\'ca\'b2\'c3\'b4\'c0\'e0\'d0\'cd\'b5\'c4\'b1\'f0\'c3\'fb\'a3\'ac\'d5\'e2\'b8\'f6\'d0\'c5\'cf\'a2\'bd\'ab\'c1\'f4\'b8\'f8\'d7\'f1\'b4\'d3\'d0\'ad\'d2\'e9\'b5\'c4\'c0\'e0\'d0\'cd\'c0\'b4\'cc\'e1\'b9\'a9\'a1\'a3\'be\'a1\'b9\'dc\'c8\'e7\'b4\'cb\'a3\'ac
\f0 ItemType 
\f2 \'b1\'f0\'c3\'fb\'cc\'e1\'b9\'a9\'c1\'cb\'d2\'bb\'d6\'d6\'b7\'bd\'ca\'bd\'c0\'b4\'d2\'fd\'d3\'c3
\f0  Container 
\f2 \'d6\'d0\'d4\'aa\'cb\'d8\'b5\'c4\'c0\'e0\'d0\'cd\'a3\'ac\'b2\'a2\'bd\'ab\'d6\'ae\'d3\'c3\'d3\'da
\f0  append(_:) 
\f2 \'b7\'bd\'b7\'a8\'ba\'cd\'cf\'c2\'b1\'ea\'a3\'ac\'b4\'d3\'b6\'f8\'b1\'a3\'d6\'a4\'c8\'ce\'ba\'ce
\f0  Container 
\f2 \'b5\'c4\'d0\'d0\'ce\'aa\'b6\'bc\'c4\'dc\'b9\'bb\'d5\'fd\'c8\'e7\'d4\'a4\'c6\'da\'b5\'d8\'b1\'bb\'d6\'b4\'d0\'d0\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'cf\'c2\'c3\'e6\'ca\'c7\'cf\'c8\'c7\'b0\'b5\'c4\'b7\'c7\'b7\'ba\'d0\'cd\'b5\'c4
\f0  IntStack 
\f2 \'c0\'e0\'d0\'cd\'a3\'ac\'d5\'e2\'d2\'bb\'b0\'e6\'b1\'be\'b2\'c9\'c4\'c9\'b2\'a2\'b7\'fb\'ba\'cf\'c1\'cb
\f0  Container 
\f2 \'d0\'ad\'d2\'e9\'a3\'ba
\f0 \cf4 \
\

\f1\b \cf5 struct
\f0\b0 \cf4  \cf8 IntStackA\cf4 : \cf7 Container\cf4  \{\
    \cf2 // IntStack 
\f2 \'b5\'c4\'d4\'ad\'ca\'bc\'ca\'b5\'cf\'d6\'b2\'bf\'b7\'d6
\f0 \cf4 \
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf6 items\cf4  = [Int]()\
    
\f1\b \cf5 mutating
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf6 push\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  item: \cf7 Int\cf4 ) \{\
        items.append(item)\
    \}\
    
\f1\b \cf5 mutating
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf6 pop\cf4 () -> \cf7 Int\cf4  \{\
        
\f1\b \cf5 return
\f0\b0 \cf4  items.removeLast()\
    \}\
    \cf2 // Container 
\f2 \'d0\'ad\'d2\'e9\'b5\'c4\'ca\'b5\'cf\'d6\'b2\'bf\'b7\'d6
\f0 \cf4 \
    
\f1\b \cf5 typealias
\f0\b0 \cf4  \cf8 ItemType\cf4  = \cf7 Int\cf4 \
    
\f1\b \cf5 mutating
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf6 append\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  item: \cf7 Int\cf4 ) \{\
        
\f1\b \cf5 self
\f0\b0 \cf4 .push(item)\
    \}\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf6 count\cf4 : \cf7 Int\cf4  \{\
        
\f1\b \cf5 return
\f0\b0 \cf4  items.count\
    \}\
    
\f1\b \cf5 subscript
\f0\b0 \cf4 (i: \cf7 Int\cf4 ) -> \cf7 Int\cf4  \{\
        
\f1\b \cf5 return
\f0\b0 \cf4  items[i]\
    \}\
\}\
\cf2 //IntStackA 
\f2 \'bd\'e1\'b9\'b9\'cc\'e5\'ca\'b5\'cf\'d6\'c1\'cb
\f0  Container 
\f2 \'d0\'ad\'d2\'e9\'b5\'c4\'c8\'fd\'b8\'f6\'d2\'aa\'c7\'f3\'a3\'ac\'c6\'e4\'d4\'ad\'d3\'d0\'b9\'a6\'c4\'dc\'d2\'b2\'b2\'bb\'bb\'e1\'ba\'cd\'d5\'e2\'d0\'a9\'d2\'aa\'c7\'f3\'cf\'e0\'b3\'e5\'cd\'bb\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'b4\'cb\'cd\'e2\'a3\'ac
\f0 IntStackA 
\f2 \'d4\'da\'ca\'b5\'cf\'d6
\f0  Container 
\f2 \'b5\'c4\'d2\'aa\'c7\'f3\'ca\'b1\'a3\'ac\'d6\'b8\'b6\'a8
\f0  ItemType 
\f2 \'ce\'aa
\f0  Int 
\f2 \'c0\'e0\'d0\'cd\'a3\'ac\'bc\'b4
\f0  typealias ItemType = Int
\f2 \'a3\'ac\'b4\'d3\'b6\'f8\'bd\'ab
\f0  Container 
\f2 \'d0\'ad\'d2\'e9\'d6\'d0\'b3\'e9\'cf\'f3\'b5\'c4
\f0  ItemType 
\f2 \'c0\'e0\'d0\'cd\'d7\'aa\'bb\'bb\'ce\'aa\'be\'df\'cc\'e5\'b5\'c4
\f0  Int 
\f2 \'c0\'e0\'d0\'cd\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'d3\'c9\'d3\'da
\f0  Swift 
\f2 \'b5\'c4\'c0\'e0\'d0\'cd\'cd\'c6\'b6\'cf\'a3\'ac\'c4\'e3\'ca\'b5\'bc\'ca\'c9\'cf\'b2\'bb\'d3\'c3\'d4\'da
\f0  IntStack 
\f2 \'b5\'c4\'b6\'a8\'d2\'e5\'d6\'d0\'c9\'f9\'c3\'f7
\f0  ItemType 
\f2 \'ce\'aa
\f0  Int
\f2 \'a1\'a3\'d2\'f2\'ce\'aa
\f0  IntStack 
\f2 \'b7\'fb\'ba\'cf
\f0  Container 
\f2 \'d0\'ad\'d2\'e9\'b5\'c4\'cb\'f9\'d3\'d0\'d2\'aa\'c7\'f3\'a3\'ac
\f0 Swift 
\f2 \'d6\'bb\'d0\'e8\'cd\'a8\'b9\'fd
\f0  append(_:) 
\f2 \'b7\'bd\'b7\'a8\'b5\'c4
\f0  item 
\f2 \'b2\'ce\'ca\'fd\'c0\'e0\'d0\'cd\'ba\'cd\'cf\'c2\'b1\'ea\'b7\'b5\'bb\'d8\'d6\'b5\'b5\'c4\'c0\'e0\'d0\'cd\'a3\'ac\'be\'cd\'bf\'c9\'d2\'d4\'cd\'c6\'b6\'cf\'b3\'f6
\f0  ItemType 
\f2 \'b5\'c4\'be\'df\'cc\'e5\'c0\'e0\'d0\'cd\'a1\'a3\'ca\'c2\'ca\'b5\'c9\'cf\'a3\'ac\'c8\'e7\'b9\'fb\'c4\'e3\'d4\'da\'c9\'cf\'c3\'e6\'b5\'c4\'b4\'fa\'c2\'eb\'d6\'d0\'c9\'be\'b3\'fd\'c1\'cb
\f0  typealias ItemType = Int 
\f2 \'d5\'e2\'d2\'bb\'d0\'d0\'a3\'ac\'d2\'bb\'c7\'d0\'c8\'d4\'be\'c9\'bf\'c9\'d2\'d4\'d5\'fd\'b3\'a3\'b9\'a4\'d7\'f7\'a3\'ac\'d2\'f2\'ce\'aa
\f0  Swift 
\f2 \'c7\'e5\'b3\'fe\'b5\'d8\'d6\'aa\'b5\'c0
\f0  ItemType 
\f2 \'d3\'a6\'b8\'c3\'ca\'c7\'c4\'c4\'d6\'d6\'c0\'e0\'d0\'cd\'a1\'a3
\f0 \cf4 \
\

\f1\b \cf5 struct
\f0\b0 \cf4  \cf8 StackA\cf4 <\cf8 Element\cf4 >: \cf7 Container\cf4  \{\
    \cf2 // Stack<Element> 
\f2 \'b5\'c4\'d4\'ad\'ca\'bc\'ca\'b5\'cf\'d6\'b2\'bf\'b7\'d6
\f0 \cf4 \
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf6 items\cf4  = [Element]()\
    
\f1\b \cf5 mutating
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf6 push\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  item: \cf7 Element\cf4 ) \{\
        items.append(item)\
    \}\
    
\f1\b \cf5 mutating
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf6 pop\cf4 () -> \cf7 Element\cf4  \{\
        
\f1\b \cf5 return
\f0\b0 \cf4  items.removeLast()\
    \}\
    \
    \cf2 // Container 
\f2 \'d0\'ad\'d2\'e9\'b5\'c4\'ca\'b5\'cf\'d6\'b2\'bf\'b7\'d6
\f0 \cf4 \
    
\f1\b \cf5 mutating
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf6 append\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  item: \cf7 Element\cf4 ) \{\
        
\f1\b \cf5 self
\f0\b0 \cf4 .push(item)\
    \}\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf6 count\cf4 : \cf7 Int\cf4  \{\
        
\f1\b \cf5 return
\f0\b0 \cf4  items.count\
    \}\
    
\f1\b \cf5 subscript
\f0\b0 \cf4 (i: \cf7 Int\cf4 ) -> \cf7 Element\cf4  \{\
        
\f1\b \cf5 return
\f0\b0 \cf4  items[i]\
    \}\
\}\
\
\cf2 //
\f2 \'d5\'e2\'d2\'bb\'b4\'ce\'a3\'ac\'d5\'bc\'ce\'bb\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd
\f0  Element 
\f2 \'b1\'bb\'d3\'c3\'d7\'f7
\f0  append(_:) 
\f2 \'b7\'bd\'b7\'a8\'b5\'c4
\f0  item 
\f2 \'b2\'ce\'ca\'fd\'ba\'cd\'cf\'c2\'b1\'ea\'b5\'c4\'b7\'b5\'bb\'d8\'c0\'e0\'d0\'cd\'a1\'a3
\f0 Swift 
\f2 \'bf\'c9\'d2\'d4\'be\'dd\'b4\'cb\'cd\'c6\'b6\'cf\'b3\'f6
\f0  Element 
\f2 \'b5\'c4\'c0\'e0\'d0\'cd\'bc\'b4\'ca\'c7
\f0  ItemType 
\f2 \'b5\'c4\'c0\'e0\'d0\'cd\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'cd\'a8\'b9\'fd\'c0\'a9\'d5\'b9\'d2\'bb\'b8\'f6\'b4\'e6\'d4\'da\'b5\'c4\'c0\'e0\'d0\'cd\'c0\'b4\'d6\'b8\'b6\'a8\'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd
\f0 \cf4 \
\
\cf2 //
\f2 \'cd\'a8\'b9\'fd\'c0\'a9\'d5\'b9\'cc\'ed\'bc\'d3\'d0\'ad\'d2\'e9\'d2\'bb\'d6\'c2\'d0\'d4\'d6\'d0\'c3\'e8\'ca\'f6\'c1\'cb\'c8\'e7\'ba\'ce\'c0\'fb\'d3\'c3\'c0\'a9\'d5\'b9\'c8\'c3\'d2\'bb\'b8\'f6\'d2\'d1\'b4\'e6\'d4\'da\'b5\'c4\'c0\'e0\'d0\'cd\'b7\'fb\'ba\'cf\'d2\'bb\'b8\'f6\'d0\'ad\'d2\'e9\'a3\'ac\'d5\'e2\'b0\'fc\'c0\'a8\'ca\'b9\'d3\'c3\'c1\'cb\'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd\'b5\'c4\'d0\'ad\'d2\'e9\'a1\'a3
\f0 \cf4 \
\
\cf2 //Swift 
\f2 \'b5\'c4
\f0  Array 
\f2 \'c0\'e0\'d0\'cd\'d2\'d1\'be\'ad\'cc\'e1\'b9\'a9
\f0  append(_:) 
\f2 \'b7\'bd\'b7\'a8\'a3\'ac\'d2\'bb\'b8\'f6
\f0  count 
\f2 \'ca\'f4\'d0\'d4\'a3\'ac\'d2\'d4\'bc\'b0\'d2\'bb\'b8\'f6\'bd\'d3\'ca\'dc
\f0  Int 
\f2 \'c0\'e0\'d0\'cd\'cb\'f7\'d2\'fd\'d6\'b5\'b5\'c4\'cf\'c2\'b1\'ea\'d3\'c3\'d2\'d4\'bc\'ec\'cb\'f7\'c6\'e4\'d4\'aa\'cb\'d8\'a1\'a3\'d5\'e2\'c8\'fd\'b8\'f6\'b9\'a6\'c4\'dc\'b6\'bc\'b7\'fb\'ba\'cf
\f0  Container 
\f2 \'d0\'ad\'d2\'e9\'b5\'c4\'d2\'aa\'c7\'f3\'a3\'ac\'d2\'b2\'be\'cd\'d2\'e2\'ce\'b6\'d7\'c5\'c4\'e3\'d6\'bb\'d0\'e8\'bc\'f2\'b5\'a5\'b5\'d8\'c9\'f9\'c3\'f7
\f0  Array 
\f2 \'b2\'c9\'c4\'c9\'b8\'c3\'d0\'ad\'d2\'e9\'be\'cd\'bf\'c9\'d2\'d4\'c0\'a9\'d5\'b9
\f0  Array
\f2 \'a3\'ac\'ca\'b9\'c6\'e4\'d7\'f1\'b4\'d3
\f0  Container 
\f2 \'d0\'ad\'d2\'e9\'a1\'a3\'c4\'e3\'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd\'d2\'bb\'b8\'f6\'bf\'d5\'c0\'a9\'d5\'b9\'c0\'b4\'ca\'b5\'cf\'d6\'d5\'e2\'b5\'e3\'a3\'ac\'d5\'fd\'c8\'e7\'cd\'a8\'b9\'fd\'c0\'a9\'d5\'b9\'b2\'c9\'c4\'c9\'d0\'ad\'d2\'e9\'d6\'d0\'b5\'c4\'c3\'e8\'ca\'f6\'a3\'ba
\f0 \cf4 \
\

\f1\b \cf5 extension
\f0\b0 \cf4  \cf7 Array\cf4 : \cf7 Container\cf4  \{\}\
\
\cf2 //
\f2 \'c8\'e7\'cd\'ac\'c9\'cf\'c3\'e6\'b5\'c4\'b7\'ba\'d0\'cd
\f0  Stack 
\f2 \'bd\'e1\'b9\'b9\'cc\'e5\'d2\'bb\'d1\'f9\'a3\'ac
\f0 Array 
\f2 \'b5\'c4
\f0  append(_:) 
\f2 \'b7\'bd\'b7\'a8\'ba\'cd\'cf\'c2\'b1\'ea\'c8\'b7\'b1\'a3\'c1\'cb
\f0  Swift 
\f2 \'bf\'c9\'d2\'d4\'cd\'c6\'b6\'cf\'b3\'f6
\f0  ItemType 
\f2 \'b5\'c4\'c0\'e0\'d0\'cd\'a1\'a3\'b6\'a8\'d2\'e5\'c1\'cb\'d5\'e2\'b8\'f6\'c0\'a9\'d5\'b9\'ba\'f3\'a3\'ac\'c4\'e3\'bf\'c9\'d2\'d4\'bd\'ab\'c8\'ce\'d2\'e2
\f0  Array 
\f2 \'b5\'b1\'d7\'f7
\f0  Container 
\f2 \'c0\'b4\'ca\'b9\'d3\'c3\'a1\'a3
\f0 \cf4 \
\
\
\cf2 //
\f2 \'d4\'bc\'ca\'f8\'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd
\f0 \cf4 \
\cf2 //
\f2 \'c4\'e3\'bf\'c9\'d2\'d4\'b8\'f8\'d0\'ad\'d2\'e9\'c0\'ef\'b5\'c4\'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd\'cc\'ed\'bc\'d3\'c0\'e0\'d0\'cd\'d7\'a2\'ca\'cd\'a3\'ac\'c8\'c3\'d7\'f1\'ca\'d8\'d0\'ad\'d2\'e9\'b5\'c4\'c0\'e0\'d0\'cd\'b1\'d8\'d0\'eb\'d7\'f1\'d1\'ad\'d5\'e2\'b8\'f6\'d4\'bc\'ca\'f8\'cc\'f5\'bc\'fe\'a1\'a3\'c0\'fd\'c8\'e7\'a3\'ac\'cf\'c2\'c3\'e6\'b5\'c4\'b4\'fa\'c2\'eb\'b6\'a8\'d2\'e5\'c1\'cb\'d2\'bb\'b8\'f6
\f0  Item 
\f2 \'b1\'d8\'d0\'eb\'d7\'f1\'d1\'ad
\f0  Equatable 
\f2 \'b5\'c4
\f0  Container 
\f2 \'c0\'e0\'d0\'cd\'a3\'ba
\f0 \cf4 \

\f1\b \cf5 protocol
\f0\b0 \cf4  \cf8 ContainerB\cf4  \{\
    
\f1\b \cf5 associatedtype
\f0\b0 \cf4  \cf8 ItemType\cf4 : \cf7 Equatable\cf4 \
    
\f1\b \cf5 mutating
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf6 append\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  item: \cf7 ItemType\cf4 )\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf6 count\cf4 : \cf7 Int\cf4  \{ 
\f1\b \cf5 get
\f0\b0 \cf4  \}\
    
\f1\b \cf5 subscript
\f0\b0 \cf4 (i: \cf7 Int\cf4 ) -> \cf7 ItemType\cf4  \{ 
\f1\b \cf5 get
\f0\b0 \cf4  \}\
\}\
\
\cf2 //
\f2 \'ce\'aa\'c1\'cb\'d7\'f1\'ca\'d8\'c1\'cb
\f0  Container 
\f2 \'d0\'ad\'d2\'e9\'a3\'ac
\f0 ItemType 
\f2 \'c0\'e0\'d0\'cd\'d2\'b2\'b1\'d8\'d0\'eb\'d7\'f1\'ca\'d8
\f0  Equatable 
\f2 \'d0\'ad\'d2\'e9\'a1\'a3
\f0 \cf4 \
\
\
\
\cf2 //
\f2 \'b7\'ba\'d0\'cd
\f0  where 
\f2 \'d3\'ef\'be\'e4
\f0 \cf4 \
\cf2 //
\f2 \'c0\'e0\'d0\'cd\'d4\'bc\'ca\'f8\'c8\'c3\'c4\'e3\'c4\'dc\'b9\'bb\'ce\'aa\'b7\'ba\'d0\'cd\'ba\'af\'ca\'fd\'a3\'ac\'cf\'c2\'b1\'ea\'a3\'ac\'c0\'e0\'d0\'cd\'b5\'c4\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'b6\'a8\'d2\'e5\'d2\'bb\'d0\'a9\'c7\'bf\'d6\'c6\'d2\'aa\'c7\'f3\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'ce\'aa\'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd\'b6\'a8\'d2\'e5\'d4\'bc\'ca\'f8\'d2\'b2\'ca\'c7\'b7\'c7\'b3\'a3\'d3\'d0\'d3\'c3\'b5\'c4\'a1\'a3\'c4\'e3\'bf\'c9\'d2\'d4\'d4\'da\'b2\'ce\'ca\'fd\'c1\'d0\'b1\'ed\'d6\'d0\'cd\'a8\'b9\'fd
\f0  where 
\f2 \'d7\'d3\'be\'e4\'ce\'aa\'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd\'b6\'a8\'d2\'e5\'d4\'bc\'ca\'f8\'a1\'a3\'c4\'e3\'c4\'dc\'cd\'a8\'b9\'fd
\f0  where 
\f2 \'d7\'d3\'be\'e4\'d2\'aa\'c7\'f3\'d2\'bb\'b8\'f6\'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd\'d7\'f1\'b4\'d3\'c4\'b3\'b8\'f6\'cc\'d8\'b6\'a8\'b5\'c4\'d0\'ad\'d2\'e9\'a3\'ac\'d2\'d4\'bc\'b0\'c4\'b3\'b8\'f6\'cc\'d8\'b6\'a8\'b5\'c4\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'ba\'cd\'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd\'b1\'d8\'d0\'eb\'c0\'e0\'d0\'cd\'cf\'e0\'cd\'ac\'a1\'a3\'c4\'e3\'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd\'bd\'ab
\f0  where 
\f2 \'b9\'d8\'bc\'fc\'d7\'d6\'bd\'f4\'b8\'fa\'d4\'da\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'c1\'d0\'b1\'ed\'ba\'f3\'c3\'e6\'c0\'b4\'b6\'a8\'d2\'e5
\f0  where 
\f2 \'d7\'d3\'be\'e4\'a3\'ac
\f0 where 
\f2 \'d7\'d3\'be\'e4\'ba\'f3\'b8\'fa\'d2\'bb\'b8\'f6\'bb\'f2\'d5\'df\'b6\'e0\'b8\'f6\'d5\'eb\'b6\'d4\'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd\'b5\'c4\'d4\'bc\'ca\'f8\'a3\'ac\'d2\'d4\'bc\'b0\'d2\'bb\'b8\'f6\'bb\'f2\'b6\'e0\'b8\'f6\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'ba\'cd\'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd\'bc\'e4\'b5\'c4\'cf\'e0\'b5\'c8\'b9\'d8\'cf\'b5\'a1\'a3\'c4\'e3\'bf\'c9\'d2\'d4\'d4\'da\'ba\'af\'ca\'fd\'cc\'e5\'bb\'f2\'d5\'df\'c0\'e0\'d0\'cd\'b5\'c4\'b4\'f3\'c0\'a8\'ba\'c5\'d6\'ae\'c7\'b0\'cc\'ed\'bc\'d3
\f0  where 
\f2 \'d7\'d3\'be\'e4\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'cf\'c2\'c3\'e6\'b5\'c4\'c0\'fd\'d7\'d3\'b6\'a8\'d2\'e5\'c1\'cb\'d2\'bb\'b8\'f6\'c3\'fb\'ce\'aa
\f0  allItemsMatch 
\f2 \'b5\'c4\'b7\'ba\'d0\'cd\'ba\'af\'ca\'fd\'a3\'ac\'d3\'c3\'c0\'b4\'bc\'ec\'b2\'e9\'c1\'bd\'b8\'f6
\f0  Container 
\f2 \'ca\'b5\'c0\'fd\'ca\'c7\'b7\'f1\'b0\'fc\'ba\'ac\'cf\'e0\'cd\'ac\'cb\'b3\'d0\'f2\'b5\'c4\'cf\'e0\'cd\'ac\'d4\'aa\'cb\'d8\'a1\'a3\'c8\'e7\'b9\'fb\'cb\'f9\'d3\'d0\'b5\'c4\'d4\'aa\'cb\'d8\'c4\'dc\'b9\'bb\'c6\'a5\'c5\'e4\'a3\'ac\'c4\'c7\'c3\'b4\'b7\'b5\'bb\'d8
\f0  true
\f2 \'a3\'ac\'b7\'f1\'d4\'f2\'b7\'b5\'bb\'d8
\f0  false
\f2 \'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'b1\'bb\'bc\'ec\'b2\'e9\'b5\'c4\'c1\'bd\'b8\'f6
\f0  Container 
\f2 \'bf\'c9\'d2\'d4\'b2\'bb\'ca\'c7\'cf\'e0\'cd\'ac\'c0\'e0\'d0\'cd\'b5\'c4\'c8\'dd\'c6\'f7\'a3\'a8\'cb\'e4\'c8\'bb\'cb\'fc\'c3\'c7\'bf\'c9\'d2\'d4\'cf\'e0\'cd\'ac\'a3\'a9\'a3\'ac\'b5\'ab\'cb\'fc\'c3\'c7\'b1\'d8\'d0\'eb\'d3\'b5\'d3\'d0\'cf\'e0\'cd\'ac\'c0\'e0\'d0\'cd\'b5\'c4\'d4\'aa\'cb\'d8\'a1\'a3\'d5\'e2\'b8\'f6\'d2\'aa\'c7\'f3\'cd\'a8\'b9\'fd\'d2\'bb\'b8\'f6\'c0\'e0\'d0\'cd\'d4\'bc\'ca\'f8\'d2\'d4\'bc\'b0\'d2\'bb\'b8\'f6
\f0  where 
\f2 \'d7\'d3\'be\'e4\'c0\'b4\'b1\'ed\'ca\'be\'a3\'ba
\f0 \cf4 \

\f1\b \cf5 func
\f0\b0 \cf4  \cf6 allItemsMatch\cf4 <\cf8 C1\cf4 : \cf7 Container\cf4 , \cf8 C2\cf4 : \cf7 Container\cf4 >(
\f1\b \cf5 _
\f0\b0 \cf4  someContainer: \cf7 C1\cf4 , 
\f1\b \cf5 _
\f0\b0 \cf4  anotherContainer: \cf7 C2\cf4 ) -> \cf7 Bool\cf4  
\f1\b \cf5 where
\f0\b0 \cf4  \cf7 C1\cf4 .\cf7 ItemType\cf4  == \cf7 C2\cf4 .\cf7 ItemType\cf4 , \cf7 C1\cf4 .\cf7 ItemType\cf4 : \cf7 Equatable\cf4  \{\
    \cf2 // 
\f2 \'bc\'ec\'b2\'e9\'c1\'bd\'b8\'f6\'c8\'dd\'c6\'f7\'ba\'ac\'d3\'d0\'cf\'e0\'cd\'ac\'ca\'fd\'c1\'bf\'b5\'c4\'d4\'aa\'cb\'d8
\f0 \cf4 \
    
\f1\b \cf5 if
\f0\b0 \cf4  someContainer.count != anotherContainer.count \{\
        
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 false
\f0\b0 \cf4 \
    \}\
    \
    \cf2 // 
\f2 \'bc\'ec\'b2\'e9\'c3\'bf\'d2\'bb\'b6\'d4\'d4\'aa\'cb\'d8\'ca\'c7\'b7\'f1\'cf\'e0\'b5\'c8
\f0 \cf4 \
    
\f1\b \cf5 for
\f0\b0 \cf4  i 
\f1\b \cf5 in
\f0\b0 \cf4  \cf9 0\cf4 ..<someContainer.count \{\
        
\f1\b \cf5 if
\f0\b0 \cf4  someContainer[i] != anotherContainer[i] \{\
            
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 false
\f0\b0 \cf4 \
        \}\
    \}\
    \
    \cf2 // 
\f2 \'cb\'f9\'d3\'d0\'d4\'aa\'cb\'d8\'b6\'bc\'c6\'a5\'c5\'e4\'a3\'ac\'b7\'b5\'bb\'d8
\f0  true\cf4 \
    
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 true
\f0\b0 \cf4 \
\}\
\
\cf2 //
\f2 \'d5\'e2\'b8\'f6\'ba\'af\'ca\'fd\'bd\'d3\'ca\'dc
\f0  someContainer 
\f2 \'ba\'cd
\f0  anotherContainer 
\f2 \'c1\'bd\'b8\'f6\'b2\'ce\'ca\'fd\'a1\'a3\'b2\'ce\'ca\'fd
\f0  someContainer 
\f2 \'b5\'c4\'c0\'e0\'d0\'cd\'ce\'aa
\f0  C1
\f2 \'a3\'ac\'b2\'ce\'ca\'fd
\f0  anotherContainer 
\f2 \'b5\'c4\'c0\'e0\'d0\'cd\'ce\'aa
\f0  C2
\f2 \'a1\'a3
\f0 C1 
\f2 \'ba\'cd
\f0  C2 
\f2 \'ca\'c7\'c8\'dd\'c6\'f7\'b5\'c4\'c1\'bd\'b8\'f6\'d5\'bc\'ce\'bb\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'a3\'ac\'ba\'af\'ca\'fd\'b1\'bb\'b5\'f7\'d3\'c3\'ca\'b1\'b2\'c5\'c4\'dc\'c8\'b7\'b6\'a8\'cb\'fc\'c3\'c7\'b5\'c4\'be\'df\'cc\'e5\'c0\'e0\'d0\'cd\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'d5\'e2\'b8\'f6\'ba\'af\'ca\'fd\'b5\'c4\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'c1\'d0\'b1\'ed\'bb\'b9\'b6\'a8\'d2\'e5\'c1\'cb\'b6\'d4\'c1\'bd\'b8\'f6\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'b5\'c4\'d2\'aa\'c7\'f3\'a3\'ba
\f0 \cf4 \
\
\cf2 //C1 
\f2 \'b1\'d8\'d0\'eb\'b7\'fb\'ba\'cf
\f0  Container 
\f2 \'d0\'ad\'d2\'e9\'a3\'a8\'d0\'b4\'d7\'f7
\f0  C1: ContainerB
\f2 \'a3\'a9\'a1\'a3
\f0 \cf4 \
\cf2 //C2 
\f2 \'b1\'d8\'d0\'eb\'b7\'fb\'ba\'cf
\f0  Container 
\f2 \'d0\'ad\'d2\'e9\'a3\'a8\'d0\'b4\'d7\'f7
\f0  C2: ContainerB
\f2 \'a3\'a9\'a1\'a3
\f0 \cf4 \
\cf2 //C1 
\f2 \'b5\'c4
\f0  ItemType 
\f2 \'b1\'d8\'d0\'eb\'ba\'cd
\f0  C2 
\f2 \'b5\'c4
\f0  ItemType
\f2 \'c0\'e0\'d0\'cd\'cf\'e0\'cd\'ac\'a3\'a8\'d0\'b4\'d7\'f7
\f0  C1.ItemType == C2.ItemType
\f2 \'a3\'a9\'a1\'a3
\f0 \cf4 \
\cf2 //C1 
\f2 \'b5\'c4
\f0  ItemType 
\f2 \'b1\'d8\'d0\'eb\'b7\'fb\'ba\'cf
\f0  Equatable 
\f2 \'d0\'ad\'d2\'e9\'a3\'a8\'d0\'b4\'d7\'f7
\f0  C1.ItemType: Equatable
\f2 \'a3\'a9\'a1\'a3
\f0 \cf4 \
\cf2 //
\f2 \'b5\'da\'c8\'fd\'b8\'f6\'ba\'cd\'b5\'da\'cb\'c4\'b8\'f6\'d2\'aa\'c7\'f3\'b1\'bb\'b6\'a8\'d2\'e5\'ce\'aa\'d2\'bb\'b8\'f6
\f0  where 
\f2 \'d7\'d3\'be\'e4\'a3\'ac\'d0\'b4\'d4\'da\'b9\'d8\'bc\'fc\'d7\'d6
\f0  where 
\f2 \'ba\'f3\'c3\'e6\'a3\'ac\'cb\'fc\'c3\'c7\'d2\'b2\'ca\'c7\'b7\'ba\'d0\'cd\'ba\'af\'ca\'fd\'c0\'e0\'d0\'cd\'b2\'ce\'ca\'fd\'c1\'d0\'b1\'ed\'b5\'c4\'d2\'bb\'b2\'bf\'b7\'d6\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'d5\'e2\'d0\'a9\'d2\'aa\'c7\'f3\'d2\'e2\'ce\'b6\'d7\'c5\'a3\'ba
\f0 \cf4 \
\cf2 //someContainer 
\f2 \'ca\'c7\'d2\'bb\'b8\'f6
\f0  C1 
\f2 \'c0\'e0\'d0\'cd\'b5\'c4\'c8\'dd\'c6\'f7\'a1\'a3
\f0 \cf4 \
\cf2 //anotherContainer 
\f2 \'ca\'c7\'d2\'bb\'b8\'f6
\f0  C2 
\f2 \'c0\'e0\'d0\'cd\'b5\'c4\'c8\'dd\'c6\'f7\'a1\'a3
\f0 \cf4 \
\cf2 //someContainer 
\f2 \'ba\'cd
\f0  anotherContainer 
\f2 \'b0\'fc\'ba\'ac\'cf\'e0\'cd\'ac\'c0\'e0\'d0\'cd\'b5\'c4\'d4\'aa\'cb\'d8\'a1\'a3
\f0 \cf4 \
\cf2 //someContainer 
\f2 \'d6\'d0\'b5\'c4\'d4\'aa\'cb\'d8\'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd\'b2\'bb\'b5\'c8\'d3\'da\'b2\'d9\'d7\'f7\'b7\'fb\'a3\'a8
\f0 !=
\f2 \'a3\'a9\'c0\'b4\'bc\'ec\'b2\'e9\'cb\'fc\'c3\'c7\'ca\'c7\'b7\'f1\'b1\'cb\'b4\'cb\'b2\'bb\'cd\'ac\'a1\'a3
\f0 \cf4 \
\cf2 //
\f2 \'b5\'da\'c8\'fd\'b8\'f6\'ba\'cd\'b5\'da\'cb\'c4\'b8\'f6\'d2\'aa\'c7\'f3\'bd\'e1\'ba\'cf\'c6\'f0\'c0\'b4\'d2\'e2\'ce\'b6\'d7\'c5
\f0  anotherContainer 
\f2 \'d6\'d0\'b5\'c4\'d4\'aa\'cb\'d8\'d2\'b2\'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd
\f0  != 
\f2 \'b2\'d9\'d7\'f7\'b7\'fb\'c0\'b4\'b1\'c8\'bd\'cf\'a3\'ac\'d2\'f2\'ce\'aa\'cb\'fc\'c3\'c7\'ba\'cd
\f0  someContainer 
\f2 \'d6\'d0\'b5\'c4\'d4\'aa\'cb\'d8\'c0\'e0\'d0\'cd\'cf\'e0\'cd\'ac\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'d5\'e2\'d0\'a9\'d2\'aa\'c7\'f3\'c8\'c3
\f0  allItemsMatch(_:_:) 
\f2 \'ba\'af\'ca\'fd\'c4\'dc\'b9\'bb\'b1\'c8\'bd\'cf\'c1\'bd\'b8\'f6\'c8\'dd\'c6\'f7\'a3\'ac\'bc\'b4\'ca\'b9\'cb\'fc\'c3\'c7\'b5\'c4\'c8\'dd\'c6\'f7\'c0\'e0\'d0\'cd\'b2\'bb\'cd\'ac\'a1\'a3
\f0 \cf4 \
\
\cf2 //allItemsMatch(_:_:) 
\f2 \'ba\'af\'ca\'fd\'ca\'d7\'cf\'c8\'bc\'ec\'b2\'e9\'c1\'bd\'b8\'f6\'c8\'dd\'c6\'f7\'ca\'c7\'b7\'f1\'d3\'b5\'d3\'d0\'cf\'e0\'cd\'ac\'ca\'fd\'c1\'bf\'b5\'c4\'d4\'aa\'cb\'d8\'a3\'ac\'c8\'e7\'b9\'fb\'cb\'fc\'c3\'c7\'b5\'c4\'d4\'aa\'cb\'d8\'ca\'fd\'c1\'bf\'b2\'bb\'cd\'ac\'a3\'ac\'c4\'c7\'c3\'b4\'d2\'bb\'b6\'a8\'b2\'bb\'c6\'a5\'c5\'e4\'a3\'ac\'ba\'af\'ca\'fd\'be\'cd\'bb\'e1\'b7\'b5\'bb\'d8
\f0  false
\f2 \'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'bd\'f8\'d0\'d0\'d5\'e2\'cf\'ee\'bc\'ec\'b2\'e9\'d6\'ae\'ba\'f3\'a3\'ac\'cd\'a8\'b9\'fd
\f0  for-in 
\f2 \'d1\'ad\'bb\'b7\'ba\'cd\'b0\'eb\'b1\'d5\'c7\'f8\'bc\'e4\'b2\'d9\'d7\'f7\'b7\'fb\'a3\'a8
\f0 ..<
\f2 \'a3\'a9\'c0\'b4\'b5\'fc\'b4\'fa\'c3\'bf\'b8\'f6\'d4\'aa\'cb\'d8\'a3\'ac\'bc\'ec\'b2\'e9
\f0  someContainer 
\f2 \'d6\'d0\'b5\'c4\'d4\'aa\'cb\'d8\'ca\'c7\'b7\'f1\'b2\'bb\'b5\'c8\'d3\'da
\f0  anotherContainer 
\f2 \'d6\'d0\'b5\'c4\'b6\'d4\'d3\'a6\'d4\'aa\'cb\'d8\'a1\'a3\'c8\'e7\'b9\'fb\'c1\'bd\'b8\'f6\'d4\'aa\'cb\'d8\'b2\'bb\'cf\'e0\'b5\'c8\'a3\'ac\'c4\'c7\'c3\'b4\'c1\'bd\'b8\'f6\'c8\'dd\'c6\'f7\'b2\'bb\'c6\'a5\'c5\'e4\'a3\'ac\'ba\'af\'ca\'fd\'b7\'b5\'bb\'d8
\f0  false
\f2 \'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'c8\'e7\'b9\'fb\'d1\'ad\'bb\'b7\'cc\'e5\'bd\'e1\'ca\'f8\'ba\'f3\'ce\'b4\'b7\'a2\'cf\'d6\'c8\'ce\'ba\'ce\'b2\'bb\'c6\'a5\'c5\'e4\'b5\'c4\'c7\'e9\'bf\'f6\'a3\'ac\'b1\'ed\'c3\'f7\'c1\'bd\'b8\'f6\'c8\'dd\'c6\'f7\'c6\'a5\'c5\'e4\'a3\'ac\'ba\'af\'ca\'fd\'b7\'b5\'bb\'d8
\f0  true
\f2 \'a1\'a3
\f0 \cf4 \
\
\
\cf2 //
\f2 \'be\'df\'d3\'d0\'b7\'ba\'d0\'cd
\f0  where 
\f2 \'d7\'d3\'be\'e4\'b5\'c4\'c0\'a9\'d5\'b9
\f0 \cf4 \
\cf2 //
\f2 \'c4\'e3\'d2\'b2\'bf\'c9\'d2\'d4\'ca\'b9\'d3\'c3\'b7\'ba\'d0\'cd
\f0  where 
\f2 \'d7\'d3\'be\'e4\'d7\'f7\'ce\'aa\'c0\'a9\'d5\'b9\'b5\'c4\'d2\'bb\'b2\'bf\'b7\'d6\'a1\'a3\'bb\'f9\'d3\'da\'d2\'d4\'c7\'b0\'b5\'c4\'c0\'fd\'d7\'d3\'a3\'ac\'cf\'c2\'c3\'e6\'b5\'c4\'ca\'be\'c0\'fd\'c0\'a9\'d5\'b9\'c1\'cb\'b7\'ba\'d0\'cd
\f0  Stack 
\f2 \'bd\'e1\'b9\'b9\'cc\'e5\'a3\'ac\'cc\'ed\'bc\'d3\'d2\'bb\'b8\'f6
\f0  isTop(_:) 
\f2 \'b7\'bd\'b7\'a8\'a1\'a3
\f0 \cf4 \

\f1\b \cf5 extension
\f0\b0 \cf4  \cf7 Stack\cf4  
\f1\b \cf5 where
\f0\b0 \cf4  \cf7 Element\cf4 : \cf7 Equatable\cf4  \{\
    
\f1\b \cf5 func
\f0\b0 \cf4  \cf6 isTop\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  item: \cf7 Element\cf4 ) -> \cf7 Bool\cf4  \{\
        
\f1\b \cf5 guard
\f0\b0 \cf4  
\f1\b \cf5 let
\f0\b0 \cf4  topItem = items.last 
\f1\b \cf5 else
\f0\b0 \cf4  \{\
            
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 false
\f0\b0 \cf4 \
        \}\
        
\f1\b \cf5 return
\f0\b0 \cf4  topItem == item\
    \}\
\}\
\
\cf2 //
\f2 \'d5\'e2\'b8\'f6\'d0\'c2\'b5\'c4
\f0  isTop(_:) 
\f2 \'b7\'bd\'b7\'a8\'ca\'d7\'cf\'c8\'bc\'ec\'b2\'e9\'d5\'e2\'b8\'f6\'d5\'bb\'ca\'c7\'b2\'bb\'ca\'c7\'bf\'d5\'b5\'c4\'a3\'ac\'c8\'bb\'ba\'f3\'b1\'c8\'bd\'cf\'b8\'f8\'b6\'a8\'b5\'c4\'d4\'aa\'cb\'d8\'d3\'eb\'d5\'bb\'b6\'a5\'b2\'bf\'b5\'c4\'d4\'aa\'cb\'d8\'a1\'a3\'c8\'e7\'b9\'fb\'c4\'e3\'b3\'a2\'ca\'d4\'b2\'bb\'d3\'c3\'b7\'ba\'d0\'cd
\f0  where 
\f2 \'d7\'d3\'be\'e4\'a3\'ac\'bb\'e1\'d3\'d0\'d2\'bb\'b8\'f6\'ce\'ca\'cc\'e2\'a3\'ba\'d4\'da
\f0  isTop(_:) 
\f2 \'c0\'ef\'c3\'e6\'ca\'b9\'d3\'c3\'c1\'cb
\f0  == 
\f2 \'d4\'cb\'cb\'e3\'b7\'fb\'a3\'ac\'b5\'ab\'ca\'c7
\f0  Stack 
\f2 \'b5\'c4\'b6\'a8\'d2\'e5\'c3\'bb\'d3\'d0\'d2\'aa\'c7\'f3\'cb\'fc\'b5\'c4\'d4\'aa\'cb\'d8\'ca\'c7\'b7\'fb\'ba\'cf
\f0  Equatable 
\f2 \'d0\'ad\'d2\'e9\'b5\'c4\'a3\'ac\'cb\'f9\'d2\'d4\'ca\'b9\'d3\'c3
\f0  == 
\f2 \'d4\'cb\'cb\'e3\'b7\'fb\'b5\'bc\'d6\'c2\'b1\'e0\'d2\'eb\'ca\'b1\'b4\'ed\'ce\'f3\'a1\'a3\'ca\'b9\'d3\'c3\'b7\'ba\'d0\'cd
\f0  where 
\f2 \'d7\'d3\'be\'e4\'bf\'c9\'d2\'d4\'ce\'aa\'c0\'a9\'d5\'b9\'cc\'ed\'bc\'d3\'d0\'c2\'b5\'c4\'cc\'f5\'bc\'fe\'a3\'ac\'d2\'f2\'b4\'cb\'d6\'bb\'d3\'d0\'b5\'b1\'d5\'bb\'d6\'d0\'b5\'c4\'d4\'aa\'cb\'d8\'b7\'fb\'ba\'cf
\f0  Equatable 
\f2 \'d0\'ad\'d2\'e9\'ca\'b1\'a3\'ac\'c0\'a9\'d5\'b9\'b2\'c5\'bb\'e1\'cc\'ed\'bc\'d3
\f0  isTop(_:) 
\f2 \'b7\'bd\'b7\'a8\'a1\'a3
\f0 \cf4 \
\
\
\cf2 //
\f2 \'c4\'e3\'bf\'c9\'d2\'d4\'ca\'b9\'d3\'c3\'b7\'ba\'d0\'cd
\f0  where 
\f2 \'d7\'d3\'be\'e4\'c8\'a5\'c0\'a9\'d5\'b9\'d2\'bb\'b8\'f6\'d0\'ad\'d2\'e9\'a1\'a3\'bb\'f9\'d3\'da\'d2\'d4\'c7\'b0\'b5\'c4\'ca\'be\'c0\'fd\'a3\'ac\'cf\'c2\'c3\'e6\'b5\'c4\'ca\'be\'c0\'fd\'c0\'a9\'d5\'b9\'c1\'cb
\f0  Container 
\f2 \'d0\'ad\'d2\'e9\'a3\'ac\'cc\'ed\'bc\'d3\'d2\'bb\'b8\'f6
\f0  startsWith(_:) 
\f2 \'b7\'bd\'b7\'a8\'a1\'a3
\f0 \cf4 \

\f1\b \cf5 extension
\f0\b0 \cf4  \cf7 Container\cf4  
\f1\b \cf5 where
\f0\b0 \cf4  \cf7 ItemType\cf4 : \cf7 Equatable\cf4  \{\
    
\f1\b \cf5 func
\f0\b0 \cf4  \cf6 startsWith\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  item: \cf7 ItemType\cf4 ) -> \cf7 Bool\cf4  \{\
        
\f1\b \cf5 return
\f0\b0 \cf4  count >= \cf9 1\cf4  && 
\f1\b \cf5 self
\f0\b0 \cf4 [\cf9 0\cf4 ] == item\
    \}\
\}\
\cf2 //
\f2 \'d5\'e2\'b8\'f6
\f0  startsWith(_:) 
\f2 \'b7\'bd\'b7\'a8\'ca\'d7\'cf\'c8\'c8\'b7\'b1\'a3\'c8\'dd\'c6\'f7\'d6\'c1\'c9\'d9\'d3\'d0\'d2\'bb\'b8\'f6\'d4\'aa\'cb\'d8\'a3\'ac\'c8\'bb\'ba\'f3\'bc\'ec\'b2\'e9\'c8\'dd\'c6\'f7\'d6\'d0\'b5\'c4\'b5\'da\'d2\'bb\'b8\'f6\'d4\'aa\'cb\'d8\'ca\'c7\'b7\'f1\'d3\'eb\'b8\'f8\'b6\'a8\'b5\'c4\'d4\'aa\'cb\'d8\'cf\'e0\'b5\'c8\'a1\'a3\'c8\'ce\'ba\'ce\'b7\'fb\'ba\'cf
\f0  Container 
\f2 \'d0\'ad\'d2\'e9\'b5\'c4\'c0\'e0\'d0\'cd\'b6\'bc\'bf\'c9\'d2\'d4\'ca\'b9\'d3\'c3\'d5\'e2\'b8\'f6\'d0\'c2\'b5\'c4
\f0  startsWith(_:) 
\f2 \'b7\'bd\'b7\'a8\'a3\'ac\'b0\'fc\'c0\'a8\'c9\'cf\'c3\'e6\'ca\'b9\'d3\'c3\'b5\'c4\'d5\'bb\'ba\'cd\'ca\'fd\'d7\'e9\'a3\'ac\'d6\'bb\'d2\'aa\'c8\'dd\'c6\'f7\'b5\'c4\'d4\'aa\'cb\'d8\'ca\'c7\'b7\'fb\'ba\'cf
\f0  Equatable 
\f2 \'d0\'ad\'d2\'e9\'b5\'c4\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'c9\'cf\'ca\'f6\'ca\'be\'c0\'fd\'d6\'d0\'b5\'c4\'b7\'ba\'d0\'cd
\f0  where 
\f2 \'d7\'d3\'be\'e4\'d2\'aa\'c7\'f3
\f0  Item 
\f2 \'b7\'fb\'ba\'cf\'d0\'ad\'d2\'e9\'a3\'ac\'b5\'ab\'d2\'b2\'bf\'c9\'d2\'d4\'b1\'e0\'d0\'b4\'d2\'bb\'b8\'f6\'b7\'ba\'d0\'cd
\f0  where 
\f2 \'d7\'d3\'be\'e4\'c8\'a5\'d2\'aa\'c7\'f3
\f0  ItemType 
\f2 \'ce\'aa\'cc\'d8\'b6\'a8\'c0\'e0\'d0\'cd\'a1\'a3\'c0\'fd\'c8\'e7\'a3\'ba
\f0 \cf4 \

\f1\b \cf5 extension
\f0\b0 \cf4  \cf7 Container\cf4  
\f1\b \cf5 where
\f0\b0 \cf4  \cf7 ItemType\cf4  == \cf7 Double\cf4  \{\
    
\f1\b \cf5 func
\f0\b0 \cf4  \cf6 average\cf4 () -> \cf7 Double\cf4  \{\
        
\f1\b \cf5 var
\f0\b0 \cf4  sum = \cf9 0.0\cf4 \
        
\f1\b \cf5 for
\f0\b0 \cf4  index 
\f1\b \cf5 in
\f0\b0 \cf4  \cf9 0\cf4 ..<count \{\
            sum += 
\f1\b \cf5 self
\f0\b0 \cf4 [index]\
        \}\
        
\f1\b \cf5 return
\f0\b0 \cf4  sum / Double(count)\
    \}\
\}\
\
\cf2 //
\f2 \'b4\'cb\'ca\'be\'c0\'fd\'bd\'ab\'d2\'bb\'b8\'f6
\f0  average() 
\f2 \'b7\'bd\'b7\'a8\'cc\'ed\'bc\'d3\'b5\'bd
\f0  Item 
\f2 \'c0\'e0\'d0\'cd\'ce\'aa
\f0  Double 
\f2 \'b5\'c4\'c8\'dd\'c6\'f7\'d6\'d0\'a1\'a3\'b4\'cb\'b7\'bd\'b7\'a8\'b1\'e9\'c0\'fa\'c8\'dd\'c6\'f7\'d6\'d0\'b5\'c4\'d4\'aa\'cb\'d8\'bd\'ab\'c6\'e4\'c0\'db\'bc\'d3\'a3\'ac\'b2\'a2\'b3\'fd\'d2\'d4\'c8\'dd\'c6\'f7\'b5\'c4\'ca\'fd\'c1\'bf\'bc\'c6\'cb\'e3\'c6\'bd\'be\'f9\'d6\'b5\'a1\'a3\'cb\'fc\'bd\'ab\'ca\'fd\'c1\'bf\'b4\'d3
\f0  Int 
\f2 \'d7\'aa\'bb\'bb\'ce\'aa
\f0  Double 
\f2 \'c8\'b7\'b1\'a3\'c4\'dc\'b9\'bb\'bd\'f8\'d0\'d0\'b8\'a1\'b5\'e3\'b3\'fd\'b7\'a8\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'be\'cd\'cf\'f1\'bf\'c9\'d2\'d4\'d4\'da\'c6\'e4\'cb\'fb\'b5\'d8\'b7\'bd\'d0\'b4\'b7\'ba\'d0\'cd
\f0  where 
\f2 \'d7\'d3\'be\'e4\'d2\'bb\'d1\'f9\'a3\'ac\'c4\'e3\'bf\'c9\'d2\'d4\'d4\'da\'d2\'bb\'b8\'f6\'b7\'ba\'d0\'cd
\f0  where 
\f2 \'d7\'d3\'be\'e4\'d6\'d0\'b0\'fc\'ba\'ac\'b6\'e0\'b8\'f6\'cc\'f5\'bc\'fe\'d7\'f7\'ce\'aa\'c0\'a9\'d5\'b9\'b5\'c4\'d2\'bb\'b2\'bf\'b7\'d6\'a1\'a3\'d3\'c3\'b6\'ba\'ba\'c5\'b7\'d6\'b8\'f4\'c1\'d0\'b1\'ed\'d6\'d0\'b5\'c4\'c3\'bf\'b8\'f6\'cc\'f5\'bc\'fe\'a1\'a3
\f0 \cf4 \
\
\
\cf2 //
\f2 \'be\'df\'d3\'d0\'b7\'ba\'d0\'cd
\f0  where 
\f2 \'d7\'d3\'be\'e4\'b5\'c4\'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd
\f0 \cf4 \
\cf2 //
\f2 \'c4\'e3\'bf\'c9\'d2\'d4\'d4\'da\'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd\'ba\'f3\'c3\'e6\'bc\'d3\'c9\'cf\'be\'df\'d3\'d0\'b7\'ba\'d0\'cd
\f0  where 
\f2 \'b5\'c4\'d7\'d6\'be\'e4\'a1\'a3\'c0\'fd\'c8\'e7\'a3\'ac\'bd\'a8\'c1\'a2\'d2\'bb\'b8\'f6\'b0\'fc\'ba\'ac\'b5\'fc\'b4\'fa\'c6\'f7\'a3\'a8
\f0 Iterator
\f2 \'a3\'a9\'b5\'c4\'c8\'dd\'c6\'f7\'a3\'ac\'be\'cd\'cf\'f1\'ca\'c7\'b1\'ea\'d7\'bc\'bf\'e2\'d6\'d0\'ca\'b9\'d3\'c3\'b5\'c4
\f0  Sequence 
\f2 \'d0\'ad\'d2\'e9\'c4\'c7\'d1\'f9\'a1\'a3\'c4\'e3\'d3\'a6\'b8\'c3\'d5\'e2\'c3\'b4\'d0\'b4\'a3\'ba
\f0 \cf4 \

\f1\b \cf5 protocol
\f0\b0 \cf4  \cf8 ContainerC\cf4  \{\
    
\f1\b \cf5 associatedtype
\f0\b0 \cf4  \cf8 Item\cf4 \
    
\f1\b \cf5 mutating
\f0\b0 \cf4  
\f1\b \cf5 func
\f0\b0 \cf4  \cf6 append\cf4 (
\f1\b \cf5 _
\f0\b0 \cf4  item: \cf7 Item\cf4 )\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf6 count\cf4 : \cf7 Int\cf4  \{ 
\f1\b \cf5 get
\f0\b0 \cf4  \}\
    
\f1\b \cf5 subscript
\f0\b0 \cf4 (i: \cf7 Int\cf4 ) -> \cf7 Item\cf4  \{ 
\f1\b \cf5 get
\f0\b0 \cf4  \}\
    \
    
\f1\b \cf5 associatedtype
\f0\b0 \cf4  \cf8 Iterator\cf4 : \cf7 IteratorProtocol\cf4  
\f1\b \cf5 where
\f0\b0 \cf4  \cf7 Iterator\cf4 .\cf7 Element\cf4  == \cf7 Item\cf4 \
    
\f1\b \cf5 func
\f0\b0 \cf4  \cf6 makeIterator\cf4 () -> \cf7 Iterator\cf4 \
\}\
\
\cf2 //
\f2 \'b5\'fc\'b4\'fa\'c6\'f7\'a3\'a8
\f0 Iterator
\f2 \'a3\'a9\'b5\'c4\'b7\'ba\'d0\'cd
\f0  where 
\f2 \'d7\'d3\'be\'e4\'d2\'aa\'c7\'f3\'a3\'ba\'ce\'de\'c2\'db\'b5\'fc\'b4\'fa\'c6\'f7\'ca\'c7\'ca\'b2\'c3\'b4\'c0\'e0\'d0\'cd\'a3\'ac\'b5\'fc\'b4\'fa\'c6\'f7\'d6\'d0\'b5\'c4\'d4\'aa\'cb\'d8\'c0\'e0\'d0\'cd\'a3\'ac\'b1\'d8\'d0\'eb\'ba\'cd\'c8\'dd\'c6\'f7\'cf\'ee\'c4\'bf\'b5\'c4\'c0\'e0\'d0\'cd\'b1\'a3\'b3\'d6\'d2\'bb\'d6\'c2\'a1\'a3
\f0 makeIterator() 
\f2 \'d4\'f2\'cc\'e1\'b9\'a9\'c1\'cb\'c8\'dd\'c6\'f7\'b5\'c4\'b5\'fc\'b4\'fa\'c6\'f7\'b5\'c4\'b7\'c3\'ce\'ca\'bd\'d3\'bf\'da\'a1\'a3
\f0 \cf4 \
\
\cf2 //
\f2 \'d2\'bb\'b8\'f6\'d0\'ad\'d2\'e9\'bc\'cc\'b3\'d0\'c1\'cb\'c1\'ed\'d2\'bb\'b8\'f6\'d0\'ad\'d2\'e9\'a3\'ac\'c4\'e3\'cd\'a8\'b9\'fd\'d4\'da\'d0\'ad\'d2\'e9\'c9\'f9\'c3\'f7\'b5\'c4\'ca\'b1\'ba\'f2\'a3\'ac\'b0\'fc\'ba\'ac\'b7\'ba\'d0\'cd
\f0  where 
\f2 \'d7\'d3\'be\'e4\'a3\'ac\'c0\'b4\'cc\'ed\'bc\'d3\'c1\'cb\'d2\'bb\'b8\'f6\'d4\'bc\'ca\'f8\'b5\'bd\'b1\'bb\'bc\'cc\'b3\'d0\'d0\'ad\'d2\'e9\'b5\'c4\'b9\'d8\'c1\'aa\'c0\'e0\'d0\'cd\'a1\'a3\'c0\'fd\'c8\'e7\'a3\'ac\'cf\'c2\'c3\'e6\'b5\'c4\'b4\'fa\'c2\'eb\'c9\'f9\'c3\'f7\'c1\'cb\'d2\'bb\'b8\'f6
\f0  ComparableContainer 
\f2 \'d0\'ad\'d2\'e9\'a3\'ac\'cb\'fc\'d2\'aa\'c7\'f3\'cb\'f9\'d3\'d0\'b5\'c4
\f0  Item 
\f2 \'b1\'d8\'d0\'eb\'ca\'c7
\f0  Comparable 
\f2 \'b5\'c4\'a1\'a3
\f0 \cf4 \
\

\f1\b \cf5 protocol
\f0\b0 \cf4  \cf8 ComparableContainer\cf4 : \cf7 ContainerC\cf4  
\f1\b \cf5 where
\f0\b0 \cf4  \cf7 Item\cf4 : \cf7 Comparable\cf4  \{\}\
\
\
\cf2 //
\f2 \'b7\'ba\'d0\'cd\'cf\'c2\'b1\'ea
\f0 \cf4 \
\cf2 //
\f2 \'cf\'c2\'b1\'ea\'c4\'dc\'b9\'bb\'ca\'c7\'b7\'ba\'d0\'cd\'b5\'c4\'a3\'ac\'cb\'fb\'c3\'c7\'c4\'dc\'b9\'bb\'b0\'fc\'ba\'ac\'b7\'ba\'d0\'cd
\f0  where 
\f2 \'d7\'d3\'be\'e4\'a1\'a3\'c4\'e3\'bf\'c9\'d2\'d4\'b0\'d1\'d5\'bc\'ce\'bb\'b7\'fb\'c0\'e0\'d0\'cd\'b5\'c4\'c3\'fb\'b3\'c6\'d0\'b4\'d4\'da
\f0  subscript 
\f2 \'ba\'f3\'c3\'e6\'b5\'c4\'bc\'e2\'c0\'a8\'ba\'c5\'c0\'ef\'a3\'ac\'d4\'da\'cf\'c2\'b1\'ea\'b4\'fa\'c2\'eb\'cc\'e5\'bf\'aa\'ca\'bc\'b5\'c4\'b1\'ea\'d6\'be\'b5\'c4\'bb\'a8\'c0\'a8\'ba\'c5\'d6\'ae\'c7\'b0\'d0\'b4\'cf\'c2\'b7\'ba\'d0\'cd
\f0  where 
\f2 \'d7\'d3\'be\'e4\'a1\'a3\'c0\'fd\'c8\'e7\'a3\'ba
\f0 \cf4 \

\f1\b \cf5 extension
\f0\b0 \cf4  \cf7 ContainerC\cf4  \{\
    
\f1\b \cf5 subscript
\f0\b0 \cf4 <\cf8 Indices\cf4 : \cf7 Sequence\cf4 >(indices: \cf7 Indices\cf4 ) -> [\cf7 Item\cf4 ] 
\f1\b \cf5 where
\f0\b0 \cf4  \cf7 Indices\cf4 .\cf7 Iterator\cf4 .\cf7 Element\cf4  == \cf7 Int\cf4  \{\
        
\f1\b \cf5 var
\f0\b0 \cf4  result = [Item]()\
        
\f1\b \cf5 for
\f0\b0 \cf4  index 
\f1\b \cf5 in
\f0\b0 \cf4  indices \{\
            result.append(
\f1\b \cf5 self
\f0\b0 \cf4 [index])\
        \}\
        
\f1\b \cf5 return
\f0\b0 \cf4  result\
    \}\
\}\
\
\cf2 //
\f2 \'d5\'e2\'b8\'f6
\f0  Container 
\f2 \'d0\'ad\'d2\'e9\'b5\'c4\'c0\'a9\'d5\'b9\'cc\'ed\'bc\'d3\'c1\'cb\'d2\'bb\'b8\'f6\'cf\'c2\'b1\'ea\'b7\'bd\'b7\'a8\'a3\'ac\'bd\'d3\'ca\'d5\'d2\'bb\'b8\'f6\'cb\'f7\'d2\'fd\'b5\'c4\'bc\'af\'ba\'cf\'a3\'ac\'b7\'b5\'bb\'d8\'c3\'bf\'d2\'bb\'b8\'f6\'cb\'f7\'d2\'fd\'cb\'f9\'d4\'da\'b5\'c4\'d6\'b5\'b5\'c4\'ca\'fd\'d7\'e9\'a1\'a3\'d5\'e2\'b8\'f6\'b7\'ba\'d0\'cd\'cf\'c2\'b1\'ea\'b5\'c4\'d4\'bc\'ca\'f8\'c8\'e7\'cf\'c2\'a3\'ba
\f0 \cf4 \
\
\cf2 //
\f2 \'d5\'e2\'b8\'f6
\f0  Container 
\f2 \'d0\'ad\'d2\'e9\'b5\'c4\'c0\'a9\'d5\'b9\'cc\'ed\'bc\'d3\'c1\'cb\'d2\'bb\'b8\'f6\'cf\'c2\'b1\'ea\'a3\'ba\'cf\'c2\'b1\'ea\'ca\'c7\'d2\'bb\'b8\'f6\'d0\'f2\'c1\'d0\'b5\'c4\'cb\'f7\'d2\'fd\'a3\'ac\'b7\'b5\'bb\'d8\'b5\'c4\'d4\'f2\'ca\'c7\'cb\'f7\'d2\'fd\'cb\'f9\'d4\'da\'b5\'c4\'cf\'ee\'c4\'bf\'b5\'c4\'d6\'b5\'cb\'f9\'b9\'b9\'b3\'c9\'b5\'c4\'ca\'fd\'d7\'e9\'a1\'a3\'d5\'e2\'b8\'f6\'b7\'ba\'d0\'cd\'cf\'c2\'b1\'ea\'b5\'c4\'d4\'bc\'ca\'f8\'c8\'e7\'cf\'c2\'a3\'ba
\f0 \cf4 \
\
\cf2 //
\f2 \'d4\'da\'bc\'e2\'c0\'a8\'ba\'c5\'d6\'d0\'b5\'c4\'b7\'ba\'d0\'cd\'b2\'ce\'ca\'fd
\f0  Indices
\f2 \'a3\'ac\'b1\'d8\'d0\'eb\'ca\'c7\'b7\'fb\'ba\'cf\'b1\'ea\'d7\'bc\'bf\'e2\'d6\'d0\'b5\'c4
\f0  Sequence 
\f2 \'d0\'ad\'d2\'e9\'b5\'c4\'c0\'e0\'d0\'cd\'a1\'a3
\f0 \cf4 \
\cf2 //
\f2 \'cf\'c2\'b1\'ea\'ca\'b9\'d3\'c3\'b5\'c4\'b5\'a5\'d2\'bb\'b5\'c4\'b2\'ce\'ca\'fd\'a3\'ac
\f0 indices
\f2 \'a3\'ac\'b1\'d8\'d0\'eb\'ca\'c7
\f0  Indices 
\f2 \'b5\'c4\'ca\'b5\'c0\'fd\'a1\'a3
\f0 \cf4 \
\cf2 //
\f2 \'b7\'ba\'d0\'cd
\f0  where 
\f2 \'d7\'d3\'be\'e4\'d2\'aa\'c7\'f3
\f0  Sequence
\f2 \'a3\'a8
\f0 Indices
\f2 \'a3\'a9\'b5\'c4\'b5\'fc\'b4\'fa\'c6\'f7\'a3\'ac\'c6\'e4\'cb\'f9\'d3\'d0\'b5\'c4\'d4\'aa\'cb\'d8\'b6\'bc\'ca\'c7
\f0  Int 
\f2 \'c0\'e0\'d0\'cd\'a1\'a3\'d5\'e2\'d1\'f9\'be\'cd\'c4\'dc\'c8\'b7\'b1\'a3\'d4\'da\'d0\'f2\'c1\'d0\'a3\'a8
\f0 Sequence
\f2 \'a3\'a9\'d6\'d0\'b5\'c4\'cb\'f7\'d2\'fd\'ba\'cd\'c8\'dd\'c6\'f7
\f0 (Container)
\f2 \'c0\'ef\'c3\'e6\'b5\'c4\'cb\'f7\'d2\'fd\'c0\'e0\'d0\'cd\'ca\'c7\'d2\'bb\'d6\'c2\'b5\'c4\'a1\'a3
\f0 \cf4 \
\cf2 //
\f2 \'d7\'db\'ba\'cf\'d2\'bb\'cf\'c2\'a3\'ac\'d5\'e2\'d0\'a9\'d4\'bc\'ca\'f8\'d2\'e2\'ce\'b6\'d7\'c5\'a3\'ac\'b4\'ab\'c8\'eb\'b5\'bd
\f0  indices 
\f2 \'cf\'c2\'b1\'ea\'a3\'ac\'ca\'c7\'d2\'bb\'b8\'f6\'d5\'fb\'d0\'cd\'b5\'c4\'d0\'f2\'c1\'d0
\f0 . (
\f2 \'d2\'eb\'d5\'df\'a3\'ba\'d4\'ad\'c0\'b4\'b5\'c4
\f0  Container 
\f2 \'d0\'ad\'d2\'e9\'a3\'ac
\f0 subscript 
\f2 \'b1\'d8\'d0\'eb\'ca\'c7
\f0  Int 
\f2 \'d0\'cd\'b5\'c4\'a3\'ac\'c0\'a9\'d5\'b9\'d6\'d0\'d0\'c2\'b5\'c4
\f0  subscript
\f2 \'a3\'ac\'d4\'ca\'d0\'ed\'cf\'c2\'b1\'ea\'ca\'c7\'d2\'bb\'b8\'f6\'b5\'c4\'d0\'f2\'c1\'d0\'a3\'ac\'b6\'f8\'b7\'c7\'b5\'a5\'d2\'bb\'b5\'c4\'d6\'b5\'a1\'a3
\f0 )\cf4 \
\
\
\
\

\f1\b \cf5 class
\f0\b0 \cf4  \cf8 GenericityUsage\cf4 : \cf7 NSObject\cf4  \{\
    \
    
\f1\b \cf5 func
\f0\b0 \cf4  \cf6 execute\cf4 () \{\
        
\f1\b \cf5 var
\f0\b0 \cf4  someInt = \cf9 3\cf4 \
        
\f1\b \cf5 var
\f0\b0 \cf4  anotherInt = \cf9 107\cf4 \
        swapTwoInts(&someInt, &anotherInt)\
        print(\cf10 "someInt is now \cf4 \\(someInt)\cf10 , and anotherInt is now \cf4 \\(anotherInt)\cf10 "\cf4 )\
        \cf2 // 
\f2 \'b4\'f2\'d3\'a1
\f0  \'93someInt is now 107, and anotherInt is now 3\'94\cf4 \
        \
        swapTwoValues(&someInt, &anotherInt)\
        print(\cf10 "someInt is now \cf4 \\(someInt)\cf10 , and anotherInt is now \cf4 \\(anotherInt)\cf10 "\cf4 )\
\
        
\f1\b \cf5 var
\f0\b0 \cf4  someString = \cf10 "hello"\cf4 \
        
\f1\b \cf5 var
\f0\b0 \cf4  anotherString = \cf10 "world"\cf4 \
        swapTwoValues(&someString, &anotherString)\
        print(\cf10 "someString is now \cf4 \\(someString)\cf10 , and anotherString is now \cf4 \\(anotherString)\cf10 "\cf4 )\
        \cf2 // someString 
\f2 \'cf\'d6\'d4\'da
\f0  "world", and anotherString 
\f2 \'cf\'d6\'d4\'da
\f0  "hello"\cf4 \
        \
        \cf2 //
\f2 \'c4\'e3\'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd\'d4\'da\'bc\'e2\'c0\'a8\'ba\'c5\'d6\'d0\'d0\'b4\'b3\'f6\'d5\'bb\'d6\'d0\'d0\'e8\'d2\'aa\'b4\'e6\'b4\'a2\'b5\'c4\'ca\'fd\'be\'dd\'c0\'e0\'d0\'cd\'c0\'b4\'b4\'b4\'bd\'a8\'b2\'a2\'b3\'f5\'ca\'bc\'bb\'af\'d2\'bb\'b8\'f6
\f0  Stack 
\f2 \'ca\'b5\'c0\'fd\'a1\'a3\'c0\'fd\'c8\'e7\'a3\'ac\'d2\'aa\'b4\'b4\'bd\'a8\'d2\'bb\'b8\'f6
\f0  String 
\f2 \'c0\'e0\'d0\'cd\'b5\'c4\'d5\'bb\'a3\'ac\'bf\'c9\'d2\'d4\'d0\'b4\'b3\'c9
\f0  Stack<String>()
\f2 \'a3\'ba
\f0 \cf4 \
        
\f1\b \cf5 var
\f0\b0 \cf4  stackOfStrings = Stack<\cf7 String\cf4 >()\
        stackOfStrings.push(\cf10 "uno"\cf4 )\
        stackOfStrings.push(\cf10 "dos"\cf4 )\
        stackOfStrings.push(\cf10 "tres"\cf4 )\
        stackOfStrings.push(\cf10 "cuatro"\cf4 )\
        \cf2 // 
\f2 \'d5\'bb\'d6\'d0\'cf\'d6\'d4\'da\'d3\'d0
\f0  4 
\f2 \'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae
\f0 \cf4 \
        print(\cf10 "stackOfStrings.items are \cf4 \\(stackOfStrings.items)\cf10 "\cf4 )\
        \cf2 //
\f2 \'d2\'c6\'b3\'fd\'b2\'a2\'b7\'b5\'bb\'d8\'d5\'bb\'b6\'a5\'b2\'bf\'b5\'c4\'d6\'b5
\f0  "cuatro"
\f2 \'a3\'ac\'bc\'b4\'bd\'ab\'c6\'e4\'b3\'f6\'d5\'bb\'a3\'ba
\f0 \cf4 \
        
\f1\b \cf5 let
\f0\b0 \cf4  fromTheTop = stackOfStrings.pop()\
        print(\cf10 "popItem is \cf4 \\(fromTheTop)\cf10 , stackOfStrings.items are \cf4 \\(stackOfStrings.items)\cf10 "\cf4 )\
\
        \cf2 //
\f2 \'bc\'c6\'cb\'e3\'d0\'cd\'ca\'f4\'d0\'d4
\f0  topItem 
\f2 \'cf\'d6\'d4\'da\'bf\'c9\'d2\'d4\'d3\'c3\'c0\'b4\'b7\'c3\'ce\'ca\'c8\'ce\'d2\'e2
\f0  Stack 
\f2 \'ca\'b5\'c0\'fd\'b5\'c4\'b6\'a5\'b6\'cb\'d4\'aa\'cb\'d8\'c7\'d2\'b2\'bb\'d2\'c6\'b3\'fd\'cb\'fc\'a3\'ba
\f0 \cf4 \
        
\f1\b \cf5 if
\f0\b0 \cf4  
\f1\b \cf5 let
\f0\b0 \cf4  topItem = stackOfStrings.topItem \{\
            print(\cf10 "The top item on the stack is \cf4 \\(topItem)\cf10 ."\cf4 )\
        \}\
        \cf2 // 
\f2 \'b4\'f2\'d3\'a1
\f0  \'93The top item on the stack is tres.\'94\cf4 \
        \
        \cf2 //findIndex(ofString:in:) 
\f2 \'ba\'af\'ca\'fd\'bf\'c9\'d2\'d4\'d3\'c3\'d3\'da\'b2\'e9\'d5\'d2\'d7\'d6\'b7\'fb\'b4\'ae\'ca\'fd\'d7\'e9\'d6\'d0\'b5\'c4\'c4\'b3\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'a3\'ba
\f0 \cf4 \
        
\f1\b \cf5 let
\f0\b0 \cf4  strings = [\cf10 "cat"\cf4 , \cf10 "dog"\cf4 , \cf10 "llama"\cf4 , \cf10 "parakeet"\cf4 , \cf10 "terrapin"\cf4 ]\
        
\f1\b \cf5 if
\f0\b0 \cf4  
\f1\b \cf5 let
\f0\b0 \cf4  foundIndex = findIndex(ofString: \cf10 "llama"\cf4 , in: strings) \{\
            print(\cf10 "The index of llama is \cf4 \\(foundIndex)\cf10 "\cf4 )\
        \}\
        \cf2 // 
\f2 \'b4\'f2\'d3\'a1
\f0  \'93The index of llama is 2\'94\cf4 \
        \
        \cf2 //findIndex(of:in:) 
\f2 \'ba\'af\'ca\'fd\'cf\'d6\'d4\'da\'bf\'c9\'d2\'d4\'b3\'c9\'b9\'a6\'b1\'e0\'d2\'eb\'c1\'cb\'a3\'ac\'b2\'a2\'c7\'d2\'bf\'c9\'d2\'d4\'d7\'f7\'d3\'c3\'d3\'da\'c8\'ce\'ba\'ce\'b7\'fb\'ba\'cf
\f0  Equatable 
\f2 \'b5\'c4\'c0\'e0\'d0\'cd\'a3\'ac\'c8\'e7
\f0  Double 
\f2 \'bb\'f2
\f0  String
\f2 \'a3\'ba
\f0 \cf4 \
        
\f1\b \cf5 let
\f0\b0 \cf4  doubleIndex = findIndex(of: \cf9 9.3\cf4 , in: [\cf9 3.14159\cf4 , \cf9 0.1\cf4 , \cf9 0.25\cf4 ])\
        print(\cf10 "doubleIndex is \cf4 \\(String(describing: doubleIndex))\cf10 "\cf4 )\
        \cf2 // doubleIndex 
\f2 \'c0\'e0\'d0\'cd\'ce\'aa
\f0  Int?
\f2 \'a3\'ac\'c6\'e4\'d6\'b5\'ce\'aa
\f0  nil
\f2 \'a3\'ac\'d2\'f2\'ce\'aa
\f0  9.3 
\f2 \'b2\'bb\'d4\'da\'ca\'fd\'d7\'e9\'d6\'d0
\f0 \cf4 \
        
\f1\b \cf5 let
\f0\b0 \cf4  stringIndex = findIndex(of: \cf10 "Andrea"\cf4 , in: [\cf10 "Mike"\cf4 , \cf10 "Malcolm"\cf4 , \cf10 "Andrea"\cf4 ])\
        \cf2 // stringIndex 
\f2 \'c0\'e0\'d0\'cd\'ce\'aa
\f0  Int?
\f2 \'a3\'ac\'c6\'e4\'d6\'b5\'ce\'aa
\f0  2\cf4 \
        print(\cf10 "stringIndex is \cf4 \\(String(describing: stringIndex))\cf10 "\cf4 )\
\
        \cf2 //
\f2 \'cf\'c2\'c3\'e6\'d1\'dd\'ca\'be\'c1\'cb
\f0  allItemsMatch(_:_:) 
\f2 \'ba\'af\'ca\'fd\'b5\'c4\'ca\'b9\'d3\'c3\'a3\'ba
\f0 \cf4 \
        
\f1\b \cf5 let
\f0\b0 \cf4  arrayOfStrings = [\cf10 "uno"\cf4 , \cf10 "dos"\cf4 , \cf10 "tres"\cf4 ]\
        \
        
\f1\b \cf5 if
\f0\b0 \cf4  allItemsMatch(stackOfStrings.items, arrayOfStrings) \{\
            print(\cf10 "All items match."\cf4 )\
        \} 
\f1\b \cf5 else
\f0\b0 \cf4  \{\
            print(\cf10 "Not all items match."\cf4 )\
        \}\
        \cf2 // 
\f2 \'b4\'f2\'d3\'a1
\f0  \'93All items match.\'94\cf4 \
        \cf2 //
\f2 \'c9\'cf\'c3\'e6\'b5\'c4\'c0\'fd\'d7\'d3\'b4\'b4\'bd\'a8\'c1\'cb\'d2\'bb\'b8\'f6
\f0  Stack 
\f2 \'ca\'b5\'c0\'fd\'c0\'b4\'b4\'e6\'b4\'a2\'d2\'bb\'d0\'a9
\f0  String 
\f2 \'d6\'b5\'a3\'ac\'c8\'bb\'ba\'f3\'bd\'ab\'c8\'fd\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'d1\'b9\'c8\'eb\'d5\'bb\'d6\'d0\'a1\'a3\'d5\'e2\'b8\'f6\'c0\'fd\'d7\'d3\'bb\'b9\'cd\'a8\'b9\'fd\'ca\'fd\'d7\'e9\'d7\'d6\'c3\'e6\'c1\'bf\'b4\'b4\'bd\'a8\'c1\'cb\'d2\'bb\'b8\'f6
\f0  Array 
\f2 \'ca\'b5\'c0\'fd\'a3\'ac\'ca\'fd\'d7\'e9\'d6\'d0\'b0\'fc\'ba\'ac\'cd\'ac\'d5\'bb\'d6\'d0\'d2\'bb\'d1\'f9\'b5\'c4\'c8\'fd\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'a1\'a3\'bc\'b4\'ca\'b9\'d5\'bb\'ba\'cd\'ca\'fd\'d7\'e9\'ca\'c7\'b2\'bb\'cd\'ac\'b5\'c4\'c0\'e0\'d0\'cd\'a3\'ac\'b5\'ab\'cb\'fc\'c3\'c7\'b6\'bc\'d7\'f1\'b4\'d3
\f0  Container 
\f2 \'d0\'ad\'d2\'e9\'a3\'ac\'b6\'f8\'c7\'d2\'cb\'fc\'c3\'c7\'b6\'bc\'b0\'fc\'ba\'ac\'cf\'e0\'cd\'ac\'c0\'e0\'d0\'cd\'b5\'c4\'d6\'b5\'a1\'a3\'d2\'f2\'b4\'cb\'c4\'e3\'bf\'c9\'d2\'d4\'d3\'c3\'d5\'e2\'c1\'bd\'b8\'f6\'c8\'dd\'c6\'f7\'d7\'f7\'ce\'aa\'b2\'ce\'ca\'fd\'c0\'b4\'b5\'f7\'d3\'c3
\f0  allItemsMatch(_:_:) 
\f2 \'ba\'af\'ca\'fd\'a1\'a3\'d4\'da\'c9\'cf\'c3\'e6\'b5\'c4\'c0\'fd\'d7\'d3\'d6\'d0\'a3\'ac
\f0 allItemsMatch(_:_:) 
\f2 \'ba\'af\'ca\'fd\'d5\'fd\'c8\'b7\'b5\'d8\'cf\'d4\'ca\'be\'c1\'cb\'d5\'e2\'c1\'bd\'b8\'f6\'c8\'dd\'c6\'f7\'d6\'d0\'b5\'c4\'cb\'f9\'d3\'d0\'d4\'aa\'cb\'d8\'b6\'bc\'ca\'c7\'cf\'e0\'bb\'a5\'c6\'a5\'c5\'e4\'b5\'c4\'a1\'a3
\f0 \cf4 \
        \
        \cf2 //
\f2 \'d2\'d4\'cf\'c2\'ca\'c7
\f0  isTop(_:) 
\f2 \'b7\'bd\'b7\'a8\'b5\'c4\'b5\'f7\'d3\'c3\'b7\'bd\'ca\'bd\'a3\'ba
\f0 \cf4 \
        
\f1\b \cf5 if
\f0\b0 \cf4  stackOfStrings.isTop(\cf10 "tres"\cf4 ) \{\
            print(\cf10 "Top element is tres."\cf4 )\
        \} 
\f1\b \cf5 else
\f0\b0 \cf4  \{\
            print(\cf10 "Top element is something else."\cf4 )\
        \}\
        \cf2 // 
\f2 \'b4\'f2\'d3\'a1
\f0  "Top element is tres."\cf4 \
\
        \cf2 //
\f2 \'c8\'e7\'b9\'fb\'b3\'a2\'ca\'d4\'d4\'da\'c6\'e4\'d4\'aa\'cb\'d8\'b2\'bb\'b7\'fb\'ba\'cf
\f0  Equatable 
\f2 \'d0\'ad\'d2\'e9\'b5\'c4\'d5\'bb\'c9\'cf\'b5\'f7\'d3\'c3
\f0  isTop(_:) 
\f2 \'b7\'bd\'b7\'a8\'a3\'ac\'d4\'f2\'bb\'e1\'ca\'d5\'b5\'bd\'b1\'e0\'d2\'eb\'ca\'b1\'b4\'ed\'ce\'f3\'a1\'a3
\f0 \cf4 \
        
\f1\b \cf5 struct
\f0\b0 \cf4  \cf8 NotEquatable\cf4  \{ \}\
        
\f1\b \cf5 var
\f0\b0 \cf4  notEquatableStack = Stack<\cf7 NotEquatable\cf4 >()\
        
\f1\b \cf5 let
\f0\b0 \cf4  notEquatableValue = \cf7 NotEquatable\cf4 ()\
        notEquatableStack.push(notEquatableValue)\
        \cf2 //notEquatableStack.isTop(notEquatableValue)  // 
\f2 \'b1\'a8\'b4\'ed
\f0 \cf4 \
        \
        \cf2 //
\f2 \'ca\'b9\'d3\'c3\'b7\'ba\'d0\'cd
\f0  where 
\f2 \'d7\'d3\'be\'e4\'c8\'a5\'c0\'a9\'d5\'b9\'d2\'bb\'b8\'f6\'d0\'ad\'d2\'e9\'a1\'a3\'bb\'f9\'d3\'da\'d2\'d4\'c7\'b0\'b5\'c4\'ca\'be\'c0\'fd\'a3\'ac\'cf\'c2\'c3\'e6\'b5\'c4\'ca\'be\'c0\'fd\'c0\'a9\'d5\'b9\'c1\'cb
\f0  Container 
\f2 \'d0\'ad\'d2\'e9\'a3\'ac\'cc\'ed\'bc\'d3\'d2\'bb\'b8\'f6
\f0  startsWith(_:) 
\f2 \'b7\'bd\'b7\'a8
\f0 \cf4 \
        
\f1\b \cf5 if
\f0\b0 \cf4  [\cf9 9\cf4 , \cf9 9\cf4 , \cf9 9\cf4 ].startsWith(\cf9 42\cf4 ) \{\
            print(\cf10 "Starts with 42."\cf4 )\
        \} 
\f1\b \cf5 else
\f0\b0 \cf4  \{\
            print(\cf10 "Starts with something else."\cf4 )\
        \}\
        \cf2 // 
\f2 \'b4\'f2\'d3\'a1
\f0  "Starts with something else."\cf4 \
\
        \cf2 //
\f2 \'b1\'e0\'d0\'b4\'d2\'bb\'b8\'f6\'b7\'ba\'d0\'cd
\f0  where 
\f2 \'d7\'d3\'be\'e4\'c8\'a5\'d2\'aa\'c7\'f3
\f0  ItemType 
\f2 \'ce\'aa\'cc\'d8\'b6\'a8\'c0\'e0\'d0\'cd
\f0 \cf4 \
        print([\cf9 1260.0\cf4 , \cf9 1200.0\cf4 , \cf9 98.6\cf4 , \cf9 37.0\cf4 ].average())\
        \cf2 // 
\f2 \'b4\'f2\'d3\'a1
\f0  "648.9"\cf4 \
\
    \}\
    \
\}\
}